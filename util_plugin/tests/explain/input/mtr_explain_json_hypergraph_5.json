{
  "query": "/* select#1 */ select sql_big_result `test`.`t1`.`col_varchar_key` AS `field1` from `test`.`t1` join `test`.`t1` `alias1` anti join (`test`.`t1` `alias2`) on(((`alias2`.`col_varchar_key` >= `test`.`t1`.`col_varchar`))) where true group by `field1`",
  "query_plan": {
    "inputs": [
      {
        "inputs": [
          {
            "inputs": [
              {
                "alias": "alias1",
                "operation": "Table scan on alias1",
                "table_name": "t1",
                "access_type": "table",
                "schema_name": "test",
                "estimated_rows": "elided",
                "estimated_total_cost": "elided",
                "estimated_first_row_cost": "elided"
              },
              {
                "inputs": [
                  {
                    "operation": "Table scan on t1",
                    "table_name": "t1",
                    "access_type": "table",
                    "schema_name": "test",
                    "used_columns": [
                      "col_varchar",
                      "col_varchar_key"
                    ],
                    "estimated_rows": "elided",
                    "estimated_total_cost": "elided",
                    "estimated_first_row_cost": "elided"
                  },
                  {
                    "alias": "alias2",
                    "heading": "Hash",
                    "operation": "Table scan on alias2",
                    "table_name": "t1",
                    "access_type": "table",
                    "schema_name": "test",
                    "used_columns": [
                      "col_varchar_key"
                    ],
                    "estimated_rows": "elided",
                    "estimated_total_cost": "elided",
                    "estimated_first_row_cost": "elided"
                  }
                ],
                "heading": "Hash",
                "join_type": "antijoin",
                "operation": "Hash antijoin (no condition), extra conditions: (alias2.col_varchar_key >= t1.col_varchar)",
                "access_type": "join",
                "join_columns": [
                  "alias2.col_varchar_key",
                  "test.t1.col_varchar"
                ],
                "estimated_rows": "elided",
                "hash_condition": [],
                "join_algorithm": "hash",
                "extra_condition": [
                  "(alias2.col_varchar_key >= t1.col_varchar)"
                ],
                "estimated_total_cost": "elided",
                "estimated_first_row_cost": "elided"
              }
            ],
            "join_type": "inner join",
            "operation": "Inner hash join (no condition)",
            "access_type": "join",
            "join_columns": [],
            "estimated_rows": "elided",
            "hash_condition": [],
            "join_algorithm": "hash",
            "estimated_total_cost": "elided",
            "estimated_first_row_cost": "elided"
          }
        ],
        "operation": "Sort: t1.col_varchar_key",
        "access_type": "sort",
        "sort_fields": [
          "t1.col_varchar_key"
        ],
        "estimated_rows": "elided",
        "estimated_total_cost": "elided",
        "estimated_first_row_cost": "elided"
      }
    ],
    "group_by": true,
    "functions": [],
    "operation": "Group (no aggregates)",
    "access_type": "aggregate",
    "estimated_rows": "elided",
    "estimated_total_cost": "elided",
    "estimated_first_row_cost": "elided"
  },
  "query_type": "select",
  "json_schema_version": "2.0"
}