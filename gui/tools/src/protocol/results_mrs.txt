export interface IMrsDbObjectParameterData {
    id?: string;
    position: number;
    name: string;
    mode: string;
    datatype: string;
    charset?: string;
    collation?: string;
}

export interface IMrsDbObjectData extends IDictionary {
    changedAt?: string;
    comments: string;
    crudOperations: string[];
    crudOperationFormat: string;
    dbSchemaId: string;
    enabled: number;
    hostCtx?: string;
    id: string;
    itemsPerPage?: number;
    name: string;
    objectType: MrsDbObjectType;
    requestPath: string;
    requiresAuth: number;
    schemaRequestPath?: string;
    schemaName?: string;
    qualifiedName?: string;
    serviceId: string;
    mediaType?: string;
    autoDetectMediaType: number;
    authStoredProcedure?: string;
    options?: IShellDictionary;
    metadata?: IShellDictionary;
    objects?: IMrsObject[];
}

export interface IMrsContentSetData {
    contentType: string;
    comments: string;
    enabled: number;
    hostCtx: string;
    id: string;
    requestPath: string;
    requiresAuth: number;
    serviceId: string;
    options: IShellDictionary;
    scriptModuleFiles?: IMrsScriptModuleFile[];
    scriptModuleDefinitions?: IMrsScriptDefinitions;
}

export interface IMrsContentFileData {
    id: string;
    contentSetId: string;
    requestPath: string;
    requiresAuth: boolean;
    enabled: number;
    size: number;
    contentSetRequestPath: string;
    hostCtx: string;
    changedAt: string;
}

export interface IMrsAddContentSetData {
    contentSetId?: string;
    numberOfFilesUploaded?: number;
    info?: string;
}

export interface IMrsScriptModuleFile {
    fileInfo: IMrsScriptFileInfo;
    fileToLoad: string;
    className: string;
}

export interface IMrsServiceDevelopmentOptions {
    developers: string[];
}

export interface IMrsServiceData {
    enabled: number;
    published: number;
    hostCtx: string;
    fullServicePath?: string;
    name: string;
    sortedDevelopers?: string;
    id: string;
    isCurrent: number;
    urlContextRoot: string;
    urlHostName: string;
    urlProtocol: string;
    comments: string;
    options: IShellDictionary;
    authPath: string;
    authCompletedUrl: string;
    authCompletedUrlValidation: string;
    authCompletedPageContent: string;
    authApps?: IMrsAuthAppData[];
    enableSqlEndpoint?: number;
    customMetadataSchema?: string;
    metadata?: IShellDictionary;
    inDevelopment?: IMrsServiceDevelopmentOptions;
}

export interface IMrsAddAuthAppData {
    authAppId: string;
}

export interface IMrsAuthAppData {
    id?: string;
    authVendorId?: string;
    authVendor?: string;
    authVendorName?: string;
    serviceId?: string;
    name?: string;
    description?: string;
    url?: string;
    urlDirectAuth?: string;
    accessToken?: string;
    appId?: string;
    enabled: boolean;
    limitToRegisteredUsers: boolean;
    defaultRoleId: string | null;
}

export interface IMrsAuthVendorData {
    id?: string;
    name: string;
    validationUrl?: string;
    enabled: boolean;
    comments?: string;
}

export interface IMrsUserData {
    id?: string;
    authAppId?: string;
    name?: string;
    email?: string;
    vendorUserId?: string;
    loginPermitted?: boolean;
    mappedUserId?: string;
    appOptions?: IShellDictionary;
    authString?: string;
}

export interface IMrsSchemaData {
    comments: string;
    enabled: number;
    hostCtx: string;
    id: string;
    itemsPerPage: number;
    name: string;
    requestPath: string;
    requiresAuth: number;
    serviceId: string;
    options?: IShellDictionary;
    metadata?: string;
    schemaType: string;
}

export interface IMrsStatusData {
    serviceConfigured: boolean;
    serviceCount: number;
    serviceEnabled: boolean;
    serviceUpgradeable: boolean;
    majorUpgradeRequired: boolean;
    minimumVersionRequired: number;
    currentMetadataVersion?: string;
    availableMetadataVersion?: string;
    requiredRouterVersion?: string;
    serviceUpgradeIgnored: boolean;
    serviceBeingUpgraded: boolean;
}

export interface IMrsRoleData {
    id: string,
    derivedFromRoleId: string,
    specificToServiceId: string,
    caption: string,
    description: string,
}

export interface IMrsUserRoleData {
    userId: string | null,
    roleId: string | null,
    comments: string | null,
}

export interface IMrsRouterData {
    id: number,
    routerName: string,
    address: string,
    productName: string,
    version: string,
    lastCheckIn: string,
    attributes: IShellDictionary,
    options: IShellDictionary,
    active: boolean,
    developer?: string,
}

export interface IMrsRouterService {
    routerId: number;
    routerName: string;
    address: string;
    routerDeveloper: string | null;
    serviceId: string;
    serviceUrlHostName: string;
    serviceUrlContextRoot : string;
    serviceHostCtx: string;
    published: number;
    inDevelopment: IMrsServiceDevelopmentOptions | null;
    sortedDevelopers: string | null;
}


export interface IMrsCurrentServiceMetadata {
    id?: string;
    hostCtx?: string;
    metadataVersion?: string;
}

export interface IMrsTableColumn {
    name: string;
    datatype: string;
    notNull: boolean;
    isPrimary: boolean;
    isUnique: boolean;
    isGenerated: boolean;
    idGeneration?: string;
    comment?: string;
    in?: boolean;
    out?: boolean;
    isArray?: boolean;
    readOnly?: boolean;
    charset?: string;
    collation?: string;
}

export interface IMrsColumnMapping {
    base: string;
    ref: string;
}

export interface IMrsTableReference {
    kind: string,
    constraint: string,
    toMany: boolean,
    referencedSchema: string,
    referencedTable: string,
    columnMapping: IMrsColumnMapping[];
}

export interface IMrsTableColumnWithReference {
    position: number,
    name: string,
    refColumnNames: string,
    dbColumn?: IMrsTableColumn,
    referenceMapping?: IMrsTableReference,
    tableSchema: string,
    tableName: string,
}

export interface IMrsObjectFieldSdkLanguageOptions {
    language: string,
    fieldName?: string;
}

export interface IMrsObjectFieldSdkOptions {
    datatypeName?: string,
    languageOptions?: IMrsObjectFieldSdkLanguageOptions[],
}

export interface IMrsObjectReferenceSdkLanguageOptions {
    language: string,
    interfaceName?: string,
}

export interface IMrsObjectReferenceSdkOptions {
    languageOptions?: IMrsObjectReferenceSdkLanguageOptions[],
}

export interface IMrsObjectReference {
    id: string,
    reduceToValueOfFieldId?: string,
    rowOwnershipFieldId?: string,
    referenceMapping: IMrsTableReference,
    unnest: boolean,
    options?: IMrsObjectOptions,
    sdkOptions?: IMrsObjectReferenceSdkOptions,
    comments?: string,
}

export interface IMrsObjectFieldWithReference {
    id: string,
    objectId: string,
    representsReferenceId?: string,
    parentReferenceId?: string,
    name: string,
    position: number,
    dbColumn?: IMrsTableColumn,
    enabled: boolean,
    allowFiltering: boolean,
    allowSorting: boolean,
    noCheck: boolean,
    noUpdate: boolean,
    sdkOptions?: IMrsObjectFieldSdkOptions,
    comments?: string,
    objectReference?: IMrsObjectReference,
    lev?: number,
    caption?: string,
    storedDbColumn?: IMrsTableColumn,
}

export interface IMrsObjectSdkLanguageOptions {
    language: MrsSdkLanguage;
    className?: string;
}

export interface IMrsObjectSdkOptions {
    languageOptions?: IMrsObjectSdkLanguageOptions[];
    className?: string;
    returnsArray?: boolean;
}

export interface IMrsObjectOptions {
    dualityViewInsert?: boolean,
    dualityViewUpdate?: boolean,
    dualityViewDelete?: boolean,
    dualityViewNoCheck?: boolean,
}

export interface IMrsObject {
    id: string,
    dbObjectId: string,
    name: string,
    position: number,
    kind: MrsObjectKind,
    options?: IMrsObjectOptions,
    sdkOptions?: IMrsObjectSdkOptions,
    rowOwnershipFieldId?: string,
    comments?: string,
    fields?: IMrsObjectFieldWithReference[],
    storedFields?: IMrsObjectFieldWithReference[],
}

export enum MrsScriptResultType {
    Success = "success",
    Error = "error",
}

export interface IMrsScriptResult {
    statementIndex: number,
    type: MrsScriptResultType,
    message: string,
    operation: string,
    id?: string,
    result?: IDictionary,
}

export interface IMrsSdkOptions {
    serviceId: string,
    dbConnectionUri: string,
    sdkLanguage: string,
    addAppBaseClass?: string,
    serviceUrl: string,
    version?: number,
    generationDate?: string,
    header?: string,
}

export interface IMrsScriptProperty {
    name: string;
    value: string | number | boolean | IDictionary;
}

export interface IMrsScriptParameter {
    name: string;
    type: string;
    isArray: boolean;
}

export interface IMrsScriptCodePosition {
    lineNumberStart: number;
    lineNumberEnd: number;
    characterStart: number;
    characterEnd: number;
}

export interface IMrsScriptFileInfo {
    fullFileName: string;
    relativeFileName: string;
    fileName: string;
    lastModification: string;
}

export interface IMrsScriptReturnType {
    type: string;
    isArray: boolean;
}

export interface IMrsScriptDefinition {
    functionName: string;
    codePosition: IMrsScriptCodePosition;
    parameters: IMrsScriptParameter[];
    returnType: IMrsScriptReturnType;
    properties: IMrsScriptProperty[];
}

export interface IMrsScriptInterfaceProperty {
    name: string;
    type: string;
    optional: boolean;
    readOnly: boolean;
    indexSignatureType?: string;
}

export interface IMrsScriptInterfaceDefinition {
    fileInfo: IMrsScriptFileInfo;
    name: string;
    extends?: string;
    codePosition: IMrsScriptCodePosition;
    properties: IMrsScriptInterfaceProperty[];
}

export interface IMrsScriptModuleDefinition {
    fileInfo: IMrsScriptFileInfo,
    className: string;
    schemaType: string;
    codePosition: IMrsScriptCodePosition;
    properties: IMrsScriptProperty[];
    scripts: IMrsScriptDefinition[];
    triggers: IMrsScriptDefinition[];
}

export interface IMrsScriptError {
    message: string;
    kind?: string;
    fileInfo?: IMrsScriptFileInfo;
    script?: IMrsScriptDefinition;
    interface?: IMrsScriptInterfaceDefinition;
}

export interface IMrsScriptDefinitions {
    scriptModules: IMrsScriptModuleDefinition[];
    interfaces: IMrsScriptInterfaceDefinition[];
    errors: IMrsScriptError[];
    buildFolder?: string;
    staticContentFolders?: string[];
    info?: string;
}

export interface IProtocolMrsResults {
    [ShellAPIMrs.MrsAddService]: { result: IMrsServiceData; };
    [ShellAPIMrs.MrsGetService]: { result: IMrsServiceData; };
    [ShellAPIMrs.MrsListServices]: { result: IMrsServiceData[]; };
    [ShellAPIMrs.MrsEnableService]: {};
    [ShellAPIMrs.MrsDisableService]: {};
    [ShellAPIMrs.MrsDeleteService]: {};
    [ShellAPIMrs.MrsSetCurrentService]: {};
    [ShellAPIMrs.MrsGetCurrentServiceMetadata]: { result: IMrsCurrentServiceMetadata; };
    [ShellAPIMrs.MrsSetServiceContextPath]: {};
    [ShellAPIMrs.MrsSetServiceProtocol]: {};
    [ShellAPIMrs.MrsSetServiceComments]: {};
    [ShellAPIMrs.MrsSetServiceOptions]: {};
    [ShellAPIMrs.MrsUpdateService]: {};
    [ShellAPIMrs.MrsGetServiceRequestPathAvailability]: { result: boolean; };
    [ShellAPIMrs.MrsAddSchema]: { result: string; };
    [ShellAPIMrs.MrsGetSchema]: { result: IMrsSchemaData; };
    [ShellAPIMrs.MrsListSchemas]: { result: IMrsSchemaData[]; };
    [ShellAPIMrs.MrsEnableSchema]: {};
    [ShellAPIMrs.MrsDisableSchema]: {};
    [ShellAPIMrs.MrsDeleteSchema]: {};
    [ShellAPIMrs.MrsSetSchemaName]: {};
    [ShellAPIMrs.MrsSetSchemaRequestPath]: {};
    [ShellAPIMrs.MrsSetSchemaRequiresAuth]: {};
    [ShellAPIMrs.MrsSetSchemaItemsPerPage]: {};
    [ShellAPIMrs.MrsSetSchemaComments]: {};
    [ShellAPIMrs.MrsUpdateSchema]: {};
    [ShellAPIMrs.MrsAddContentSet]: { result: IMrsAddContentSetData; };
    [ShellAPIMrs.MrsGetContentSetCount]: { result: number; };
    [ShellAPIMrs.MrsListContentSets]: { result: IMrsContentSetData[]; };
    [ShellAPIMrs.MrsGetContentSet]: {};
    [ShellAPIMrs.MrsEnableContentSet]: {};
    [ShellAPIMrs.MrsDisableContentSet]: {};
    [ShellAPIMrs.MrsDeleteContentSet]: {};
    [ShellAPIMrs.MrsGetFolderMrsScriptLanguage]: { result: string | undefined };
    [ShellAPIMrs.MrsGetFileMrsScriptDefinitions]: { result: IMrsScriptModuleDefinition[] };
    [ShellAPIMrs.MrsGetFolderMrsScriptDefinitions]: { result: IMrsScriptDefinitions | undefined };
    [ShellAPIMrs.MrsUpdateMrsScriptsFromContentSet]: {};
    [ShellAPIMrs.MrsAddDbObject]: { result: string; };
    [ShellAPIMrs.MrsGetDbObject]: { result: IMrsDbObjectData; };
    [ShellAPIMrs.MrsListDbObjects]: { result: IMrsDbObjectData[]; };
    [ShellAPIMrs.MrsGetDbObjectParameters]: { result: IMrsDbObjectParameterData[]; };
    [ShellAPIMrs.MrsGetDbFunctionReturnType]: { result: string; };
    [ShellAPIMrs.MrsSetDbObjectRequestPath]: {};
    [ShellAPIMrs.MrsEnableDbObject]: {};
    [ShellAPIMrs.MrsDisableDbObject]: {};
    [ShellAPIMrs.MrsDeleteDbObject]: {};
    [ShellAPIMrs.MrsUpdateDbObject]: {};
    [ShellAPIMrs.MrsListContentFiles]: { result: IMrsContentFileData[]; };
    [ShellAPIMrs.MrsGetAuthenticationVendors]: { result: IMrsAuthVendorData[]; };
    [ShellAPIMrs.MrsAddAuthenticationApp]: { result: IMrsAddAuthAppData; };
    [ShellAPIMrs.MrsDeleteAuthenticationApp]: {};
    [ShellAPIMrs.MrsUpdateAuthenticationApp]: {};
    [ShellAPIMrs.MrsListAuthenticationApps]: { result: IMrsAuthAppData[]; };
    [ShellAPIMrs.MrsGetAuthenticationApp]: { result: IMrsAuthAppData; };
    [ShellAPIMrs.MrsInfo]: {};
    [ShellAPIMrs.MrsVersion]: {};
    [ShellAPIMrs.MrsLs]: {};
    [ShellAPIMrs.MrsConfigure]: {};
    [ShellAPIMrs.MrsStatus]: { result: IMrsStatusData; };
    [ShellAPIMrs.MrsIgnoreVersionUpgrade]: {};
    [ShellAPIMrs.MrsDumpService]: {};
    [ShellAPIMrs.MrsDumpSchema]: {};
    [ShellAPIMrs.MrsDumpObject]: {};
    [ShellAPIMrs.MrsLoadSchema]: {};
    [ShellAPIMrs.MrsLoadObject]: {};
    [ShellAPIMrs.MrsListUsers]: { result: IMrsUserData[]; };
    [ShellAPIMrs.MrsDeleteUser]: {};
    [ShellAPIMrs.MrsAddUser]: {};
    [ShellAPIMrs.MrsUpdateUser]: {};
    [ShellAPIMrs.MrsGetUser]: { result: IMrsUserData; };
    [ShellAPIMrs.MrsListRoles]: { result: IMrsRoleData[]; };
    [ShellAPIMrs.MrsListUserRoles]: { result: IMrsUserRoleData[]; };
    [ShellAPIMrs.MrsAddUserRole]: {};
    [ShellAPIMrs.MrsDeleteUserRoles]: {};
    [ShellAPIMrs.MrsAddRole]: {};
    [ShellAPIMrs.MrsGetRole]: { result: IMrsRoleData; };
    [ShellAPIMrs.MrsAddRolePrivilege]: {};
    [ShellAPIMrs.MrsDeleteRolePrivilege]: {};
    [ShellAPIMrs.MrsListRouterIds]: { result: number[]; };
    [ShellAPIMrs.MrsListRouters]: { result: IMrsRouterData[]; };
    [ShellAPIMrs.MrsDeleteRouter]: {};
    [ShellAPIMrs.MrsGetRouterServices]: {result: IMrsRouterService[]; };
    [ShellAPIMrs.MrsGetObjects]: { result: IMrsObject[]; };
    [ShellAPIMrs.MrsGetSdkBaseClasses]: { result: string; };
    [ShellAPIMrs.MrsGetSdkServiceClasses]: { result: string; };
    [ShellAPIMrs.MrsGetRuntimeManagementCode]: { result: string; };
    [ShellAPIMrs.MrsGetTableColumnsWithReferences]: { result: IMrsTableColumnWithReference[]; };
    [ShellAPIMrs.MrsGetObjectFieldsWithReferences]: { result: IMrsObjectFieldWithReference[]; };
    [ShellAPIMrs.MrsDumpSdkServiceFiles]: { result: boolean; };
    [ShellAPIMrs.MrsGetSdkOptions]: { result: IMrsSdkOptions; };
    [ShellAPIMrs.MrsRunScript]: { result: IMrsScriptResult[]; };
    [ShellAPIMrs.MrsGetServiceCreateStatement]: { result: string; }
    [ShellAPIMrs.MrsGetSchemaCreateStatement]: { result: string; }
    [ShellAPIMrs.MrsGetDbObjectCreateStatement]: { result: string; }
    [ShellAPIMrs.MrsGetContentSetCreateStatement]: { result: string; }
    [ShellAPIMrs.MrsGetContentFileCreateStatement]: { result: string; }
    [ShellAPIMrs.MrsDumpServiceCreateStatement]: { result: boolean; }
    [ShellAPIMrs.MrsDumpSchemaCreateStatement]: { result: boolean; }
    [ShellAPIMrs.MrsDumpDbObjectCreateStatement]: { result: boolean; }
    [ShellAPIMrs.MrsDumpContentSetCreateStatement]: { result: boolean; }
    [ShellAPIMrs.MrsDumpContentFileCreateStatement]: { result: boolean; }
}
