{
    "name": "mysql-shell-for-vs-code",
    "displayName": "MySQL Shell for VS Code",
    "description": "The power of MySQL Shell as part of your VS Code workflow.",
    "icon": "images/app-icon.png",
    "galleryBanner": {
        "color": "#2789e1",
        "theme": "dark"
    },
    "version": "1.3.3",
    "publisher": "Oracle",
    "license": "SEE LICENSE IN LICENSE.txt",
    "repository": {
        "type": "git",
        "url": "https://github.com/mysql/mysql-shell-plugins"
    },
    "engines": {
        "vscode": "^1.63.0"
    },
    "categories": [
        "Programming Languages",
        "Visualization",
        "Data Science"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./output/extension/src/extension.js",
    "contributes": {
        "languages": [
            {
                "id": "mysql",
                "extensions": [
                    ".sql",
                    ".mysql"
                ],
                "aliases": [
                    "MySQL SQL"
                ],
                "configuration": "./syntaxes/language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "mysql",
                "scopeName": "source.mysql",
                "path": "./syntaxes/mysql.json"
            }
        ],
        "configuration": {
            "title": "MySQL Shell for VS Code",
            "properties": {
                "msg.debugLog.level": {
                    "type": "string",
                    "default": "INFO",
                    "enum": [
                        "NONE",
                        "ERROR",
                        "WARNING",
                        "INFO",
                        "DEBUG",
                        "DEBUG2",
                        "DEBUG3"
                    ],
                    "enumDescriptions": [
                        "Switch logging off, entirely",
                        "Show only errors",
                        "Show errors and warnings",
                        "Show errors, warnings, and other normal information",
                        "Used for problem analysis. Prints additional information",
                        "Used for problem analysis. Not used currently",
                        "Used for problem analysis. Print everything, which may include security related things like passwords, connection tokens, and so on."
                    ],
                    "description": "Sets different verbosity levels for the communication log between the extension and the MySQL Shell. To see this log, open the OUTPUT channel MySQL Shell for VS Code."
                },
                "msg.workers.minWorkerCount": {
                    "type": "number",
                    "default": 3,
                    "description": "The number of workers that are always available."
                },
                "msg.workers.maxWorkerCount": {
                    "type": "number",
                    "default": 3,
                    "description": "The number of workers that are at most active."
                },
                "msg.workers.maxPendingTaskCount": {
                    "type": "number",
                    "default": 100,
                    "description": "Describes the highest number of waiting tasks for a free background worker. An error is thrown if this number is exceeded, indicating that the worker pool is overloaded and can no longer cope with incoming work."
                },
                "msg.workers.removeIdleTime": {
                    "type": "number",
                    "default": 60,
                    "description": "Specifies the number of seconds to pass until the oldest inactive worker is removed. Has no effect if the current number of active workers falls below the minimal worker count."
                },
                "msg.editor.theming.decorationSet": {
                    "type": "string",
                    "default": "standard",
                    "description": "Select one of the sets to be used to mark code block and results in mixed language code editors.",
                    "enum": [
                        "standard",
                        "alternative"
                    ],
                    "enumDescriptions": [
                        "Includes only a solid marker for editor rows",
                        "Uses a hatch pattern with different colors to mark editor content and result areas"
                    ]
                },
                "msg.editor.wordWrap": {
                    "type": "string",
                    "default": "off",
                    "description": "Determines how long lines should be wrapped automatically by the editor.",
                    "enum": [
                        "off",
                        "on",
                        "wordWrapColumn",
                        "bounded"
                    ],
                    "markdownEnumDescriptions": [
                        "Lines never wrap",
                        "Lines wrap at the viewport width",
                        "Lines wrap at `Word Wrap Column`",
                        "Lines wrap at the minimum of viewport width or `Word Wrap Column`"
                    ]
                },
                "msg.editor.wordWrapColumn": {
                    "type": "number",
                    "default": 120,
                    "description": "Controls the column of the editor to wrap long lines when Code Editor: Word Wrap is `wordWrapColumn` or `bounded`."
                },
                "msg.editor.showHidden": {
                    "type": "boolean",
                    "default": false,
                    "description": "When set to true, normally invisible characters (like space or tabulator) are displayed too."
                },
                "msg.editor.dbVersion": {
                    "type": "string",
                    "default": "8.0.30",
                    "description": "The default version to be used for MySQL language support, if no version is available."
                },
                "msg.editor.sqlMode": {
                    "type": "string",
                    "description": "The default SQL mode to be used for MySQL language support, if mode information is not available."
                },
                "msg.editor.stopOnErrors": {
                    "type": "boolean",
                    "default": false,
                    "description": "If this option is set to true, execution of scripts stops if an error occurs. Otherwise, the script execution continues with the next statement."
                },
                "msg.editor.showMinimap": {
                    "type": "boolean",
                    "default": true,
                    "description": "Determines if code editors should show a minimap of the plain scrollbar for better navigation."
                },
                "msg.editor.defaultDbConnection": {
                    "type": "string",
                    "default": "",
                    "description": "Specify the name (title) of a DB connection to be used when running SQL from a text editor and no connection is open yet. Leave empty to select a connection."
                },
                "msg.dbEditor.startLanguage": {
                    "type": "string",
                    "default": "sql",
                    "description": "Select the initial language for new DB editors.",
                    "enum": [
                        "sql",
                        "javascript",
                        "typescript"
                    ],
                    "enumDescriptions": [
                        "Supported in all code editors",
                        "Supported in all code editors",
                        "Supported only in DB editors"
                    ]
                },
                "msg.dbEditor.defaultEditor": {
                    "type": "string",
                    "default": "notebook",
                    "description": "Select the type of the first editor when opening a DB connection.",
                    "enum": [
                        "notebook",
                        "script"
                    ],
                    "enumDescriptions": [
                        "A multi language editor with embedded results",
                        "A single language script editor (MySQL)"
                    ]
                },
                "msg.dbEditor.upperCaseKeywords": {
                    "type": "boolean",
                    "default": true,
                    "description": "When set, keywords shown in code-completion popups appear in all uppercase letters and are inserted as such in the SQL code editors."
                },
                "msg.dbEditor.connectionBrowser.showGreeting": {
                    "type": "boolean",
                    "default": true,
                    "description": "If set, a message section is shown with some useful links."
                },
                "msg.sql.limitRowCount": {
                    "type": "number",
                    "default": 1000,
                    "description": "Determines the size of one page in a result set, but has no effect if a top-level LIMIT clause is specified in the query. Set to 0 to disable auto adding a LIMIT clause and return all records as single page.",
                    "minimum": 0,
                    "maximum": 10000
                },
                "msg.sql.rowPacketSize": {
                    "type": "number",
                    "default": 1000,
                    "description": "Determines the number of result records that are sent in a single response from the backend."
                },
                "msg.shellSession.sessionBrowser.showGreeting": {
                    "type": "boolean",
                    "default": true,
                    "description": "If set, a message section is shown with some useful links."
                },
                "msg.shellSession.startLanguage": {
                    "type": "string",
                    "default": "javascript",
                    "description": "Select the initial language for a new shell session.",
                    "enum": [
                        "javascript",
                        "python",
                        "sql"
                    ],
                    "enumDescriptions": [
                        "Supported in all code editors",
                        "Supported only in shell session editors",
                        "Supported in all code editors"
                    ]
                },
                "msg.shell.useExternal": {
                    "type": "boolean",
                    "default": false,
                    "description": "Connect to External MySQL Shell Process."
                },
                "msg.shell.externalUrl": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Specify a URL to be used to connect to a running MySQL instance.\n\nLeave empty to use an automatically launched local MySQL Shell instance.\n\nUse the `Connect to External MySQL Shell Process` menu item in the DB connections section title menu to switch between shell connections."
                },
                "msg.tabPosition.newConnection": {
                    "type": "string",
                    "default": "Active",
                    "description": "Where to place the new tab when opening a DB connection.",
                    "enum": [
                        "Active",
                        "Beside Right",
                        "Beside Bottom"
                    ],
                    "enumDescriptions": [
                        "In the currently active editor group",
                        "In editor group beside the active one",
                        "In the editor group beneath the active one"
                    ]
                },
                "msg.tabPosition.newConnectionWithEmbeddedSql": {
                    "type": "string",
                    "default": "Beside Bottom",
                    "description": "Where to place the new tab when running embedded SQL in a DB connection.",
                    "enum": [
                        "Active",
                        "Beside Right",
                        "Beside Bottom"
                    ],
                    "enumDescriptions": [
                        "In the currently active editor group",
                        "In editor group beside the active one",
                        "In the editor group beneath the active one"
                    ]
                },
                "msg.tabPosition.newShellConsole": {
                    "type": "string",
                    "default": "Active",
                    "description": "Where to place the new tab when opening a MySQL Shell Console.",
                    "enum": [
                        "Active",
                        "Beside Right",
                        "Beside Bottom"
                    ],
                    "enumDescriptions": [
                        "In the currently active editor group",
                        "In editor group beside the active one",
                        "In the editor group beneath the active one"
                    ]
                }
            }
        },
        "commands": [
            {
                "command": "msg.hasLaunchedSuccessfully",
                "title": "Checks if the extension has launched successfully"
            },
            {
                "command": "msg.execute.normal",
                "title": "Execute the selected or all statements"
            },
            {
                "command": "msg.openDBBrowser",
                "title": "Open the DB Connection Browser",
                "icon": {
                    "dark": "images/dark/overviewPage.svg",
                    "light": "images/light/overviewPage.svg"
                }
            },
            {
                "command": "msg.refreshConnections",
                "title": "Reload the connection list",
                "icon": {
                    "dark": "images/dark/refresh.svg",
                    "light": "images/light/refresh.svg"
                }
            },
            {
                "command": "msg.openConnection",
                "title": "Open DB Connection",
                "icon": {
                    "dark": "images/dark/openConnection.svg",
                    "light": "images/light/openConnection.svg"
                }
            },
            {
                "command": "msg.refreshConnection",
                "title": "Reload Database Information",
                "icon": {
                    "dark": "images/dark/refresh.svg",
                    "light": "images/light/refresh.svg"
                }
            },
            {
                "command": "msg.openConnectionNewTab",
                "title": "Open DB Connection in New Tab",
                "icon": {
                    "dark": "images/dark/openConnection.svg",
                    "light": "images/light/openConnection.svg"
                }
            },
            {
                "command": "msg.addConnection",
                "title": "Create New MySQL Connection",
                "icon": {
                    "dark": "images/dark/add.svg",
                    "light": "images/light/add.svg"
                }
            },
            {
                "command": "msg.duplicateConnection",
                "title": "Duplicate this MySQL Connection",
                "icon": {
                    "dark": "images/dark/clone.svg",
                    "light": "images/light/clone.svg"
                }
            },
            {
                "command": "msg.removeConnection",
                "title": "Delete MySQL Connection",
                "icon": {
                    "dark": "images/dark/remove.svg",
                    "light": "images/light/remove.svg"
                }
            },
            {
                "command": "msg.editConnection",
                "title": "Edit MySQL Connection",
                "icon": "$(edit)"
            },
            {
                "command": "msg.newSessionUsingConnection",
                "title": "Open MySQL Shell GUI Console for this Connection"
            },
            {
                "command": "msg.defaultConnection",
                "title": "Set this Connection as Default for Embedded SQL Execution"
            },
            {
                "command": "msg.showSystemSchemasOnConnection",
                "title": "Show MySQL System Schemas"
            },
            {
                "command": "msg.hideSystemSchemasOnConnection",
                "title": "Hide MySQL System Schemas"
            },
            {
                "command": "msg.showTableData",
                "title": "Show Data..."
            },
            {
                "command": "msg.insertScript",
                "title": "Insert Script Into Current Editor"
            },
            {
                "command": "msg.openSessionBrowser",
                "title": "Open the MySQL Shell Console Browser",
                "icon": {
                    "dark": "images/dark/overviewPage.svg",
                    "light": "images/light/overviewPage.svg"
                }
            },
            {
                "command": "msg.newSession",
                "title": "Add a New MySQL Shell Console",
                "icon": {
                    "dark": "images/dark/add.svg",
                    "light": "images/light/add.svg"
                }
            },
            {
                "command": "msg.openSession",
                "title": "Open this MySQL Shell Console"
            },
            {
                "command": "msg.removeSession",
                "title": "Close this MySQL Shell Console"
            },
            {
                "command": "msg.selectProfile",
                "title": "Select a MySQL Shell Profile"
            },
            {
                "command": "msg.executeEmbeddedSqlFromEditor",
                "title": "Execute Embedded SQL with MySQL Shell"
            },
            {
                "command": "msg.executeSelectedSqlFromEditor",
                "title": "Execute Current Selection with MySQL Shell"
            },
            {
                "command": "msg.runWelcomeWizard",
                "title": "Relaunch Welcome Wizard"
            },
            {
                "command": "msg.resetExtension",
                "title": "Reset MySQL Shell for VS Code Extension"
            },
            {
                "command": "msg.fileBugReport",
                "title": "File Bug Report"
            },
            {
                "command": "msg.restartShell",
                "title": "Restart the Internal MySQL Shell Process"
            },
            {
                "command": "msg.connectToShell",
                "title": "Connect to External MySQL Shell Process"
            },
            {
                "command": "msg.dumpSchemaToDisk",
                "title": "Dump Schema to Disk"
            },
            {
                "command": "msg.dumpSchemaToDiskForMds",
                "title": "Dump Schema to Disk for MySQL Database Service"
            },
            {
                "command": "msg.createSchema",
                "title": "Create Schema..."
            },
            {
                "command": "msg.dropSchema",
                "title": "Drop Schema..."
            },
            {
                "command": "msg.createTable",
                "title": "Create Table..."
            },
            {
                "command": "msg.dropTable",
                "title": "Drop Table..."
            },
            {
                "command": "msg.createView",
                "title": "Create View..."
            },
            {
                "command": "msg.dropView",
                "title": "Drop View..."
            },
            {
                "command": "msg.createRoutine",
                "title": "Create Stored Routine..."
            },
            {
                "command": "msg.dropRoutine",
                "title": "Drop Stored Routine..."
            },
            {
                "command": "msg.createTrigger",
                "title": "Create Trigger..."
            },
            {
                "command": "msg.dropTrigger",
                "title": "Drop Trigger..."
            },
            {
                "command": "msg.dropEvent",
                "title": "Drop Event..."
            },
            {
                "command": "msg.loadDumpFromDisk",
                "title": "Load Dump from Disk"
            },
            {
                "command": "msg.loadScriptFromDisk",
                "title": "Load Script from Disk"
            },
            {
                "command": "msg.copyNameToClipboard",
                "title": "Name"
            },
            {
                "command": "msg.copyCreateScriptToClipboard",
                "title": "Create Statement"
            },
            {
                "command": "msg.editInScriptEditor",
                "title": "Edit File in MySQL Shell"
            },
            {
                "command": "msg.mrs.configureMySQLRestService",
                "title": "Configure MySQL REST Service"
            },
            {
                "command": "msg.mrs.addService",
                "title": "Add REST Service..."
            },
            {
                "command": "msg.mrs.editService",
                "title": "Edit REST Service..."
            },
            {
                "command": "msg.mrs.setDefaultService",
                "title": "Set as New Default REST Service"
            },
            {
                "command": "msg.mrs.deleteService",
                "title": "Delete REST Service..."
            },
            {
                "command": "msg.mrs.deleteSchema",
                "title": "Delete REST Schema..."
            },
            {
                "command": "msg.mrs.addSchema",
                "title": "Add Schema to REST Service"
            },
            {
                "command": "msg.mrs.editSchema",
                "title": "Edit REST Schema..."
            },
            {
                "command": "msg.mrs.addTable",
                "title": "Add Table to REST Service"
            },
            {
                "command": "msg.showTaskOutput",
                "title": "Show Task Output"
            },
            {
                "command": "msg.showServerStatus",
                "title": "Show Server Status"
            },
            {
                "command": "msg.showClientConnections",
                "title": "Show Client Connections"
            },
            {
                "command": "msg.showPerformanceDashboard",
                "title": "Show Performance Dashboard"
            },
            {
                "command": "msg.mds.configureOciProfiles",
                "title": "Configure the OCI Profile list",
                "icon": {
                    "dark": "images/dark/config.svg",
                    "light": "images/light/config.svg"
                }
            },
            {
                "command": "msg.mds.refreshOciProfiles",
                "title": "Reload the OCI Profile list",
                "icon": {
                    "dark": "images/dark/refresh.svg",
                    "light": "images/light/refresh.svg"
                }
            },
            {
                "command": "msg.mds.getProfileInfo",
                "title": "View Config Profile Information"
            },
            {
                "command": "msg.mds.setDefaultProfile",
                "title": "Set as New Default Config Profile"
            },
            {
                "command": "msg.mds.getCompartmentInfo",
                "title": "View Compartment Information"
            },
            {
                "command": "msg.mds.setCurrentCompartment",
                "title": "Set as Current Compartment"
            },
            {
                "command": "msg.mds.getDbSystemInfo",
                "title": "View DB System Information"
            },
            {
                "command": "msg.mds.startDbSystem",
                "title": "Start the DB System"
            },
            {
                "command": "msg.mds.restartDbSystem",
                "title": "Restart the DB System"
            },
            {
                "command": "msg.mds.stopDbSystem",
                "title": "Stop the DB System"
            },
            {
                "command": "msg.mds.deleteDbSystem",
                "title": "Delete the DB System"
            },
            {
                "command": "msg.mds.createConnectionViaBastionService",
                "title": "Create Connection with Bastion Service"
            },
            {
                "command": "msg.mds.createRouterEndpoint",
                "title": "Create MySQL Router Endpoint on new Compute Instance"
            },
            {
                "command": "msg.mds.getComputeInstance",
                "title": "View Compute Instance Information"
            },
            {
                "command": "msg.mds.deleteBastion",
                "title": "Delete Bastion"
            },
            {
                "command": "msg.mds.getBastion",
                "title": "Get Bastion Information"
            },
            {
                "command": "msg.mds.setCurrentBastion",
                "title": "Set as Current Bastion"
            },
            {
                "command": "msg.mds.openBastionSshSession",
                "title": "Open SSH Bastion Session"
            },
            {
                "command": "msg.mds.deleteComputeInstance",
                "title": "Delete Compute Instance"
            },
            {
                "command": "msg.mds.refreshOnBastionActiveState",
                "title": "Refresh When Bastion Reaches Active State"
            },
            {
                "command": "msg.mds.getLoadBalancer",
                "title": "Get Load Balancer Information"
            }
        ],
        "submenus": [
            {
                "id": "msg.copyToClipboard",
                "label": "Copy To Clipboard",
                "command": ""
            }
        ],
        "menus": {
            "msg.copyToClipboard": [
                {
                    "command": "msg.copyNameToClipboard",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.copyCreateScriptToClipboard",
                    "group": "1_msg@2"
                }
            ],
            "explorer/context": [
                {
                    "when": "resourceLangId == mysql || resourceLangId == sql",
                    "command": "msg.editInScriptEditor",
                    "group": "1_msg@1"
                }
            ],
            "editor/title/context": [
                {
                    "when": "resourceLangId == mysql",
                    "command": "msg.execute.normal",
                    "group": "1_msg@1"
                }
            ],
            "editor/title": [
                {
                    "when": "resourceLangId == mysql",
                    "command": "msg.execute.normal",
                    "group": "1_msg@1"
                }
            ],
            "editor/context": [
                {
                    "when": "resourceLangId == mysql || resourceLangId == sql",
                    "command": "msg.editInScriptEditor",
                    "group": "1_msg@1"
                },
                {
                    "when": "resourceLangId == mysql || resourceLangId == sql",
                    "command": "msg.executeSelectedSqlFromEditor",
                    "group": "1_msg@2"
                },
                {
                    "when": "resourceLangId == python || resourceLangId == javascript || resourceLangId == typescript",
                    "command": "msg.executeEmbeddedSqlFromEditor",
                    "group": "1_msg@1"
                }
            ],
            "view/title": [
                {
                    "command": "msg.addConnection",
                    "group": "navigation",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.openDBBrowser",
                    "group": "navigation",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.refreshConnections",
                    "group": "navigation",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.restartShell",
                    "group": "1_msg@1",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.connectToShell",
                    "group": "1_msg@2",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.runWelcomeWizard",
                    "group": "2_msg@1",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.resetExtension",
                    "group": "2_msg@2",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.fileBugReport",
                    "group": "3_msg@1",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.mds.configureOciProfiles",
                    "group": "navigation",
                    "when": "view == msg.oci"
                },
                {
                    "command": "msg.mds.refreshOciProfiles",
                    "group": "navigation",
                    "when": "view == msg.oci"
                },
                {
                    "command": "msg.newSession",
                    "group": "navigation",
                    "when": "view == msg.consoles"
                },
                {
                    "command": "msg.openSessionBrowser",
                    "group": "navigation",
                    "when": "view == msg.consoles"
                }
            ],
            "view/item/context": [
                {
                    "command": "msg.refreshConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "inline"
                },
                {
                    "command": "msg.openConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "inline"
                },
                {
                    "command": "msg.openConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.openConnectionNewTab",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.newSessionUsingConnection",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.defaultConnection",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.editConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.duplicateConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.removeConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "3_msg@3"
                },
                {
                    "command": "msg.showSystemSchemasOnConnection",
                    "alt": "msg.hideSystemSchemasOnConnection",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "4_msg@1"
                },
                {
                    "command": "msg.loadScriptFromDisk",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "5_msg@1"
                },
                {
                    "command": "msg.loadDumpFromDisk",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "5_msg@2"
                },
                {
                    "command": "msg.mrs.configureMySQLRestService",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "6_msg@1"
                },
                {
                    "command": "msg.dumpSchemaToDisk",
                    "when": "view == msg.connections && viewItem == schemaItemMySQL && !showsModalDialog",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.dumpSchemaToDiskForMds",
                    "when": "view == msg.connections && viewItem == schemaItemMySQL && !showsModalDialog",
                    "group": "1_msg@2"
                },
                {
                    "submenu": "msg.copyToClipboard",
                    "when": "view == msg.connections && viewItem =~ /^schema(Table|View|Routine)?Item.*/",
                    "group": "2_msg@9"
                },
                {
                    "command": "msg.mrs.addSchema",
                    "when": "view == msg.connections && viewItem == schemaItemMySQL && !showsModalDialog",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.dropSchema",
                    "when": "view == msg.connections && viewItem =~ /^schemaItem.*/ && !showsModalDialog",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropTable",
                    "when": "view == msg.connections && viewItem =~ /^schemaTableItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropView",
                    "when": "view == msg.connections && viewItem =~ /^schemaViewItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropRoutine",
                    "when": "view == msg.connections && viewItem =~ /^schemaRoutineItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropTrigger",
                    "when": "view == msg.connections && viewItem =~ /^schemaTriggerItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropEvent",
                    "when": "view == msg.connections && viewItem =~ /^schemaEventItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.showTableData",
                    "when": "view == msg.connections && viewItem =~ /^schemaTableItem.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.showTableData",
                    "when": "view == msg.connections && viewItem =~ /^schemaViewItem.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.addService",
                    "when": "view == msg.connections && viewItem == mrs",
                    "group": "2_msg@2"
                },
                {
                    "command": "msg.mrs.setDefaultService",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.editService",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mrs.deleteService",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.editSchema",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.deleteSchema",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.addTable",
                    "when": "view == msg.connections && viewItem == schemaTableItemMySQL",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.removeSession",
                    "when": "view == msg.consoles && viewItem == session",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.getProfileInfo",
                    "when": "view == msg.oci && viewItem == mdsConfigProfile",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.setDefaultProfile",
                    "when": "view == msg.oci && viewItem == mdsConfigProfile",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.getCompartmentInfo",
                    "when": "view == msg.oci && viewItem == mdsCompartment",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.setCurrentCompartment",
                    "when": "view == msg.oci && viewItem == mdsCompartment",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.getDbSystemInfo",
                    "when": "view == msg.oci && viewItem == mdsDbSystem",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.createConnectionViaBastionService",
                    "when": "view == msg.oci && viewItem == mdsDbSystem",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.startDbSystem",
                    "title": "Start the DB System",
                    "when": "view == msg.oci && viewItem == mdsDbSystem",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mds.restartDbSystem",
                    "title": "Restart the DB System",
                    "when": "view == msg.oci && viewItem == mdsDbSystem",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mds.stopDbSystem",
                    "when": "view == msg.oci && viewItem == mdsDbSystem",
                    "group": "3_msg@3"
                },
                {
                    "command": "msg.mds.deleteDbSystem",
                    "when": "view == msg.oci && viewItem == mdsDbSystem",
                    "group": "4_msg@1"
                },
                {
                    "command": "msg.mds.createRouterEndpoint",
                    "when": "view == msg.oci && viewItem == mdsDbSystem",
                    "group": "5_msg@1"
                },
                {
                    "command": "msg.mds.getBastion",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.setCurrentBastion",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.deleteBastion",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mds.refreshOnBastionActiveState",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mds.getComputeInstance",
                    "when": "view == msg.oci && viewItem == mdsComputeInstance",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.openBastionSshSession",
                    "when": "view == msg.oci && viewItem == mdsComputeInstance",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.deleteComputeInstance",
                    "when": "view == msg.oci && viewItem == mdsComputeInstance",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mds.getLoadBalancer",
                    "when": "view == msg.oci && viewItem == mdsLoadBalancer",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.insertScript",
                    "when": "view == msg.scripts && viewItem == script",
                    "group": "1_msg@2"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "msg-view",
                    "title": "MySQL Shell for VSCode",
                    "icon": "images/mysqlShellForVsCode.svg"
                }
            ]
        },
        "views": {
            "msg-view": [
                {
                    "id": "msg.connections",
                    "name": "DATABASE"
                },
                {
                    "id": "msg.oci",
                    "name": "ORACLE CLOUD INFRASTRUCTURE"
                },
                {
                    "id": "msg.consoles",
                    "name": "MYSQL SHELL CONSOLES"
                },
                {
                    "id": "msg.shellTasks",
                    "name": "MYSQL SHELL TASKS"
                }
            ]
        },
        "viewsWelcome": []
    },
    "dependencies": {
        "antlr4ts": "0.5.0-alpha.4",
        "lodash": "4.17.21",
        "regedit": "5.1.1",
        "ws": "8.5.0"
    },
    "devDependencies": {
        "@nut-tree/nut-js": "2.0.1",
        "@types/chai": "4.3.0",
        "@types/glob": "7.2.0",
        "@types/lodash": "4.14.177",
        "@types/mocha": "9.1.0",
        "@types/mochawesome": "6.2.1",
        "@types/node": "16.11.11",
        "@types/vscode": "1.60.0",
        "@types/ws": "8.2.1",
        "@typescript-eslint/eslint-plugin": "5.5.0",
        "@typescript-eslint/eslint-plugin-tslint": "5.5.0",
        "@typescript-eslint/parser": "5.5.0",
        "@vscode/test-electron": "2.1.3",
        "antlr4ts-cli": "0.5.0-alpha.4",
        "chai": "4.3.6",
        "eslint": "7.32.0",
        "eslint-plugin-import": "2.25.3",
        "eslint-plugin-jsdoc": "37.1.0",
        "eslint-plugin-prefer-arrow": "1.2.3",
        "glob": "8.0.1",
        "mocha": "9.2.0",
        "mochawesome": "7.1.3",
        "typescript": "4.5.2",
        "vscode-extension-tester": "4.2.4"
    },
    "scripts": {
        "build-dev-package": "vsce package",
        "build-packages": "scripts/package_extension.sh",
        "build-packages-win": "scripts/package_extension.ps1",
        "publish-packages": "scripts/publish_packages.sh",
        "lint": "eslint \"./src/**/*.ts\"",
        "vscode:prepublish": "tsc",
        "e2e-tests-setup": "extest get-vscode -s tests/e2e/test-resources && extest get-chromedriver -s tests/e2e/test-resources && extest install-vsix -s tests/e2e/test-resources -f",
        "e2e-tests-local-setup": "extest setup-tests -s tests/e2e/test-resources -e tests/e2e/test-resources/test-extension -t stable",
        "e2e-tests-local": "tsc -p tests/e2e/ && extest run-tests -s tests/e2e/test-resources -e tests/e2e/test-resources/test-extension -t stable -f ./tests/e2e/output/tests/*.js",
        "e2e-tests": "tsc -p tests/e2e/ && extest run-tests -u -s tests/e2e/test-resources ./tests/e2e/output/tests/*.js",
        "e2e-report": "marge mochawesome-report/test-report.json",
        "test": "node ./output/extension/src/test/runTest.js"
    }
}