{
    "name": "mysql-shell-for-vs-code",
    "displayName": "MySQL Shell for VS Code",
    "description": "The power of MySQL Shell as part of your VS Code workflow.",
    "icon": "images/app-icon.png",
    "galleryBanner": {
        "color": "#2789e1",
        "theme": "dark"
    },
    "version": "1.19.3",
    "publisher": "Oracle",
    "license": "SEE LICENSE IN LICENSE.txt",
    "repository": {
        "type": "git",
        "url": "https://github.com/mysql/mysql-shell-plugins"
    },
    "engines": {
        "vscode": "^1.74.0"
    },
    "categories": [
        "Programming Languages",
        "Visualization",
        "Data Science"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./out/main.cjs",
    "type": "module",
    "contributes": {
        "languages": [
            {
                "id": "mysql",
                "extensions": [
                    ".mysql",
                    ".sql"
                ],
                "aliases": [
                    "MySQL SQL"
                ],
                "configuration": "./syntaxes/language-configuration.json"
            },
            {
                "id": "mysql-notebook",
                "extensions": [
                    ".mysql-notebook"
                ],
                "icon": {
                    "dark": "./images/dark/notebook.svg",
                    "light": "./images/light/notebook.svg"
                }
            }
        ],
        "customEditors": [
            {
                "viewType": "msg.notebook",
                "displayName": "MySQL Notebook Editor",
                "priority": "default",
                "selector": [
                    {
                        "filenamePattern": "*.mysql-notebook"
                    }
                ]
            }
        ],
        "grammars": [
            {
                "language": "mysql",
                "scopeName": "source.mysql",
                "path": "./syntaxes/mysql.json"
            }
        ],
        "configuration": {
            "title": "MySQL Shell for VS Code",
            "properties": {
                "msg.debugLog.level": {
                    "type": "string",
                    "default": "INFO",
                    "enum": [
                        "NONE",
                        "ERROR",
                        "WARNING",
                        "INFO",
                        "DEBUG",
                        "DEBUG2",
                        "DEBUG3"
                    ],
                    "enumDescriptions": [
                        "Switch logging off, entirely",
                        "Show only errors",
                        "Show errors and warnings",
                        "Show errors, warnings, and other normal information",
                        "Used for problem analysis. Prints additional information",
                        "Used for problem analysis. Not used currently",
                        "Used for problem analysis. Print everything, which may include security related things like passwords, connection tokens, and so on."
                    ],
                    "description": "Sets different verbosity levels for the communication log between the extension and MySQL Shell. To see this log, open the OUTPUT channel MySQL Shell for VS Code."
                },
                "msg.startup.showDbConnectionsTab": {
                    "type": "boolean",
                    "default": true,
                    "description": "Open the DB Connections Overview when selecting the MySQL Shell for VS Code extension icon in the Activity Bar for the first time after VS Code startup."
                },
                "msg.workers.minWorkerCount": {
                    "type": "number",
                    "default": 3,
                    "description": "The number of workers that are always available. Spinning up a worker can take a few seconds, so in order to avoid extra wait time it is advisable to keep at least 2 workers running all the time."
                },
                "msg.workers.maxWorkerCount": {
                    "type": "number",
                    "default": 3,
                    "description": "The number of workers that are at most active."
                },
                "msg.workers.maxPendingTaskCount": {
                    "type": "number",
                    "default": 100,
                    "description": "Describes the highest number of waiting tasks for a free background worker. An error is thrown if this number is exceeded, indicating that the worker pool is overloaded and can no longer cope with incoming work."
                },
                "msg.workers.removeIdleTime": {
                    "type": "number",
                    "default": 60,
                    "description": "Specifies the number of seconds to pass until the oldest inactive worker is removed. Has no effect if the current number of active workers falls below the minimal worker count."
                },
                "msg.editor.theming.decorationSet": {
                    "type": "string",
                    "default": "standard",
                    "description": "Select one of the sets to be used to mark code block and results in mixed language code editors.",
                    "enum": [
                        "standard",
                        "line",
                        "alternative"
                    ],
                    "enumDescriptions": [
                        "No special decoration for editor rows",
                        "Shows a solid marker for editor rows",
                        "Uses a hatch pattern with different colors to separate editor content and result areas"
                    ]
                },
                "msg.editor.wordWrap": {
                    "type": "string",
                    "default": "on",
                    "description": "Determines how long lines should be wrapped automatically by the editor.",
                    "enum": [
                        "off",
                        "on",
                        "wordWrapColumn",
                        "bounded"
                    ],
                    "markdownEnumDescriptions": [
                        "Lines never wrap",
                        "Lines wrap at the viewport width",
                        "Lines wrap at `Word Wrap Column`",
                        "Lines wrap at the minimum of viewport width or `Word Wrap Column`"
                    ]
                },
                "msg.editor.wordWrapColumn": {
                    "type": "number",
                    "default": 120,
                    "description": "Controls the column of the editor to wrap long lines when Code Editor: Word Wrap is `wordWrapColumn` or `bounded`."
                },
                "msg.editor.showHidden": {
                    "type": "boolean",
                    "default": false,
                    "description": "When set to true, normally invisible characters (like space or tabulator) are displayed too."
                },
                "msg.editor.dbVersion": {
                    "type": "string",
                    "default": "8.1.0",
                    "description": "The default version to be used for MySQL language support, if no version is available."
                },
                "msg.editor.sqlMode": {
                    "type": "string",
                    "description": "The default SQL mode to be used for MySQL language support, if mode information is not available."
                },
                "msg.editor.stopOnErrors": {
                    "type": "boolean",
                    "default": false,
                    "description": "If this option is set to true, execution of scripts stops if an error occurs. Otherwise, the script execution continues with the next statement."
                },
                "msg.editor.showMinimap": {
                    "type": "boolean",
                    "default": true,
                    "description": "Determines if code editors should show a minimap, instead of the plain scrollbar, for better navigation."
                },
                "msg.editor.defaultDbConnection": {
                    "type": "string",
                    "default": "",
                    "description": "Specify the name (title) of a DB connection to be used when running embedded SQL from a standard text editor and no connection is open yet. Leave empty to select a connection."
                },
                "msg.editor.editOnDoubleClick": {
                    "type": "boolean",
                    "default": true,
                    "description": "When set, a double click on a result cell starts editing the cell, otherwise editing a cell is only possible if the edit mode is activated."
                },
                "msg.dbEditor.useMinimap": {
                    "type": "boolean",
                    "default": false,
                    "description": "Determines if notebooks in the DB editor show a minimap. Only has an effect when mini maps are globally enabled"
                },
                "msg.dbEditor.startLanguage": {
                    "type": "string",
                    "default": "sql",
                    "description": "Select the initial language for new DB editors.",
                    "enum": [
                        "sql",
                        "javascript",
                        "typescript"
                    ],
                    "enumDescriptions": [
                        "Supported in all code editors",
                        "Supported in all code editors",
                        "Supported only in DB editors"
                    ]
                },
                "msg.dbEditor.upperCaseKeywords": {
                    "type": "boolean",
                    "default": true,
                    "description": "When set, keywords shown in code-completion popups appear in all uppercase letters and are inserted as such in the SQL code editors."
                },
                "msg.dbEditor.connectionBrowser.showGreeting": {
                    "type": "boolean",
                    "default": true,
                    "description": "If set, a message section is shown with some useful links."
                },
                "msg.sql.limitRowCount": {
                    "type": "number",
                    "default": 1000,
                    "description": "Determines the size of one page in a result set, but has no effect if a top-level LIMIT clause is specified in the query. Set to 0 to disable auto adding a LIMIT clause and return all records as single page.",
                    "minimum": 0,
                    "maximum": 10000
                },
                "msg.sql.rowPacketSize": {
                    "type": "number",
                    "default": 1000,
                    "description": "Determines the number of result records that are sent in a single response from the backend."
                },
                "msg.shellSession.startLanguage": {
                    "type": "string",
                    "default": "javascript",
                    "description": "Select the initial language for a new shell session.",
                    "enum": [
                        "javascript",
                        "python",
                        "sql"
                    ],
                    "enumDescriptions": [
                        "Supported in all code editors",
                        "Supported only in shell session editors",
                        "Supported in all code editors"
                    ]
                },
                "msg.shell.useExternal": {
                    "type": "boolean",
                    "default": false,
                    "description": "Connect to External MySQL Shell Process."
                },
                "msg.shell.externalUrl": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Specify a URL to be used to connect to a running MySQL instance.\n\nLeave empty to use an automatically launched local MySQL Shell instance.\n\nUse the `Connect to External MySQL Shell Process` menu item in the DB connections section title menu to switch between shell connections."
                },
                "msg.shell.enforceHttps": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Enforce the usage of HTTPS when connecting to MySQL Shell\n\n_This extension relies on a MySQL Shell process serving its user interface and data. To protect this flow of sensitive data it is highly recommended to use HTTPS encryption when other users have access to the machine that is running MySQL Shell. This requires MySQL Shell's rootCA.crt certificate to be installed on the machine that MySQL Shell is running. The [Welcome Wizard](command:msg.runWelcomeWizard) is used to perform this task._\n\nThe certificate can later be found at\n- ~/.mysqlsh-gui/plugin_data/gui_plugin/web_certs/rootCA.crt (macOS, Linux)\n- %appdata%/MySQL/mysqlsh-gui/plugin_data/gui_plugin/web_certs/rootCA.crt (Windows)\n\nWhen using a VS Code ssh-remote development session, please note that this certificate also needs to be installed on your local development machine.\n\n1. Download the certificate to your local machine, e.g. with scp\n2. Install the certificate locally, e.g. with Keychain Access on macOS. Read more about this [here](https://dev.mysql.com/doc/mysql-shell-for-vs-code/en/certificate-handling.html)\n3. Restart VS Code after installing the certificate\n\nPlease [reload VS Code](command:workbench.action.reloadWindow) after changing this setting."
                },
                "msg.shell.showUnsecuredConnectionWarning": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Display a warning panel when not using HTTPS to communicate with MySQL Shell.\n\nPlease [reload VS Code](command:workbench.action.reloadWindow) after changing this setting."
                },
                "msg.tabPosition.newConnection": {
                    "type": "string",
                    "default": "Active",
                    "description": "Where to place the new tab when opening a DB connection.",
                    "enum": [
                        "Active",
                        "Beside Right",
                        "Beside Bottom"
                    ],
                    "enumDescriptions": [
                        "In the currently active editor group",
                        "In editor group beside the active one",
                        "In the editor group beneath the active one"
                    ]
                },
                "msg.tabPosition.newConnectionWithEmbeddedSql": {
                    "type": "string",
                    "default": "Beside Bottom",
                    "description": "Where to place the new tab when running embedded SQL in a DB connection.",
                    "enum": [
                        "Active",
                        "Beside Right",
                        "Beside Bottom"
                    ],
                    "enumDescriptions": [
                        "In the currently active editor group",
                        "In editor group beside the active one",
                        "In the editor group beneath the active one"
                    ]
                },
                "msg.tabPosition.newShellConsole": {
                    "type": "string",
                    "default": "Active",
                    "description": "Where to place the new tab when opening a MySQL Shell Console.",
                    "enum": [
                        "Active",
                        "Beside Right",
                        "Beside Bottom"
                    ],
                    "enumDescriptions": [
                        "In the currently active editor group",
                        "In editor group beside the active one",
                        "In the editor group beneath the active one"
                    ]
                },
                "msg.mrs.displayScriptHelpers": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enables an icon in the editor menu to display the MRS Script Helpers icon."
                }
            }
        },
        "commands": [
            {
                "command": "msg.hasLaunchedSuccessfully",
                "title": "Checks if the extension has launched successfully"
            },
            {
                "command": "msg.execute.normal",
                "title": "Execute the selected or all statements"
            },
            {
                "command": "msg.refreshConnections",
                "title": "Reload the Connection List",
                "icon": {
                    "dark": "images/dark/refresh.svg",
                    "light": "images/light/refresh.svg"
                }
            },
            {
                "command": "msg.openConnection",
                "title": "Open New Database Connection",
                "icon": "$(play)"
            },
            {
                "command": "msg.openConnectionNotebook",
                "title": "Open New Connection using Notebook",
                "icon": {
                    "dark": "images/dark/runNotebook.svg",
                    "light": "images/light/runNotebook.svg"
                }
            },
            {
                "command": "msg.openConnectionSqlScript",
                "title": "Open New Connection using SQL Script",
                "icon": {
                    "dark": "images/dark/runScript.svg",
                    "light": "images/light/runScript.svg"
                }
            },
            {
                "command": "msg.openConnectionNewTab",
                "title": "Open New Database Connection on New Tab",
                "icon": "$(play)"
            },
            {
                "command": "msg.refreshConnection",
                "title": "Reload Database Information",
                "icon": {
                    "dark": "images/dark/refresh.svg",
                    "light": "images/light/refresh.svg"
                }
            },
            {
                "command": "msg.addConnection",
                "title": "Create New DB Connection",
                "icon": {
                    "dark": "images/dark/add.svg",
                    "light": "images/light/add.svg"
                }
            },
            {
                "command": "msg.duplicateConnection",
                "title": "Duplicate this DB Connection",
                "icon": {
                    "dark": "images/dark/clone.svg",
                    "light": "images/light/clone.svg"
                }
            },
            {
                "command": "msg.removeConnection",
                "title": "Delete DB Connection",
                "icon": {
                    "dark": "images/dark/remove.svg",
                    "light": "images/light/remove.svg"
                }
            },
            {
                "command": "msg.editConnection",
                "title": "Edit DB Connection",
                "icon": "$(edit)"
            },
            {
                "command": "msg.newSessionUsingConnection",
                "title": "Open New MySQL Shell Console for this Connection"
            },
            {
                "command": "msg.defaultConnection",
                "title": "Set this DB Connection as Default"
            },
            {
                "command": "msg.showSystemSchemasOnConnection",
                "title": "Show MySQL System Schemas"
            },
            {
                "command": "msg.hideSystemSchemasOnConnection",
                "title": "Hide MySQL System Schemas"
            },
            {
                "command": "msg.showTableData",
                "title": "Show Data"
            },
            {
                "command": "msg.selectTableRows",
                "title": "Select Rows in DB Notebook"
            },
            {
                "command": "msg.openSession",
                "title": "Open this MySQL Shell Console"
            },
            {
                "command": "msg.removeSession",
                "title": "Close this MySQL Shell Console",
                "icon": "$(close)"
            },
            {
                "command": "msg.selectProfile",
                "title": "Select a MySQL Shell Profile"
            },
            {
                "command": "msg.executeEmbeddedSqlFromEditor",
                "title": "Execute Embedded SQL with MySQL Shell"
            },
            {
                "command": "msg.executeSelectedSqlFromEditor",
                "title": "Execute Current Selection with MySQL Shell"
            },
            {
                "command": "msg.runWelcomeWizard",
                "title": "Relaunch Welcome Wizard"
            },
            {
                "command": "msg.resetExtension",
                "title": "Reset MySQL Shell for VS Code Extension"
            },
            {
                "command": "msg.fileBugReport",
                "title": "File Bug Report"
            },
            {
                "command": "msg.restartShell",
                "title": "Restart the Internal MySQL Shell Process"
            },
            {
                "command": "msg.connectToShell",
                "title": "Connect to External MySQL Shell Process"
            },
            {
                "command": "msg.dumpSchemaToDisk",
                "title": "Database Schema Dump"
            },
            {
                "command": "msg.dumpSchemaToDiskForMds",
                "title": "Database Schema Dump for MySQL Database Service"
            },
            {
                "command": "msg.createSchema",
                "title": "Create Schema..."
            },
            {
                "command": "msg.dropSchema",
                "title": "Drop Schema..."
            },
            {
                "command": "msg.makeCurrentSchema",
                "title": "Set As Current Database Schema"
            },
            {
                "command": "msg.createTable",
                "title": "Create Table..."
            },
            {
                "command": "msg.dropTable",
                "title": "Drop Table..."
            },
            {
                "command": "msg.createView",
                "title": "Create View..."
            },
            {
                "command": "msg.dropView",
                "title": "Drop View..."
            },
            {
                "command": "msg.createProcedure",
                "title": "Create Stored Procedure..."
            },
            {
                "command": "msg.createFunction",
                "title": "Create Stored Function..."
            },
            {
                "command": "msg.createFunctionJs",
                "title": "Create Stored JavaScript Function..."
            },
            {
                "command": "msg.editRoutine",
                "title": "Edit Stored Routine..."
            },
            {
                "command": "msg.dropRoutine",
                "title": "Drop Stored Routine..."
            },
            {
                "command": "msg.createTrigger",
                "title": "Create Trigger..."
            },
            {
                "command": "msg.dropTrigger",
                "title": "Drop Trigger..."
            },
            {
                "command": "msg.dropEvent",
                "title": "Drop Event..."
            },
            {
                "command": "msg.loadDumpFromDisk",
                "title": "Load Dump from Disk..."
            },
            {
                "command": "msg.loadScriptFromDisk",
                "title": "Load SQL Script from Disk...",
                "icon": {
                    "dark": "images/dark/loadScript.svg",
                    "light": "images/light/loadScript.svg"
                }
            },
            {
                "command": "msg.copyNameToClipboard",
                "title": "Name"
            },
            {
                "command": "msg.copyCreateScriptToClipboard",
                "title": "CREATE Statement"
            },
            {
                "command": "msg.copyCreateScriptWithDelimitersToClipboard",
                "title": "CREATE Statement with DELIMITERs"
            },
            {
                "command": "msg.copyDropCreateScriptWithDelimitersToClipboard",
                "title": "DROP & CREATE Statement with DELIMITERs"
            },
            {
                "command": "msg.editInScriptEditor",
                "title": "Edit File in MySQL Shell"
            },
            {
                "command": "msg.openNotebookWithConnection",
                "title": "Open the Notebook with connection..."
            },
            {
                "command": "msg.openScriptWithConnection",
                "title": "Open with MySQL Shell..."
            },
            {
                "command": "msg.closeEditor",
                "title": "Close Editor",
                "icon": "$(close)"
            },
            {
                "command": "msg.openDBBrowser",
                "title": "Open the DB Connection Browser",
                "icon": "$(play)"
            },
            {
                "command": "msg.newNotebookMysql",
                "title": "New MySQL Notebook",
                "icon": {
                    "dark": "images/dark/newNotebook.svg",
                    "light": "images/light/newNotebook.svg"
                }
            },
            {
                "command": "msg.newNotebookSqlite",
                "title": "New SQLite Notebook",
                "icon": {
                    "dark": "images/dark/newNotebook.svg",
                    "light": "images/light/newNotebook.svg"
                }
            },
            {
                "command": "msg.newSession",
                "title": "Open New MySQL Shell Console",
                "icon": {
                    "dark": "images/dark/newNotebook.svg",
                    "light": "images/light/newNotebook.svg"
                }
            },
            {
                "command": "msg.newScriptJs",
                "title": "New JavaScript Script",
                "icon": {
                    "dark": "images/dark/file-icons/newScriptJs.svg",
                    "light": "images/light/file-icons/newScriptJs.svg"
                }
            },
            {
                "command": "msg.newScriptMysql",
                "title": "New MySQL Script",
                "icon": {
                    "dark": "images/dark/newScript.svg",
                    "light": "images/light/newScript.svg"
                }
            },
            {
                "command": "msg.newScriptSqlite",
                "title": "New SQLite Script",
                "icon": {
                    "dark": "images/dark/newScript.svg",
                    "light": "images/light/newScript.svg"
                }
            },
            {
                "command": "msg.newScriptTs",
                "title": "New TypeScript Script",
                "icon": {
                    "dark": "images/dark/file-icons/newScriptTs.svg",
                    "light": "images/light/file-icons/newScriptTs.svg"
                }
            },
            {
                "title": "Select Document",
                "command": "msg.selectDocument"
            },
            {
                "command": "msg.mrs.configureMySQLRestService",
                "title": "Configure Instance for MySQL REST Service Support"
            },
            {
                "command": "msg.mrs.enableMySQLRestService",
                "title": "Enable MySQL REST Service"
            },
            {
                "command": "msg.mrs.disableMySQLRestService",
                "title": "Disable MySQL REST Service"
            },
            {
                "command": "msg.mrs.showPrivateItems",
                "title": "Show Private Items"
            },
            {
                "command": "msg.mrs.hidePrivateItems",
                "title": "Hide Private Items"
            },
            {
                "command": "msg.mrs.bootstrapLocalRouter",
                "title": "Bootstrap Local MySQL Router Instance"
            },
            {
                "command": "msg.mrs.startLocalRouter",
                "title": "Start Local MySQL Router Instance"
            },
            {
                "command": "msg.mrs.stopLocalRouter",
                "title": "Stop Local MySQL Router Instance"
            },
            {
                "command": "msg.mrs.killLocalRouters",
                "title": "Kill Local MySQL Router Instances"
            },
            {
                "command": "msg.mrs.docs",
                "title": "Browse the MySQL REST Service Documentation",
                "icon": {
                    "dark": "images/dark/docs.svg",
                    "light": "images/light/docs.svg"
                }
            },
            {
                "command": "msg.mrs.docs.service",
                "title": "MRS Service Documentation",
                "icon": {
                    "dark": "images/dark/docs.svg",
                    "light": "images/light/docs.svg"
                }
            },
            {
                "command": "msg.mrs.addService",
                "title": "Add REST Service..."
            },
            {
                "command": "msg.mrs.editService",
                "title": "Edit REST Service..."
            },
            {
                "command": "msg.mrs.addAndLinkAuthApp",
                "title": "Add and Link REST Authentication App..."
            },
            {
                "command": "msg.mrs.addAuthApp",
                "title": "Add New Authentication App"
            },
            {
                "command": "msg.mrs.linkAuthApp",
                "title": "Link REST Authentication App..."
            },
            {
                "command": "msg.mrs.unlinkAuthApp",
                "title": "Unlink REST Authentication App..."
            },
            {
                "command": "msg.mrs.addContentSet",
                "title": "Add New REST Content Set"
            },
            {
                "command": "msg.mrs.addOpenApiUiContentSet",
                "title": "Deploy OpenAPI Web UI"
            },
            {
                "command": "msg.mrs.setCurrentService",
                "title": "Set as Current REST Service"
            },
            {
                "command": "msg.mrs.deleteService",
                "title": "Delete REST Service..."
            },
            {
                "command": "msg.mrs.deleteRouter",
                "title": "Delete Router..."
            },
            {
                "command": "msg.mrs.deleteSchema",
                "title": "Delete REST Schema..."
            },
            {
                "command": "msg.mds.loadToHeatWave",
                "title": "Load Data to HeatWave Cluster"
            },
            {
                "command": "msg.mrs.addSchema",
                "title": "Add Schema to REST Service"
            },
            {
                "command": "msg.mrs.editSchema",
                "title": "Edit REST Schema..."
            },
            {
                "command": "msg.mrs.dumpCreateSchemaSql",
                "title": "REST Schema SQL..."
            },
            {
                "command": "msg.mrs.editAuthApp",
                "title": "Edit Authentication App"
            },
            {
                "command": "msg.mrs.deleteAuthApp",
                "title": "Delete Authentication App"
            },
            {
                "command": "msg.mrs.addUser",
                "title": "Add User"
            },
            {
                "command": "msg.mrs.editUser",
                "title": "Edit User"
            },
            {
                "command": "msg.mrs.deleteUser",
                "title": "Delete User"
            },
            {
                "command": "msg.mrs.addDbObject",
                "title": "Add Database Object to REST Service"
            },
            {
                "command": "msg.mrs.editDbObject",
                "title": "Edit REST Object..."
            },
            {
                "command": "msg.mrs.deleteDbObject",
                "title": "Delete REST Object"
            },
            {
                "command": "msg.mrs.copyDbObjectRequestPath",
                "title": "Copy REST Object Request Path"
            },
            {
                "command": "msg.mrs.openDbObjectRequestPath",
                "title": "Open REST Object Request Path in Web Browser"
            },
            {
                "command": "msg.mrs.openContentSetRequestPath",
                "title": "Open Content Set Request Path in Web Browser"
            },
            {
                "command": "msg.mrs.openContentFileRequestPath",
                "title": "Open Content File Request Path in Web Browser"
            },
            {
                "command": "msg.mrs.deleteContentSet",
                "title": "Delete REST Content Set"
            },
            {
                "command": "msg.mrs.addFolderAsContentSet",
                "title": "Upload Folder to MySQL REST Service"
            },
            {
                "command": "msg.mrs.rebuildMrsSdk",
                "title": "Rebuild MRS SDK"
            },
            {
                "command": "msg.mrs.dumpSchemaToJSONFile",
                "title": "REST Schema To JSON File..."
            },
            {
                "command": "msg.mrs.dumpObjectToJSONFile",
                "title": "REST Object To JSON File..."
            },
            {
                "command": "msg.mrs.loadSchemaFromJSONFile",
                "title": "REST Schema From JSON File..."
            },
            {
                "command": "msg.mrs.exportServiceSdk",
                "title": "REST Client SDK Files ..."
            },
            {
                "command": "msg.mrs.exportCreateServiceSql",
                "title": "Export CREATE REST SERVICE Statement..."
            },
            {
                "command": "msg.mrs.exportCreateServiceSqlIncludeAllObjects",
                "title": "Export CREATE REST SERVICE Statement Including All Objects..."
            },
            {
                "command": "msg.mrs.exportCreateSchemaSql",
                "title": "Export CREATE REST SCHEMA Statement..."
            },
            {
                "command": "msg.mrs.exportCreateSchemaSqlIncludeAllObjects",
                "title": "Export CREATE REST SCHEMA Statement Including All Objects..."
            },
            {
                "command": "msg.mrs.exportCreateDbObjectSql",
                "title": "Create Statement..."
            },
            {
                "command": "msg.mrs.exportCreateContentSetSql",
                "title": "Create Statement..."
            },
            {
                "command": "msg.mrs.exportCreateContentFileSql",
                "title": "Create Statement..."
            },
            {
                "command": "msg.mrs.exportCreateAuthAppSql",
                "title": "Create Statement..."
            },
            {
                "command": "msg.mrs.exportCreateAuthAppSqlIncludeAllObjects",
                "title": "Create Statement Including All Objects..."
            },
            {
                "command": "msg.mrs.exportCreateUserSql",
                "title": "Create Statement..."
            },
            {
                "command": "msg.mrs.exportCreateUserSqlIncludeAllObjects",
                "title": "Create Statement Including All Objects..."
            },
            {
                "command": "msg.mrs.copyCreateServiceSql",
                "title": "Copy CREATE REST SERVICE Statement"
            },
            {
                "command": "msg.mrs.copyCreateServiceSqlIncludeAllObjects",
                "title": "Copy CREATE REST SERVICE Statement Including All Objects"
            },
            {
                "command": "msg.mrs.copyCreateSchemaSql",
                "title": "Copy CREATE REST SCHEMA Statement"
            },
            {
                "command": "msg.mrs.copyCreateSchemaSqlIncludeAllObjects",
                "title": "Copy CREATE REST SCHEMA Statement Including All Objects"
            },
            {
                "command": "msg.mrs.copyCreateDbObjectSql",
                "title": "Create Statement"
            },
            {
                "command": "msg.mrs.copyCreateContentSetSql",
                "title": "Create Statement"
            },
            {
                "command": "msg.mrs.copyCreateContentFileSql",
                "title": "Create Statement"
            },
            {
                "command": "msg.mrs.copyCreateAuthAppSql",
                "title": "Create Statement"
            },
            {
                "command": "msg.mrs.copyCreateAuthAppSqlIncludeAllObjects",
                "title": "Create Statement Including All Objects"
            },
            {
                "command": "msg.mrs.copyCreateUserSql",
                "title": "Create Statement"
            },
            {
                "command": "msg.mrs.copyCreateUserSqlIncludeAllObjects",
                "title": "Create Statement Including All Objects"
            },
            {
                "command": "msg.mrs.loadObjectFromJSONFile",
                "title": "REST Object From JSON File..."
            },
            {
                "command": "msg.showTaskOutput",
                "title": "Show Task Output"
            },
            {
                "command": "msg.showServerStatus",
                "title": "Show Server Status"
            },
            {
                "command": "msg.showClientConnections",
                "title": "Show Client Connections"
            },
            {
                "command": "msg.showPerformanceDashboard",
                "title": "Show Performance Dashboard"
            },
            {
                "command": "msg.showLakehouseNavigator",
                "title": "Show Lakehouse Navigator"
            },
            {
                "command": "msg.mds.configureOciProfiles",
                "title": "Configure the OCI Profile list",
                "icon": {
                    "dark": "images/dark/config.svg",
                    "light": "images/light/config.svg"
                }
            },
            {
                "command": "msg.mds.refreshOciProfiles",
                "title": "Reload the OCI Profile list",
                "icon": {
                    "dark": "images/dark/refresh.svg",
                    "light": "images/light/refresh.svg"
                }
            },
            {
                "command": "msg.mds.getProfileInfo",
                "title": "View Config Profile Information"
            },
            {
                "command": "msg.mds.setDefaultProfile",
                "title": "Set as New Default Config Profile"
            },
            {
                "command": "msg.mds.getCompartmentInfo",
                "title": "View Compartment Information"
            },
            {
                "command": "msg.mds.setCurrentCompartment",
                "title": "Set as Current Compartment"
            },
            {
                "command": "msg.mds.getDbSystemInfo",
                "title": "View DB System Information"
            },
            {
                "command": "msg.mds.startDbSystem",
                "title": "Start the DB System"
            },
            {
                "command": "msg.mds.restartDbSystem",
                "title": "Restart the DB System"
            },
            {
                "command": "msg.mds.stopDbSystem",
                "title": "Stop the DB System"
            },
            {
                "command": "msg.mds.addHWCluster",
                "title": "Add HeatWave Cluster"
            },
            {
                "command": "msg.mds.startHWCluster",
                "title": "Start the HeatWave Cluster"
            },
            {
                "command": "msg.mds.stopHWCluster",
                "title": "Stop the HeatWave Cluster"
            },
            {
                "command": "msg.mds.restartHWCluster",
                "title": "Restart the HeatWave Cluster"
            },
            {
                "command": "msg.mds.rescaleHWCluster",
                "title": "Rescale the HeatWave Cluster"
            },
            {
                "command": "msg.mds.deleteHWCluster",
                "title": "Delete the HeatWave Cluster"
            },
            {
                "command": "msg.mds.deleteDbSystem",
                "title": "Delete the DB System"
            },
            {
                "command": "msg.mds.createConnectionViaBastionService",
                "title": "Create Connection with Bastion Service"
            },
            {
                "command": "msg.mds.createRouterEndpoint",
                "title": "Create MySQL Router Endpoint on new Compute Instance"
            },
            {
                "command": "msg.mds.getComputeInstance",
                "title": "View Compute Instance Information"
            },
            {
                "command": "msg.mds.deleteBastion",
                "title": "Delete Bastion"
            },
            {
                "command": "msg.mds.getBastion",
                "title": "Get Bastion Information"
            },
            {
                "command": "msg.mds.setCurrentBastion",
                "title": "Set as Current Bastion"
            },
            {
                "command": "msg.mds.openBastionSshSession",
                "title": "Open SSH Bastion Session"
            },
            {
                "command": "msg.mds.deleteComputeInstance",
                "title": "Delete Compute Instance"
            },
            {
                "command": "msg.mds.refreshOnBastionActiveState",
                "title": "Refresh When Bastion Reaches Active State"
            },
            {
                "command": "msg.mds.getLoadBalancer",
                "title": "Get Load Balancer Information"
            },
            {
                "command": "msg.mrs.enableScriptHelpers",
                "title": "Enable MRS Script Helpers",
                "icon": {
                    "dark": "images/dark/mrsService.svg",
                    "light": "images/light/mrsService.svg"
                }
            },
            {
                "command": "msg.mrs.disableScriptHelpers",
                "title": "Disable MRS Script Helpers",
                "icon": {
                    "dark": "images/dark/mrsServiceDefault.svg",
                    "light": "images/light/mrsServiceDefault.svg"
                }
            },
            {
                "command": "msg.msm.createNewProjectFolder",
                "title": "Create New MSM Project Folder"
            },
            {
                "command": "msg.msm.getProjectInformation",
                "title": "Get MSM Project Information"
            },
            {
                "command": "msg.msm.prepareRelease",
                "title": "Prepare Release"
            },
            {
                "command": "msg.msm.generateDeploymentScript",
                "title": "Generate Deployment Script"
            }
        ],
        "submenus": [
            {
                "id": "msg.copyToClipboard",
                "label": "Copy to Clipboard",
                "command": ""
            },
            {
                "id": "msg.dumpToDisk",
                "label": "Dump to Disk",
                "command": ""
            },
            {
                "id": "msg.loadFromDisk",
                "label": "Load from Disk",
                "command": ""
            },
            {
                "id": "msg.msm.subMenu",
                "label": "MySQL Schema Management"
            },
            {
                "id": "msg.mrs.subMenu",
                "label": "MySQL REST Service"
            }
        ],
        "menus": {
            "msg.loadFromDisk": [
                {
                    "command": "msg.mrs.loadSchemaFromJSONFile",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.loadObjectFromJSONFile",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "2_msg@1"
                }
            ],
            "msg.dumpToDisk": [
                {
                    "command": "msg.dumpSchemaToDisk",
                    "when": "view == msg.connections && viewItem == schemaItemMySQL",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.dumpSchemaToDiskForMds",
                    "when": "view == msg.connections && viewItem == schemaItemMySQL",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mrs.dumpSchemaToJSONFile",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.dumpObjectToJSONFile",
                    "when": "view == msg.connections && viewItem == mrsDbObject",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.exportServiceSdk",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.dumpCreateSchemaSql",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "2_msg@2"
                },
                {
                    "command": "msg.mrs.exportCreateServiceSql",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.exportCreateServiceSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "3_msg@3"
                },
                {
                    "command": "msg.mrs.exportCreateSchemaSql",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.exportCreateSchemaSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "3_msg@3"
                },
                {
                    "command": "msg.mrs.exportCreateDbObjectSql",
                    "when": "view == msg.connections && viewItem == mrsDbObject",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.exportCreateContentSetSql",
                    "when": "view == msg.connections && viewItem == mrsContentSet",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.exportCreateContentFileSql",
                    "when": "view == msg.connections && viewItem == mrsContentFile",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.exportCreateAuthAppSql",
                    "when": "view == msg.connections && viewItem == mrsServiceAuthApp",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.exportCreateAuthAppSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsServiceAuthApp",
                    "group": "3_msg@3"
                },
                {
                    "command": "msg.mrs.exportCreateUserSql",
                    "when": "view == msg.connections && viewItem == mrsUser",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.exportCreateUserSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsUser",
                    "group": "3_msg@3"
                }
            ],
            "msg.copyToClipboard": [
                {
                    "command": "msg.copyNameToClipboard",
                    "when": "view == msg.connections && viewItem =~ /^schema(Table|View|Routine)?Item.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.copyCreateScriptToClipboard",
                    "when": "view == msg.connections && viewItem =~ /^schema(Table|View|Routine)?Item.*/",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.copyCreateScriptWithDelimitersToClipboard",
                    "when": "view == msg.connections && viewItem =~ /^schemaRoutineItem.*/",
                    "group": "1_msg@3"
                },
                {
                    "command": "msg.copyDropCreateScriptWithDelimitersToClipboard",
                    "when": "view == msg.connections && viewItem =~ /^schemaRoutineItem.*/",
                    "group": "1_msg@4"
                },
                {
                    "command": "msg.mrs.copyDbObjectRequestPath",
                    "when": "viewItem == mrsDbObject",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.copyCreateServiceSql",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.copyCreateServiceSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.copyCreateSchemaSql",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.copyCreateSchemaSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.copyCreateDbObjectSql",
                    "when": "view == msg.connections && viewItem == mrsDbObject",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.copyCreateAuthAppSql",
                    "when": "view == msg.connections && viewItem == mrsServiceAuthApp",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.copyCreateAuthAppSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsServiceAuthApp",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.copyCreateUserSql",
                    "when": "view == msg.connections && viewItem == mrsUser",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.copyCreateUserSqlIncludeAllObjects",
                    "when": "view == msg.connections && viewItem == mrsUser",
                    "group": "3_msg@2"
                }
            ],
            "msg.mrs.subMenu": [
                {
                    "when": "explorerResourceIsFolder",
                    "command": "msg.mrs.addFolderAsContentSet",
                    "group": "8_msg@1"
                },
                {
                    "when": "explorerResourceIsFolder && resourceExtname =~ /.*\\.mrs\\.sdk'$/",
                    "command": "msg.mrs.rebuildMrsSdk",
                    "group": "8_msg@2"
                }
            ],
            "msg.msm.subMenu": [
                {
                    "when": "explorerResourceIsFolder && !(resourceFilename =~ /.*\\.msm\\.project$/)",
                    "command": "msg.msm.createNewProjectFolder",
                    "group": "1_msg@1"
                },
                {
                    "when": "explorerResourceIsFolder && resourceFilename =~ /.*\\.msm\\.project$/",
                    "command": "msg.msm.getProjectInformation",
                    "group": "2_msg@1"
                },
                {
                    "when": "explorerResourceIsFolder && resourceFilename =~ /.*\\.msm\\.project$/",
                    "command": "msg.msm.prepareRelease",
                    "group": "3_msg@1"
                },
                {
                    "when": "explorerResourceIsFolder && resourceFilename =~ /.*\\.msm\\.project$/",
                    "command": "msg.msm.generateDeploymentScript",
                    "group": "3_msg@2"
                }
            ],
            "explorer/context": [
                {
                    "when": "resourceLangId == mysql-notebook",
                    "command": "msg.openNotebookWithConnection",
                    "group": "1_msg@1"
                },
                {
                    "when": "resourceLangId == mysql || resourceLangId == sql",
                    "command": "msg.openScriptWithConnection",
                    "group": "1_msg@1"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "submenu": "msg.msm.subMenu",
                    "group": "1_msg@1"
                },
                {
                    "when": "explorerResourceIsFolder",
                    "submenu": "msg.mrs.subMenu",
                    "group": "1_msg@2"
                }
            ],
            "editor/title/context": [
                {
                    "when": "resourceLangId == mysql",
                    "command": "msg.execute.normal",
                    "group": "1_msg@1"
                }
            ],
            "editor/title": [
                {
                    "when": "resourceLangId == mysql",
                    "command": "msg.execute.normal",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.enableScriptHelpers",
                    "group": "navigation",
                    "when": "editorLangId == typescript && Oracle.mysql-shell-for-vs-code.mrsScriptDecorationEnabled == false && config.msg.mrs.displayScriptHelpers == true"
                },
                {
                    "command": "msg.mrs.disableScriptHelpers",
                    "group": "navigation",
                    "when": "editorLangId == typescript && Oracle.mysql-shell-for-vs-code.mrsScriptDecorationEnabled == true  && config.msg.mrs.displayScriptHelpers == true"
                }
            ],
            "editor/context": [
                {
                    "when": "resourceLangId == mysql-notebook",
                    "command": "msg.openNotebookWithConnection",
                    "group": "1_msg@1"
                },
                {
                    "when": "resourceLangId == mysql || resourceLangId == sql",
                    "command": "msg.executeSelectedSqlFromEditor",
                    "group": "1_msg@2"
                },
                {
                    "when": "resourceLangId == python || resourceLangId == javascript || resourceLangId == typescript",
                    "command": "msg.executeEmbeddedSqlFromEditor",
                    "group": "1_msg@1"
                }
            ],
            "view/title": [
                {
                    "command": "msg.addConnection",
                    "group": "navigation",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.refreshConnections",
                    "group": "navigation",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.restartShell",
                    "group": "1_msg@1",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.connectToShell",
                    "group": "1_msg@2",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.runWelcomeWizard",
                    "group": "2_msg@1",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.resetExtension",
                    "group": "2_msg@2",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.fileBugReport",
                    "group": "3_msg@1",
                    "when": "view == msg.connections"
                },
                {
                    "command": "msg.mds.configureOciProfiles",
                    "group": "navigation",
                    "when": "view == msg.oci"
                },
                {
                    "command": "msg.mds.refreshOciProfiles",
                    "group": "navigation",
                    "when": "view == msg.oci"
                }
            ],
            "view/item/context": [
                {
                    "command": "msg.refreshConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "inline"
                },
                {
                    "command": "msg.openConnectionNotebook",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "inline"
                },
                {
                    "command": "msg.openConnectionSqlScript",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "inline"
                },
                {
                    "command": "msg.openConnection",
                    "alt": "msg.openConnectionNewTab",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.defaultConnection",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.editConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.duplicateConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.removeConnection",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "3_msg@3"
                },
                {
                    "command": "msg.showSystemSchemasOnConnection",
                    "alt": "msg.hideSystemSchemasOnConnection",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "4_msg@1"
                },
                {
                    "command": "msg.loadScriptFromDisk",
                    "when": "view == msg.connections && viewItem =~ /^connection.*/",
                    "group": "5_msg@1"
                },
                {
                    "command": "msg.loadDumpFromDisk",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "5_msg@2"
                },
                {
                    "command": "msg.newSessionUsingConnection",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "6_msg@1"
                },
                {
                    "command": "msg.mrs.docs",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "7_msg@1"
                },
                {
                    "command": "msg.mrs.configureMySQLRestService",
                    "when": "view == msg.connections && viewItem == connectionMySQL",
                    "group": "7_msg@2"
                },
                {
                    "command": "msg.makeCurrentSchema",
                    "when": "view == msg.connections && viewItem =~ /^schemaItem.*/ && !showsModalDialog",
                    "group": "1_msg@1"
                },
                {
                    "submenu": "msg.loadFromDisk",
                    "when": "viewItem =~ /^schema(Table|View|Routine)?Item.*/ || viewItem =~ /^mrs(Service|Schema|DbObject|ContentSet|ContentFile|User|AuthApp).*/",
                    "group": "2_msg@3"
                },
                {
                    "submenu": "msg.dumpToDisk",
                    "when": "view == msg.connections && viewItem =~ /^schema(Table|View|Routine)?Item.*/ || viewItem =~ /^mrs(Service|Schema|DbObject|ContentSet|ContentFile|User|AuthApp).*/",
                    "group": "2_msg@4"
                },
                {
                    "submenu": "msg.copyToClipboard",
                    "when": "view == msg.connections && viewItem =~ /^schema(Table|View|Routine)?Item.*/ || viewItem =~ /^mrs(Service|Schema|DbObject|ContentSet|ContentFile|User|AuthApp).*/",
                    "group": "2_msg@5"
                },
                {
                    "command": "msg.mds.loadToHeatWave",
                    "when": "view == msg.connections && viewItem == schemaItemMySQL && !showsModalDialog",
                    "group": "4_msg@2"
                },
                {
                    "command": "msg.mrs.addSchema",
                    "when": "view == msg.connections && viewItem == schemaItemMySQL && !showsModalDialog",
                    "group": "5_msg@1"
                },
                {
                    "command": "msg.createProcedure",
                    "when": "view == msg.connections && viewItem == ProceduresGroupItem && !showsModalDialog",
                    "group": "5_msg@2"
                },
                {
                    "command": "msg.createFunction",
                    "when": "view == msg.connections && viewItem == FunctionsGroupItem && !showsModalDialog",
                    "group": "5_msg@3"
                },
                {
                    "command": "msg.createFunctionJs",
                    "when": "view == msg.connections && viewItem == FunctionsGroupItem && !showsModalDialog",
                    "group": "6_msg@1"
                },
                {
                    "command": "msg.dropSchema",
                    "when": "view == msg.connections && viewItem =~ /^schemaItem.*/ && !showsModalDialog",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropTable",
                    "when": "view == msg.connections && viewItem =~ /^schemaTableItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropView",
                    "when": "view == msg.connections && viewItem =~ /^schemaViewItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.editRoutine",
                    "when": "view == msg.connections && viewItem =~ /^schemaRoutineItem.*/",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.dropRoutine",
                    "when": "view == msg.connections && viewItem =~ /^schemaRoutineItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropTrigger",
                    "when": "view == msg.connections && viewItem =~ /^schemaTriggerItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.dropEvent",
                    "when": "view == msg.connections && viewItem =~ /^schemaEventItem.*/",
                    "group": "9_msg@2"
                },
                {
                    "command": "msg.selectTableRows",
                    "when": "view == msg.connections && viewItem =~ /^schemaTableItem.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.showTableData",
                    "when": "view == msg.connections && viewItem =~ /^schemaTableItem.*/",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.selectTableRows",
                    "when": "view == msg.connections && viewItem =~ /^schemaViewItem.*/",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.showTableData",
                    "when": "view == msg.connections && viewItem =~ /^schemaViewItem.*/",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.openDBBrowser",
                    "when": "view == msg.openEditors && viewItem =~ /^editorOverview.*/",
                    "group": "inline"
                },
                {
                    "command": "msg.closeEditor",
                    "when": "view == msg.openEditors && viewItem == editorItem",
                    "group": "inline"
                },
                {
                    "command": "msg.newScriptMysql",
                    "group": "inline@2",
                    "when": "view == msg.openEditors && viewItem == connectionMySQL"
                },
                {
                    "command": "msg.loadScriptFromDisk",
                    "group": "inline@3",
                    "when": "view == msg.openEditors && viewItem == connectionMySQL"
                },
                {
                    "command": "msg.newScriptMysql",
                    "group": "scripts@2",
                    "when": "view == msg.openEditors && viewItem == connectionMySQL"
                },
                {
                    "command": "msg.newScriptSqlite",
                    "group": "inline@2",
                    "when": "view == msg.openEditors && viewItem == connectionSQLite"
                },
                {
                    "command": "msg.newScriptSqlite",
                    "group": "scripts@2",
                    "when": "view == msg.openEditors && viewItem == connectionSQLite"
                },
                {
                    "command": "msg.newScriptJs",
                    "group": "scripts@3",
                    "when": "view == msg.openEditors && viewItem =~ /^connection.*/"
                },
                {
                    "command": "msg.newScriptTs",
                    "group": "scripts@4",
                    "when": "view == msg.openEditors && viewItem =~ /^connection.*/"
                },
                {
                    "command": "msg.loadScriptFromDisk",
                    "group": "scripts2@1",
                    "when": "view == msg.openEditors && viewItem =~ /^connection.*/"
                },
                {
                    "command": "msg.newSessionUsingConnection",
                    "when": "view == msg.openEditors && viewItem =~ /^connectionMySQL/",
                    "group": "sessions@1"
                },
                {
                    "command": "msg.newSession",
                    "group": "sessions@1",
                    "when": "view == msg.openEditors && viewItem =~ /^editorOverview.*/"
                },
                {
                    "command": "msg.removeSession",
                    "when": "view == msg.openEditors && viewItem == session",
                    "group": "inline"
                },
                {
                    "command": "msg.mrs.addService",
                    "when": "viewItem == mrs",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mrs.enableMySQLRestService",
                    "when": "viewItem == mrs",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.disableMySQLRestService",
                    "when": "viewItem == mrs",
                    "group": "2_msg@2"
                },
                {
                    "command": "msg.mrs.showPrivateItems",
                    "alt": "msg.mrs.hidePrivateItems",
                    "when": "viewItem == mrs",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.bootstrapLocalRouter",
                    "when": "viewItem == mrs",
                    "group": "4_msg@1"
                },
                {
                    "command": "msg.mrs.startLocalRouter",
                    "when": "viewItem == mrs",
                    "group": "4_msg@2"
                },
                {
                    "command": "msg.mrs.stopLocalRouter",
                    "when": "viewItem == mrs",
                    "group": "4_msg@3"
                },
                {
                    "command": "msg.mrs.killLocalRouters",
                    "when": "viewItem == mrs",
                    "group": "4_msg@4"
                },
                {
                    "command": "msg.mrs.docs",
                    "when": "viewItem == mrs",
                    "group": "5_msg@1"
                },
                {
                    "command": "msg.mrs.docs",
                    "when": "view == msg.connections && viewItem == mrs",
                    "group": "inline"
                },
                {
                    "command": "msg.mrs.docs.service",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "inline"
                },
                {
                    "command": "msg.mrs.editService",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mrs.setCurrentService",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mrs.addAndLinkAuthApp",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.linkAuthApp",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mrs.unlinkAuthApp",
                    "when": "view == msg.connections && viewItem == mrsServiceAuthApp",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.addAuthApp",
                    "when": "view == msg.connections && viewItem == mrsAuthAppGroup",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.addContentSet",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "4_msg@1"
                },
                {
                    "command": "msg.mrs.addOpenApiUiContentSet",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "4_msg@2"
                },
                {
                    "command": "msg.mrs.deleteService",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "8_msg@1"
                },
                {
                    "command": "msg.mrs.docs.service",
                    "when": "view == msg.connections && viewItem == mrsService",
                    "group": "9_msg@1"
                },
                {
                    "command": "msg.mrs.deleteRouter",
                    "when": "viewItem == mrsRouter",
                    "group": "10_msg@1"
                },
                {
                    "command": "msg.mrs.editSchema",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.deleteSchema",
                    "when": "view == msg.connections && viewItem == mrsSchema",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.editAuthApp",
                    "when": "view == msg.connections && viewItem == mrsAuthApp",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.addUser",
                    "when": "view == msg.connections && viewItem == mrsAuthApp",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.deleteAuthApp",
                    "when": "view == msg.connections && viewItem == mrsAuthApp",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.editUser",
                    "when": "view == msg.connections && viewItem == mrsUser",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.deleteUser",
                    "when": "view == msg.connections && viewItem == mrsUser",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.editDbObject",
                    "when": "viewItem == mrsDbObject",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mrs.openDbObjectRequestPath",
                    "when": "viewItem == mrsDbObject",
                    "group": "2_msg@2"
                },
                {
                    "command": "msg.mrs.addDbObject",
                    "when": "viewItem == schemaTableItemMySQL || viewItem == schemaViewItemMySQL || viewItem == schemaRoutineItemMySQL",
                    "group": "4_msg@1"
                },
                {
                    "command": "msg.mrs.deleteDbObject",
                    "when": "viewItem == mrsDbObject",
                    "group": "9_msg@1"
                },
                {
                    "command": "msg.mrs.copyCreateContentSetSql",
                    "when": "viewItem == mrsContentSet",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mrs.openContentSetRequestPath",
                    "when": "viewItem == mrsContentSet",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mrs.deleteContentSet",
                    "when": "viewItem == mrsContentSet",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mrs.copyCreateContentFileSql",
                    "when": "viewItem == mrsContentFile",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mrs.openContentFileRequestPath",
                    "when": "viewItem == mrsContentFile",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.getProfileInfo",
                    "when": "view == msg.oci && viewItem == mdsConfigProfile",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.setDefaultProfile",
                    "when": "view == msg.oci && viewItem == mdsConfigProfile",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.getCompartmentInfo",
                    "when": "view == msg.oci && viewItem == mdsCompartment",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.setCurrentCompartment",
                    "when": "view == msg.oci && viewItem == mdsCompartment",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.getDbSystemInfo",
                    "when": "viewItem == mdsDbSystem || viewItem == mdsDbSystemHW",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.createConnectionViaBastionService",
                    "when": "viewItem == mdsDbSystem || viewItem == mdsDbSystemHW",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.startDbSystem",
                    "title": "Start the DB System",
                    "when": "viewItem == mdsDbSystem || viewItem == mdsDbSystemHW",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mds.restartDbSystem",
                    "title": "Restart the DB System",
                    "when": "viewItem == mdsDbSystem || viewItem == mdsDbSystemHW",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mds.stopDbSystem",
                    "when": "viewItem == mdsDbSystem || viewItem == mdsDbSystemHW",
                    "group": "3_msg@3"
                },
                {
                    "command": "msg.mds.addHWCluster",
                    "when": "viewItem == mdsDbSystemHW",
                    "group": "4_msg@1"
                },
                {
                    "command": "msg.mds.deleteDbSystem",
                    "when": "viewItem == mdsDbSystem || viewItem == mdsDbSystemHW",
                    "group": "5_msg@1"
                },
                {
                    "command": "msg.mds.createRouterEndpoint",
                    "when": "viewItem == mdsDbSystem || viewItem == mdsDbSystemHW",
                    "group": "6_msg@1"
                },
                {
                    "command": "msg.mds.startHWCluster",
                    "when": "viewItem == mdsHWCluster",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.stopHWCluster",
                    "when": "viewItem == mdsHWCluster",
                    "group": "1_msg@2"
                },
                {
                    "command": "msg.mds.restartHWCluster",
                    "when": "viewItem == mdsHWCluster",
                    "group": "1_msg@3"
                },
                {
                    "command": "msg.mds.rescaleHWCluster",
                    "when": "viewItem == mdsHWCluster",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.deleteHWCluster",
                    "when": "viewItem == mdsHWCluster",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mds.getBastion",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.setCurrentBastion",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.deleteBastion",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mds.refreshOnBastionActiveState",
                    "when": "view == msg.oci && viewItem == mdsBastion",
                    "group": "3_msg@2"
                },
                {
                    "command": "msg.mds.getComputeInstance",
                    "when": "view == msg.oci && viewItem == mdsComputeInstance",
                    "group": "1_msg@1"
                },
                {
                    "command": "msg.mds.openBastionSshSession",
                    "when": "view == msg.oci && viewItem == mdsComputeInstance",
                    "group": "2_msg@1"
                },
                {
                    "command": "msg.mds.deleteComputeInstance",
                    "when": "view == msg.oci && viewItem == mdsComputeInstance",
                    "group": "3_msg@1"
                },
                {
                    "command": "msg.mds.getLoadBalancer",
                    "when": "view == msg.oci && viewItem == mdsLoadBalancer",
                    "group": "1_msg@1"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "msg-view",
                    "title": "MySQL Shell for VS Code",
                    "icon": "images/mysqlShellForVsCode.svg"
                }
            ]
        },
        "views": {
            "msg-view": [
                {
                    "id": "msg.openEditors",
                    "name": "OPEN EDITORS"
                },
                {
                    "id": "msg.connections",
                    "name": "DATABASE CONNECTIONS"
                },
                {
                    "id": "msg.oci",
                    "name": "ORACLE CLOUD INFRASTRUCTURE"
                },
                {
                    "id": "msg.shellTasks",
                    "name": "MYSQL SHELL TASKS"
                }
            ]
        }
    },
    "dependencies": {
        "anser": "2.3.2",
        "antlr4ng": "3.0.3",
        "regedit": "5.1.3",
        "ws": "8.16.0"
    },
    "devDependencies": {
        "@types/node": "20.12.12",
        "@types/vscode": "1.74.0",
        "@types/ws": "8.5.10",
        "@typescript-eslint/eslint-plugin": "7.11.0",
        "@typescript-eslint/parser": "7.11.0",
        "esbuild": "0.21.4",
        "eslint": "8.56.0",
        "eslint-plugin-import": "2.29.1",
        "eslint-plugin-jsdoc": "48.2.6",
        "eslint-plugin-prefer-arrow": "1.2.3",
        "oci-mysql": "2.86.3",
        "typescript": "5.4.5"
    },
    "scripts": {
        "build-dev-package": "vsce package",
        "build-packages": "scripts/package_extension.sh",
        "build-packages-win": "npm run scripts/package_extension.ps1",
        "publish-packages": "scripts/publish_packages.sh",
        "vscode:prepublish": "npm run esbuild -- --minify && node scripts/fix_vbs.js",
        "fix-vbs-win": "@powershell -NoProfile -ExecutionPolicy Unrestricted -Command ./scripts/copy_vbs.ps1",
        "fix-vbs": "scripts/copy_vbs.sh",
        "esbuild": "esbuild ./src/extension.ts --main-fields=module,main --bundle --outfile=out/main.cjs --external:vscode --format=cjs --platform=node",
        "esbuild-watch": "npm run esbuild -- --sourcemap --watch",
        "lint": "eslint \"./src/**/*.ts\"",
        "unit-tests": "mkdir -p .vscode-test/vscode-dummy/ && touch .vscode-test/vscode-dummy/dummy.txt",
        "package-extension": "pwsh scripts/package_extension.ps1"
    }
}
