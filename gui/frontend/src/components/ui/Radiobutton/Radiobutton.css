/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2.0,
 * as published by the Free Software Foundation.
 *
 * This program is designed to work with certain software (including
 * but not limited to OpenSSL) that is licensed under separate terms, as
 * designated in a particular file or component or in included license
 * documentation.  The authors of MySQL hereby grant you an additional
 * permission to link the program and your derivative works with the
 * separately licensed software that they have either included with
 * the program or referenced in the documentation.
 *
 * This program is distributed in the hope that it will be useful,  but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 * the GNU General Public License, version 2.0, for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */

.msg.radioButton {
    display: flex;
    align-items: center;

    position: relative;
    user-select: none;

    height: 25px;
    padding: 0 5px 0 2px;

    cursor: pointer;
}

/* This is the custom radio button. */
.msg.radioButton .checkMark {
    content: '';
    flex: 0 0 16px;

    top: 3px;
    left: 5px;
    width: 16px;
    height: 16px;

    margin: 0 4px;

    background-color: var(--checkbox-background);
    border: 1px solid var(--checkbox-border);
    border-radius: 50%;

    transition: background-color 0.25s
}

.msg.radioButton:hover > .checkMark {
    background-color: var(--button-hoverBackground);
    transition: background-color 0.25s
}

.msg.radioButton.disabled > .checkMark {
    background-color: var(--button-secondaryHoverBackground);
    transition: background-color 0.25s
}

.msg.radioButton.disabled > .checkMark::after {
    background-color: var(--checkbox-foreground);
}

.msg.radioButton.disabled {
    color: var(--disabledForeground);
}

/* Hide the default HTML input UI. */
.msg.radioButton > input {
    display: none;
}

.msg.radioButton .checkMark::after {
    content: "";
    position: absolute;
    display: none;
}

/* This is the indicator for the checked state. */
.msg.radioButton input:checked ~ .checkMark::after {
    display: inline-block;
    top: 8.5px;
    left: 11px;

    width: 8px;
    height: 8px;

    background: var(--checkbox-foreground);
    border-radius: 50%;
}
