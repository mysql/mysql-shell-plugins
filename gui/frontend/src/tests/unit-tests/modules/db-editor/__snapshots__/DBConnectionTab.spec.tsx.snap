// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DBConnectionTab tests Test DBConnectionTab snapshot 1`] = `
<SplitContainer
  className="msg connectionTabHost"
  onPaneResized={[Function]}
  orientation="row"
  panes={
    [
      {
        "collapsed": false,
        "content": <Explorer
          backend={
            ShellInterfaceSqlEditor {
              "mds": ShellInterfaceMds {},
              "moduleSessionLookupId": "",
              "mrs": ShellInterfaceMrs {
                "moduleSessionLookupId": "",
              },
            }
          }
          dbType="MySQL"
          editors={
            [
              {
                "caption": "",
                "currentVersion": 0,
                "id": "SQLEditor",
                "state": {
                  "model": TextModel {
                    "__isDisposing": false,
                    "_alternativeVersionId": 3,
                    "_associatedResource": {
                      "$mid": 1,
                      "authority": "model",
                      "external": "inmemory://model/1",
                      "path": "/1",
                      "scheme": "inmemory",
                    },
                    "_attachedEditorCount": 0,
                    "_attachedViews": AttachedViews {
                      "_onDidChangeVisibleRanges": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_listeners": UniqueContainer {
                          "value": [Function],
                        },
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 1,
                      },
                      "_views": Set {},
                      "onDidChangeVisibleRanges": [Function],
                    },
                    "_bracketPairs": BracketPairsTextModelPart {
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          MutableDisposable {
                            "_isDisposed": false,
                          },
                          {
                            "dispose": [Function],
                          },
                        },
                      },
                      "bracketPairsTree": MutableDisposable {
                        "_isDisposed": false,
                      },
                      "bracketsRequested": false,
                      "languageConfigurationService": bound LanguageConfigurationService {
                        "constructor": [Function],
                      },
                      "onDidChange": [Function],
                      "onDidChangeEmitter": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_listeners": UniqueContainer {
                          "value": [Function],
                        },
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 1,
                      },
                      "textModel": [Circular],
                    },
                    "_buffer": PieceTreeTextBuffer {
                      "_BOM": "",
                      "_mightContainNonBasicASCII": false,
                      "_mightContainRTL": false,
                      "_mightContainUnusualLineTerminators": false,
                      "_onDidChangeContent": Emitter {
                        "_deliveryQueue": undefined,
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_pieceTree": PieceTreeBase {
                        "_EOL": "
",
                        "_EOLLength": 1,
                        "_EOLNormalized": true,
                        "_buffers": [
                          StringBuffer {
                            "buffer": "",
                            "lineStarts": [
                              0,
                            ],
                          },
                          StringBuffer {
                            "buffer": "
print("typescript");
\\js

print("javascript");
\\sql

select "(my)sql" from dual;
\\py

print("python");
",
                            "lineStarts": Uint16Array [
                              0,
                              1,
                              22,
                              26,
                              27,
                              48,
                              53,
                              54,
                              82,
                              86,
                              87,
                              104,
                            ],
                          },
                        ],
                        "_lastChangeBufferPos": {
                          "column": 0,
                          "line": 0,
                        },
                        "_lastVisitedLine": {
                          "lineNumber": 0,
                          "value": "",
                        },
                        "_length": 104,
                        "_lineCnt": 12,
                        "_searchCache": PieceTreeSearchCache {
                          "_cache": [],
                          "_limit": 1,
                        },
                        "root": TreeNode {
                          "color": 0,
                          "left": TreeNode {
                            "color": 0,
                            "left": [Circular],
                            "lf_left": 0,
                            "parent": [Circular],
                            "piece": null,
                            "right": [Circular],
                            "size_left": 0,
                          },
                          "lf_left": 0,
                          "parent": TreeNode {
                            "color": 0,
                            "left": [Circular],
                            "lf_left": 0,
                            "parent": [Circular],
                            "piece": null,
                            "right": [Circular],
                            "size_left": 0,
                          },
                          "piece": Piece {
                            "bufferIndex": 1,
                            "end": {
                              "column": 0,
                              "line": 11,
                            },
                            "length": 104,
                            "lineFeedCnt": 11,
                            "start": {
                              "column": 0,
                              "line": 0,
                            },
                          },
                          "right": TreeNode {
                            "color": 0,
                            "left": [Circular],
                            "lf_left": 0,
                            "parent": [Circular],
                            "piece": null,
                            "right": [Circular],
                            "size_left": 0,
                          },
                          "size_left": 0,
                        },
                      },
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                        },
                      },
                    },
                    "_bufferDisposable": PieceTreeTextBuffer {
                      "_BOM": "",
                      "_mightContainNonBasicASCII": false,
                      "_mightContainRTL": false,
                      "_mightContainUnusualLineTerminators": false,
                      "_onDidChangeContent": Emitter {
                        "_deliveryQueue": undefined,
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_pieceTree": PieceTreeBase {
                        "_EOL": "
",
                        "_EOLLength": 1,
                        "_EOLNormalized": true,
                        "_buffers": [
                          StringBuffer {
                            "buffer": "",
                            "lineStarts": [
                              0,
                            ],
                          },
                          StringBuffer {
                            "buffer": "
print("typescript");
\\js

print("javascript");
\\sql

select "(my)sql" from dual;
\\py

print("python");
",
                            "lineStarts": Uint16Array [
                              0,
                              1,
                              22,
                              26,
                              27,
                              48,
                              53,
                              54,
                              82,
                              86,
                              87,
                              104,
                            ],
                          },
                        ],
                        "_lastChangeBufferPos": {
                          "column": 0,
                          "line": 0,
                        },
                        "_lastVisitedLine": {
                          "lineNumber": 0,
                          "value": "",
                        },
                        "_length": 104,
                        "_lineCnt": 12,
                        "_searchCache": PieceTreeSearchCache {
                          "_cache": [],
                          "_limit": 1,
                        },
                        "root": TreeNode {
                          "color": 0,
                          "left": TreeNode {
                            "color": 0,
                            "left": [Circular],
                            "lf_left": 0,
                            "parent": [Circular],
                            "piece": null,
                            "right": [Circular],
                            "size_left": 0,
                          },
                          "lf_left": 0,
                          "parent": TreeNode {
                            "color": 0,
                            "left": [Circular],
                            "lf_left": 0,
                            "parent": [Circular],
                            "piece": null,
                            "right": [Circular],
                            "size_left": 0,
                          },
                          "piece": Piece {
                            "bufferIndex": 1,
                            "end": {
                              "column": 0,
                              "line": 11,
                            },
                            "length": 104,
                            "lineFeedCnt": 11,
                            "start": {
                              "column": 0,
                              "line": 0,
                            },
                          },
                          "right": TreeNode {
                            "color": 0,
                            "left": [Circular],
                            "lf_left": 0,
                            "parent": [Circular],
                            "piece": null,
                            "right": [Circular],
                            "size_left": 0,
                          },
                          "size_left": 0,
                        },
                      },
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                        },
                      },
                    },
                    "_commandManager": EditStack {
                      "_model": [Circular],
                      "_undoRedoService": bound UndoRedoService {
                        "constructor": [Function],
                        "removeElements": [Function],
                      },
                    },
                    "_decorationProvider": ColorizedBracketPairsDecorationProvider {
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          {
                            "dispose": [Function],
                          },
                        },
                      },
                      "colorProvider": ColorProvider {
                        "unexpectedClosingBracketClassName": "unexpected-closing-bracket",
                      },
                      "colorizationOptions": {
                        "enabled": true,
                        "independentColorPoolPerBracketType": false,
                      },
                      "onDidChange": [Function],
                      "onDidChangeEmitter": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_listeners": UniqueContainer {
                          "value": [Function],
                        },
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 1,
                      },
                      "textModel": [Circular],
                    },
                    "_decorations": {},
                    "_decorationsTree": DecorationsTrees {
                      "_decorationsTree0": IntervalTree {
                        "requestNormalizeDelta": false,
                        "root": IntervalNode {
                          "cachedAbsoluteEnd": 0,
                          "cachedAbsoluteStart": 0,
                          "cachedVersionId": 0,
                          "delta": 0,
                          "end": 0,
                          "id": null,
                          "left": [Circular],
                          "maxEnd": 0,
                          "metadata": 8,
                          "options": null,
                          "ownerId": 0,
                          "parent": [Circular],
                          "range": null,
                          "right": [Circular],
                          "start": 0,
                        },
                      },
                      "_decorationsTree1": IntervalTree {
                        "requestNormalizeDelta": false,
                        "root": IntervalNode {
                          "cachedAbsoluteEnd": 0,
                          "cachedAbsoluteStart": 0,
                          "cachedVersionId": 0,
                          "delta": 0,
                          "end": 0,
                          "id": null,
                          "left": [Circular],
                          "maxEnd": 0,
                          "metadata": 8,
                          "options": null,
                          "ownerId": 0,
                          "parent": [Circular],
                          "range": null,
                          "right": [Circular],
                          "start": 0,
                        },
                      },
                      "_injectedTextDecorationsTree": IntervalTree {
                        "requestNormalizeDelta": false,
                        "root": IntervalNode {
                          "cachedAbsoluteEnd": 0,
                          "cachedAbsoluteStart": 0,
                          "cachedVersionId": 0,
                          "delta": 0,
                          "end": 0,
                          "id": null,
                          "left": [Circular],
                          "maxEnd": 0,
                          "metadata": 8,
                          "options": null,
                          "ownerId": 0,
                          "parent": [Circular],
                          "range": null,
                          "right": [Circular],
                          "start": 0,
                        },
                      },
                    },
                    "_deltaDecorationCallCnt": 0,
                    "_eventEmitter": DidChangeContentEmitter {
                      "_deferredCnt": 0,
                      "_deferredEvent": null,
                      "_fastEmitter": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_slowEmitter": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                        },
                      },
                      "fastEvent": [Function],
                      "slowEvent": [Function],
                    },
                    "_guidesTextModelPart": GuidesTextModelPart {
                      "_isDisposed": false,
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {},
                      },
                      "languageConfigurationService": bound LanguageConfigurationService {
                        "constructor": [Function],
                      },
                      "textModel": [Circular],
                    },
                    "_initialUndoRedoSnapshot": null,
                    "_instanceId": "b",
                    "_isDisposed": false,
                    "_isRedoing": false,
                    "_isTooLargeForHeapOperation": false,
                    "_isTooLargeForSyncing": false,
                    "_isTooLargeForTokenization": false,
                    "_isUndoing": false,
                    "_languageConfigurationService": bound LanguageConfigurationService {
                      "constructor": [Function],
                    },
                    "_languageSelectionListener": MutableDisposable {
                      "_isDisposed": false,
                      "_value": {
                        "dispose": [Function],
                      },
                    },
                    "_languageService": StandaloneLanguageService {
                      "_onDidChange": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": LeakageMonitor {
                          "_warnCountdown": 0,
                          "name": "MOCK_VALUE",
                          "threshold": 200,
                        },
                        "_listeners": UniqueContainer {
                          "value": [Function],
                        },
                        "_options": {
                          "leakWarningThreshold": 200,
                        },
                        "_perfMon": undefined,
                        "_size": 1,
                      },
                      "_onDidRequestBasicLanguageFeatures": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_onDidRequestRichLanguageFeatures": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_registry": LanguagesRegistry {
                        "_dynamicLanguages": [],
                        "_languages": {
                          "plaintext": {
                            "aliases": [
                              "plaintext",
                              "Plain Text",
                              "text",
                            ],
                            "configurationFiles": [],
                            "extensions": [
                              ".txt",
                            ],
                            "filenames": [],
                            "icons": [],
                            "identifier": "plaintext",
                            "mimetypes": [
                              "text/plain",
                            ],
                            "name": "MOCK_VALUE",
                          },
                        },
                        "_lowercaseNameMap": {
                          "plain text": "plaintext",
                          "plaintext": "plaintext",
                          "text": "plaintext",
                        },
                        "_mimeTypesMap": {
                          "text/plain": "plaintext",
                        },
                        "_nameMap": {
                          "Plain Text": "plaintext",
                        },
                        "_onDidChange": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_listeners": UniqueContainer {
                            "value": [Function],
                          },
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 1,
                        },
                        "_store": DisposableStore {
                          "_isDisposed": false,
                          "_toDispose": Set {
                            Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_listeners": UniqueContainer {
                                "value": [Function],
                              },
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 1,
                            },
                            {
                              "dispose": [Function],
                            },
                          },
                        },
                        "_warnOnOverwrite": false,
                        "languageIdCodec": LanguageIdCodec {
                          "_languageIdToLanguage": [
                            "vs.editor.nullLanguage",
                            "plaintext",
                          ],
                          "_languageToLanguageId": Map {
                            "vs.editor.nullLanguage" => 0,
                            "plaintext" => 1,
                          },
                          "_nextLanguageId": 2,
                        },
                        "onDidChange": [Function],
                      },
                      "_requestedBasicLanguages": Set {
                        "plaintext",
                      },
                      "_requestedRichLanguages": Set {
                        "plaintext",
                      },
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": LeakageMonitor {
                              "_warnCountdown": 0,
                              "name": "MOCK_VALUE",
                              "threshold": 200,
                            },
                            "_listeners": UniqueContainer {
                              "value": [Function],
                            },
                            "_options": {
                              "leakWarningThreshold": 200,
                            },
                            "_perfMon": undefined,
                            "_size": 1,
                          },
                          LanguagesRegistry {
                            "_dynamicLanguages": [],
                            "_languages": {
                              "plaintext": {
                                "aliases": [
                                  "plaintext",
                                  "Plain Text",
                                  "text",
                                ],
                                "configurationFiles": [],
                                "extensions": [
                                  ".txt",
                                ],
                                "filenames": [],
                                "icons": [],
                                "identifier": "plaintext",
                                "mimetypes": [
                                  "text/plain",
                                ],
                                "name": "MOCK_VALUE",
                              },
                            },
                            "_lowercaseNameMap": {
                              "plain text": "plaintext",
                              "plaintext": "plaintext",
                              "text": "plaintext",
                            },
                            "_mimeTypesMap": {
                              "text/plain": "plaintext",
                            },
                            "_nameMap": {
                              "Plain Text": "plaintext",
                            },
                            "_onDidChange": Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_listeners": UniqueContainer {
                                "value": [Function],
                              },
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 1,
                            },
                            "_store": DisposableStore {
                              "_isDisposed": false,
                              "_toDispose": Set {
                                Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                {
                                  "dispose": [Function],
                                },
                              },
                            },
                            "_warnOnOverwrite": false,
                            "languageIdCodec": LanguageIdCodec {
                              "_languageIdToLanguage": [
                                "vs.editor.nullLanguage",
                                "plaintext",
                              ],
                              "_languageToLanguageId": Map {
                                "vs.editor.nullLanguage" => 0,
                                "plaintext" => 1,
                              },
                              "_nextLanguageId": 2,
                            },
                            "onDidChange": [Function],
                          },
                          {
                            "dispose": [Function],
                          },
                        },
                      },
                      "languageIdCodec": LanguageIdCodec {
                        "_languageIdToLanguage": [
                          "vs.editor.nullLanguage",
                          "plaintext",
                        ],
                        "_languageToLanguageId": Map {
                          "vs.editor.nullLanguage" => 0,
                          "plaintext" => 1,
                        },
                        "_nextLanguageId": 2,
                      },
                      "onDidChange": [Function],
                      "onDidRequestBasicLanguageFeatures": [Function],
                      "onDidRequestRichLanguageFeatures": [Function],
                    },
                    "_lastDecorationId": 0,
                    "_onDidChangeAttached": Emitter {
                      "_deliveryQueue": undefined,
                      "_event": [Function],
                      "_leakageMon": undefined,
                      "_options": undefined,
                      "_perfMon": undefined,
                      "_size": 0,
                    },
                    "_onDidChangeDecorations": DidChangeDecorationsEmitter {
                      "_actual": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_affectedInjectedTextLines": null,
                      "_affectsGlyphMargin": false,
                      "_affectsLineNumber": false,
                      "_affectsMinimap": false,
                      "_affectsOverviewRuler": false,
                      "_deferredCnt": 0,
                      "_shouldFireDeferred": false,
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                        },
                      },
                      "event": [Function],
                      "handleBeforeFire": [Function],
                    },
                    "_onDidChangeInjectedText": Emitter {
                      "_deliveryQueue": undefined,
                      "_leakageMon": undefined,
                      "_options": undefined,
                      "_perfMon": undefined,
                      "_size": 0,
                    },
                    "_onDidChangeOptions": Emitter {
                      "_deliveryQueue": undefined,
                      "_event": [Function],
                      "_leakageMon": undefined,
                      "_options": undefined,
                      "_perfMon": undefined,
                      "_size": 0,
                    },
                    "_onWillDispose": Emitter {
                      "_deliveryQueue": undefined,
                      "_event": [Function],
                      "_leakageMon": undefined,
                      "_listeners": UniqueContainer {
                        "value": [Function],
                      },
                      "_options": undefined,
                      "_perfMon": undefined,
                      "_size": 1,
                    },
                    "_options": TextModelResolvedOptions {
                      "_indentSizeIsTabSize": true,
                      "_textModelResolvedOptionsBrand": undefined,
                      "bracketPairColorizationOptions": {
                        "enabled": true,
                        "independentColorPoolPerBracketType": false,
                      },
                      "defaultEOL": 1,
                      "indentSize": 4,
                      "insertSpaces": true,
                      "tabSize": 4,
                      "trimAutoWhitespace": true,
                    },
                    "_store": DisposableStore {
                      "_isDisposed": false,
                      "_toDispose": Set {
                        Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_listeners": UniqueContainer {
                            "value": [Function],
                          },
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 1,
                        },
                        DidChangeDecorationsEmitter {
                          "_actual": Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          "_affectedInjectedTextLines": null,
                          "_affectsGlyphMargin": false,
                          "_affectsLineNumber": false,
                          "_affectsMinimap": false,
                          "_affectsOverviewRuler": false,
                          "_deferredCnt": 0,
                          "_shouldFireDeferred": false,
                          "_store": DisposableStore {
                            "_isDisposed": false,
                            "_toDispose": Set {
                              Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 0,
                              },
                            },
                          },
                          "event": [Function],
                          "handleBeforeFire": [Function],
                        },
                        Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 0,
                        },
                        Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 0,
                        },
                        Emitter {
                          "_deliveryQueue": undefined,
                          "_leakageMon": undefined,
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 0,
                        },
                        DidChangeContentEmitter {
                          "_deferredCnt": 0,
                          "_deferredEvent": null,
                          "_fastEmitter": Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          "_slowEmitter": Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          "_store": DisposableStore {
                            "_isDisposed": false,
                            "_toDispose": Set {
                              Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 0,
                              },
                              Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 0,
                              },
                            },
                          },
                          "fastEvent": [Function],
                          "slowEvent": [Function],
                        },
                        MutableDisposable {
                          "_isDisposed": false,
                          "_value": {
                            "dispose": [Function],
                          },
                        },
                        BracketPairsTextModelPart {
                          "_store": DisposableStore {
                            "_isDisposed": false,
                            "_toDispose": Set {
                              MutableDisposable {
                                "_isDisposed": false,
                              },
                              {
                                "dispose": [Function],
                              },
                            },
                          },
                          "bracketPairsTree": MutableDisposable {
                            "_isDisposed": false,
                          },
                          "bracketsRequested": false,
                          "languageConfigurationService": bound LanguageConfigurationService {
                            "constructor": [Function],
                          },
                          "onDidChange": [Function],
                          "onDidChangeEmitter": Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_listeners": UniqueContainer {
                              "value": [Function],
                            },
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 1,
                          },
                          "textModel": [Circular],
                        },
                        GuidesTextModelPart {
                          "_isDisposed": false,
                          "_store": DisposableStore {
                            "_isDisposed": false,
                            "_toDispose": Set {},
                          },
                          "languageConfigurationService": bound LanguageConfigurationService {
                            "constructor": [Function],
                          },
                          "textModel": [Circular],
                        },
                        ColorizedBracketPairsDecorationProvider {
                          "_store": DisposableStore {
                            "_isDisposed": false,
                            "_toDispose": Set {
                              {
                                "dispose": [Function],
                              },
                            },
                          },
                          "colorProvider": ColorProvider {
                            "unexpectedClosingBracketClassName": "unexpected-closing-bracket",
                          },
                          "colorizationOptions": {
                            "enabled": true,
                            "independentColorPoolPerBracketType": false,
                          },
                          "onDidChange": [Function],
                          "onDidChangeEmitter": Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_listeners": UniqueContainer {
                              "value": [Function],
                            },
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 1,
                          },
                          "textModel": [Circular],
                        },
                        {
                          "dispose": [Function],
                        },
                      },
                    },
                    "_tokenizationTextModelPart": TokenizationTextModelPart {
                      "_attachedViews": AttachedViews {
                        "_onDidChangeVisibleRanges": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_listeners": UniqueContainer {
                            "value": [Function],
                          },
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 1,
                        },
                        "_views": Set {},
                        "onDidChangeVisibleRanges": [Function],
                      },
                      "_bracketPairsTextModelPart": BracketPairsTextModelPart {
                        "_store": DisposableStore {
                          "_isDisposed": false,
                          "_toDispose": Set {
                            MutableDisposable {
                              "_isDisposed": false,
                            },
                            {
                              "dispose": [Function],
                            },
                          },
                        },
                        "bracketPairsTree": MutableDisposable {
                          "_isDisposed": false,
                        },
                        "bracketsRequested": false,
                        "languageConfigurationService": bound LanguageConfigurationService {
                          "constructor": [Function],
                        },
                        "onDidChange": [Function],
                        "onDidChangeEmitter": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_listeners": UniqueContainer {
                            "value": [Function],
                          },
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 1,
                        },
                        "textModel": [Circular],
                      },
                      "_isDisposed": false,
                      "_languageConfigurationService": bound LanguageConfigurationService {
                        "constructor": [Function],
                      },
                      "_languageId": "plaintext",
                      "_languageService": StandaloneLanguageService {
                        "_onDidChange": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": LeakageMonitor {
                            "_warnCountdown": 0,
                            "name": "MOCK_VALUE",
                            "threshold": 200,
                          },
                          "_listeners": UniqueContainer {
                            "value": [Function],
                          },
                          "_options": {
                            "leakWarningThreshold": 200,
                          },
                          "_perfMon": undefined,
                          "_size": 1,
                        },
                        "_onDidRequestBasicLanguageFeatures": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 0,
                        },
                        "_onDidRequestRichLanguageFeatures": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 0,
                        },
                        "_registry": LanguagesRegistry {
                          "_dynamicLanguages": [],
                          "_languages": {
                            "plaintext": {
                              "aliases": [
                                "plaintext",
                                "Plain Text",
                                "text",
                              ],
                              "configurationFiles": [],
                              "extensions": [
                                ".txt",
                              ],
                              "filenames": [],
                              "icons": [],
                              "identifier": "plaintext",
                              "mimetypes": [
                                "text/plain",
                              ],
                              "name": "MOCK_VALUE",
                            },
                          },
                          "_lowercaseNameMap": {
                            "plain text": "plaintext",
                            "plaintext": "plaintext",
                            "text": "plaintext",
                          },
                          "_mimeTypesMap": {
                            "text/plain": "plaintext",
                          },
                          "_nameMap": {
                            "Plain Text": "plaintext",
                          },
                          "_onDidChange": Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_listeners": UniqueContainer {
                              "value": [Function],
                            },
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 1,
                          },
                          "_store": DisposableStore {
                            "_isDisposed": false,
                            "_toDispose": Set {
                              Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_listeners": UniqueContainer {
                                  "value": [Function],
                                },
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 1,
                              },
                              {
                                "dispose": [Function],
                              },
                            },
                          },
                          "_warnOnOverwrite": false,
                          "languageIdCodec": LanguageIdCodec {
                            "_languageIdToLanguage": [
                              "vs.editor.nullLanguage",
                              "plaintext",
                            ],
                            "_languageToLanguageId": Map {
                              "vs.editor.nullLanguage" => 0,
                              "plaintext" => 1,
                            },
                            "_nextLanguageId": 2,
                          },
                          "onDidChange": [Function],
                        },
                        "_requestedBasicLanguages": Set {
                          "plaintext",
                        },
                        "_requestedRichLanguages": Set {
                          "plaintext",
                        },
                        "_store": DisposableStore {
                          "_isDisposed": false,
                          "_toDispose": Set {
                            Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 0,
                            },
                            Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 0,
                            },
                            Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": LeakageMonitor {
                                "_warnCountdown": 0,
                                "name": "MOCK_VALUE",
                                "threshold": 200,
                              },
                              "_listeners": UniqueContainer {
                                "value": [Function],
                              },
                              "_options": {
                                "leakWarningThreshold": 200,
                              },
                              "_perfMon": undefined,
                              "_size": 1,
                            },
                            LanguagesRegistry {
                              "_dynamicLanguages": [],
                              "_languages": {
                                "plaintext": {
                                  "aliases": [
                                    "plaintext",
                                    "Plain Text",
                                    "text",
                                  ],
                                  "configurationFiles": [],
                                  "extensions": [
                                    ".txt",
                                  ],
                                  "filenames": [],
                                  "icons": [],
                                  "identifier": "plaintext",
                                  "mimetypes": [
                                    "text/plain",
                                  ],
                                  "name": "MOCK_VALUE",
                                },
                              },
                              "_lowercaseNameMap": {
                                "plain text": "plaintext",
                                "plaintext": "plaintext",
                                "text": "plaintext",
                              },
                              "_mimeTypesMap": {
                                "text/plain": "plaintext",
                              },
                              "_nameMap": {
                                "Plain Text": "plaintext",
                              },
                              "_onDidChange": Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_listeners": UniqueContainer {
                                  "value": [Function],
                                },
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 1,
                              },
                              "_store": DisposableStore {
                                "_isDisposed": false,
                                "_toDispose": Set {
                                  Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  {
                                    "dispose": [Function],
                                  },
                                },
                              },
                              "_warnOnOverwrite": false,
                              "languageIdCodec": LanguageIdCodec {
                                "_languageIdToLanguage": [
                                  "vs.editor.nullLanguage",
                                  "plaintext",
                                ],
                                "_languageToLanguageId": Map {
                                  "vs.editor.nullLanguage" => 0,
                                  "plaintext" => 1,
                                },
                                "_nextLanguageId": 2,
                              },
                              "onDidChange": [Function],
                            },
                            {
                              "dispose": [Function],
                            },
                          },
                        },
                        "languageIdCodec": LanguageIdCodec {
                          "_languageIdToLanguage": [
                            "vs.editor.nullLanguage",
                            "plaintext",
                          ],
                          "_languageToLanguageId": Map {
                            "vs.editor.nullLanguage" => 0,
                            "plaintext" => 1,
                          },
                          "_nextLanguageId": 2,
                        },
                        "onDidChange": [Function],
                        "onDidRequestBasicLanguageFeatures": [Function],
                        "onDidRequestRichLanguageFeatures": [Function],
                      },
                      "_onDidChangeLanguage": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_listeners": UniqueContainer {
                          "value": [Function],
                        },
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 1,
                      },
                      "_onDidChangeLanguageConfiguration": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_onDidChangeTokens": Emitter {
                        "_deliveryQueue": undefined,
                        "_event": [Function],
                        "_leakageMon": undefined,
                        "_options": undefined,
                        "_perfMon": undefined,
                        "_size": 0,
                      },
                      "_semanticTokens": SparseTokensStore {
                        "_isComplete": false,
                        "_languageIdCodec": LanguageIdCodec {
                          "_languageIdToLanguage": [
                            "vs.editor.nullLanguage",
                            "plaintext",
                          ],
                          "_languageToLanguageId": Map {
                            "vs.editor.nullLanguage" => 0,
                            "plaintext" => 1,
                          },
                          "_nextLanguageId": 2,
                        },
                        "_pieces": [],
                      },
                      "_store": DisposableStore {
                        "_isDisposed": false,
                        "_toDispose": Set {
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_listeners": UniqueContainer {
                              "value": [Function],
                            },
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 1,
                          },
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          Emitter {
                            "_deliveryQueue": undefined,
                            "_event": [Function],
                            "_leakageMon": undefined,
                            "_options": undefined,
                            "_perfMon": undefined,
                            "_size": 0,
                          },
                          GrammarTokens {
                            "_attachedViewStates": DisposableMap {
                              "_isDisposed": false,
                              "_store": Map {},
                            },
                            "_backgroundTokenizationState": 1,
                            "_backgroundTokenizer": MutableDisposable {
                              "_isDisposed": false,
                            },
                            "_debugBackgroundTokenizer": MutableDisposable {
                              "_isDisposed": false,
                            },
                            "_defaultBackgroundTokenizer": null,
                            "_languageIdCodec": LanguageIdCodec {
                              "_languageIdToLanguage": [
                                "vs.editor.nullLanguage",
                                "plaintext",
                              ],
                              "_languageToLanguageId": Map {
                                "vs.editor.nullLanguage" => 0,
                                "plaintext" => 1,
                              },
                              "_nextLanguageId": 2,
                            },
                            "_onDidChangeBackgroundTokenizationState": Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_listeners": UniqueContainer {
                                "value": [Function],
                              },
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 1,
                            },
                            "_onDidChangeTokens": Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_listeners": UniqueContainer {
                                "value": [Function],
                              },
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 1,
                            },
                            "_store": DisposableStore {
                              "_isDisposed": false,
                              "_toDispose": Set {
                                MutableDisposable {
                                  "_isDisposed": false,
                                },
                                MutableDisposable {
                                  "_isDisposed": false,
                                },
                                Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                DisposableMap {
                                  "_isDisposed": false,
                                  "_store": Map {},
                                },
                                {
                                  "dispose": [Function],
                                },
                                {
                                  "dispose": [Function],
                                },
                              },
                            },
                            "_textModel": [Circular],
                            "_tokenizer": null,
                            "_tokens": ContiguousTokensStore {
                              "_languageIdCodec": LanguageIdCodec {
                                "_languageIdToLanguage": [
                                  "vs.editor.nullLanguage",
                                  "plaintext",
                                ],
                                "_languageToLanguageId": Map {
                                  "vs.editor.nullLanguage" => 0,
                                  "plaintext" => 1,
                                },
                                "_nextLanguageId": 2,
                              },
                              "_len": 0,
                              "_lineTokens": [],
                            },
                            "getLanguageId": [Function],
                            "onDidChangeBackgroundTokenizationState": [Function],
                            "onDidChangeTokens": [Function],
                          },
                          {
                            "dispose": [Function],
                          },
                          {
                            "dispose": [Function],
                          },
                          {
                            "dispose": [Function],
                          },
                        },
                      },
                      "_textModel": [Circular],
                      "grammarTokens": GrammarTokens {
                        "_attachedViewStates": DisposableMap {
                          "_isDisposed": false,
                          "_store": Map {},
                        },
                        "_backgroundTokenizationState": 1,
                        "_backgroundTokenizer": MutableDisposable {
                          "_isDisposed": false,
                        },
                        "_debugBackgroundTokenizer": MutableDisposable {
                          "_isDisposed": false,
                        },
                        "_defaultBackgroundTokenizer": null,
                        "_languageIdCodec": LanguageIdCodec {
                          "_languageIdToLanguage": [
                            "vs.editor.nullLanguage",
                            "plaintext",
                          ],
                          "_languageToLanguageId": Map {
                            "vs.editor.nullLanguage" => 0,
                            "plaintext" => 1,
                          },
                          "_nextLanguageId": 2,
                        },
                        "_onDidChangeBackgroundTokenizationState": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_listeners": UniqueContainer {
                            "value": [Function],
                          },
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 1,
                        },
                        "_onDidChangeTokens": Emitter {
                          "_deliveryQueue": undefined,
                          "_event": [Function],
                          "_leakageMon": undefined,
                          "_listeners": UniqueContainer {
                            "value": [Function],
                          },
                          "_options": undefined,
                          "_perfMon": undefined,
                          "_size": 1,
                        },
                        "_store": DisposableStore {
                          "_isDisposed": false,
                          "_toDispose": Set {
                            MutableDisposable {
                              "_isDisposed": false,
                            },
                            MutableDisposable {
                              "_isDisposed": false,
                            },
                            Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_listeners": UniqueContainer {
                                "value": [Function],
                              },
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 1,
                            },
                            Emitter {
                              "_deliveryQueue": undefined,
                              "_event": [Function],
                              "_leakageMon": undefined,
                              "_listeners": UniqueContainer {
                                "value": [Function],
                              },
                              "_options": undefined,
                              "_perfMon": undefined,
                              "_size": 1,
                            },
                            DisposableMap {
                              "_isDisposed": false,
                              "_store": Map {},
                            },
                            {
                              "dispose": [Function],
                            },
                            {
                              "dispose": [Function],
                            },
                          },
                        },
                        "_textModel": [Circular],
                        "_tokenizer": null,
                        "_tokens": ContiguousTokensStore {
                          "_languageIdCodec": LanguageIdCodec {
                            "_languageIdToLanguage": [
                              "vs.editor.nullLanguage",
                              "plaintext",
                            ],
                            "_languageToLanguageId": Map {
                              "vs.editor.nullLanguage" => 0,
                              "plaintext" => 1,
                            },
                            "_nextLanguageId": 2,
                          },
                          "_len": 0,
                          "_lineTokens": [],
                        },
                        "getLanguageId": [Function],
                        "onDidChangeBackgroundTokenizationState": [Function],
                        "onDidChangeTokens": [Function],
                      },
                      "onDidChangeLanguage": [Function],
                      "onDidChangeLanguageConfiguration": [Function],
                      "onDidChangeTokens": [Function],
                    },
                    "_trimAutoWhitespaceLines": null,
                    "_undoRedoService": bound UndoRedoService {
                      "constructor": [Function],
                      "removeElements": [Function],
                    },
                    "_versionId": 3,
                    "editorMode": 0,
                    "executionContexts": ExecutionContexts {
                      "content": [],
                      "cursorPosition": {
                        "column": 1,
                        "lineNumber": 1,
                      },
                      "dbVersion": 80200,
                      "defaultSchema": "",
                      "onCommitChanges": [Function],
                      "onResultRemoval": [Function],
                      "rollbackChanges": [Function],
                      "runUpdates": undefined,
                      "sqlMode": "",
                      "sqlUpdateColumnInfo": [Function],
                      "store": "unused",
                    },
                    "id": "$model1",
                    "isForSimpleWidget": false,
                    "onDidChangeAttached": [Function],
                    "onDidChangeDecorations": [Function],
                    "onDidChangeOptions": [Function],
                    "onWillDispose": [Function],
                  },
                  "options": {},
                  "viewState": null,
                },
                "type": 0,
              },
            ]
          }
          markedSchema="myDb"
          onAddItem={[Function]}
          onAddScript={[Function]}
          onChangeItem={[Function]}
          onCloseItem={[Function]}
          onContextMenuItemClick={[Function]}
          onSaveExplorerState={[Function]}
          onSaveSchemaTree={[Function]}
          onSelectItem={[Function]}
          savedState={
            Map {
              "state1" => {},
            }
          }
          schemaTree={[]}
          scripts={[]}
          selectedEntry="SQLEditor"
        />,
        "id": "explorer",
        "initialSize": 200,
        "minSize": 150,
        "resizable": true,
        "snap": true,
      },
      {
        "content": <SplitContainer
          className="msg connectionTabHost"
          onPaneResized={[Function]}
          orientation="row"
          panes={
            [
              {
                "content": <Notebook
                  backend={
                    ShellInterfaceSqlEditor {
                      "mds": ShellInterfaceMds {},
                      "moduleSessionLookupId": "",
                      "mrs": ShellInterfaceMrs {
                        "moduleSessionLookupId": "",
                      },
                    }
                  }
                  dbType="MySQL"
                  onContextLanguageChange={[Function]}
                  onNavigateHistory={[Function]}
                  onScriptExecution={[Function]}
                  savedState={
                    {
                      "activeEntry": "SQLEditor",
                      "adminPageStates": {
                        "lakehouseNavigatorState": {
                          "activeTabId": "overview",
                          "autoRefreshTablesAndTasks": true,
                        },
                      },
                      "backend": ShellInterfaceSqlEditor {
                        "mds": ShellInterfaceMds {},
                        "moduleSessionLookupId": "",
                        "mrs": ShellInterfaceMrs {
                          "moduleSessionLookupId": "",
                        },
                      },
                      "chatOptionsState": {
                        "chatOptionsExpanded": false,
                        "chatOptionsWidth": -1,
                      },
                      "connectionId": 0,
                      "currentExecutionHistoryIndex": 0,
                      "currentSchema": "myDb",
                      "dbType": "MySQL",
                      "editors": [
                        {
                          "caption": "",
                          "currentVersion": 0,
                          "id": "SQLEditor",
                          "state": {
                            "model": TextModel {
                              "__isDisposing": false,
                              "_alternativeVersionId": 3,
                              "_associatedResource": {
                                "$mid": 1,
                                "authority": "model",
                                "external": "inmemory://model/1",
                                "path": "/1",
                                "scheme": "inmemory",
                              },
                              "_attachedEditorCount": 0,
                              "_attachedViews": AttachedViews {
                                "_onDidChangeVisibleRanges": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                "_views": Set {},
                                "onDidChangeVisibleRanges": [Function],
                              },
                              "_bracketPairs": BracketPairsTextModelPart {
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    MutableDisposable {
                                      "_isDisposed": false,
                                    },
                                    {
                                      "dispose": [Function],
                                    },
                                  },
                                },
                                "bracketPairsTree": MutableDisposable {
                                  "_isDisposed": false,
                                },
                                "bracketsRequested": false,
                                "languageConfigurationService": bound LanguageConfigurationService {
                                  "constructor": [Function],
                                },
                                "onDidChange": [Function],
                                "onDidChangeEmitter": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                "textModel": [Circular],
                              },
                              "_buffer": PieceTreeTextBuffer {
                                "_BOM": "",
                                "_mightContainNonBasicASCII": false,
                                "_mightContainRTL": false,
                                "_mightContainUnusualLineTerminators": false,
                                "_onDidChangeContent": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_pieceTree": PieceTreeBase {
                                  "_EOL": "
",
                                  "_EOLLength": 1,
                                  "_EOLNormalized": true,
                                  "_buffers": [
                                    StringBuffer {
                                      "buffer": "",
                                      "lineStarts": [
                                        0,
                                      ],
                                    },
                                    StringBuffer {
                                      "buffer": "
print("typescript");
\\js

print("javascript");
\\sql

select "(my)sql" from dual;
\\py

print("python");
",
                                      "lineStarts": Uint16Array [
                                        0,
                                        1,
                                        22,
                                        26,
                                        27,
                                        48,
                                        53,
                                        54,
                                        82,
                                        86,
                                        87,
                                        104,
                                      ],
                                    },
                                  ],
                                  "_lastChangeBufferPos": {
                                    "column": 0,
                                    "line": 0,
                                  },
                                  "_lastVisitedLine": {
                                    "lineNumber": 0,
                                    "value": "",
                                  },
                                  "_length": 104,
                                  "_lineCnt": 12,
                                  "_searchCache": PieceTreeSearchCache {
                                    "_cache": [],
                                    "_limit": 1,
                                  },
                                  "root": TreeNode {
                                    "color": 0,
                                    "left": TreeNode {
                                      "color": 0,
                                      "left": [Circular],
                                      "lf_left": 0,
                                      "parent": [Circular],
                                      "piece": null,
                                      "right": [Circular],
                                      "size_left": 0,
                                    },
                                    "lf_left": 0,
                                    "parent": TreeNode {
                                      "color": 0,
                                      "left": [Circular],
                                      "lf_left": 0,
                                      "parent": [Circular],
                                      "piece": null,
                                      "right": [Circular],
                                      "size_left": 0,
                                    },
                                    "piece": Piece {
                                      "bufferIndex": 1,
                                      "end": {
                                        "column": 0,
                                        "line": 11,
                                      },
                                      "length": 104,
                                      "lineFeedCnt": 11,
                                      "start": {
                                        "column": 0,
                                        "line": 0,
                                      },
                                    },
                                    "right": TreeNode {
                                      "color": 0,
                                      "left": [Circular],
                                      "lf_left": 0,
                                      "parent": [Circular],
                                      "piece": null,
                                      "right": [Circular],
                                      "size_left": 0,
                                    },
                                    "size_left": 0,
                                  },
                                },
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                  },
                                },
                              },
                              "_bufferDisposable": PieceTreeTextBuffer {
                                "_BOM": "",
                                "_mightContainNonBasicASCII": false,
                                "_mightContainRTL": false,
                                "_mightContainUnusualLineTerminators": false,
                                "_onDidChangeContent": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_pieceTree": PieceTreeBase {
                                  "_EOL": "
",
                                  "_EOLLength": 1,
                                  "_EOLNormalized": true,
                                  "_buffers": [
                                    StringBuffer {
                                      "buffer": "",
                                      "lineStarts": [
                                        0,
                                      ],
                                    },
                                    StringBuffer {
                                      "buffer": "
print("typescript");
\\js

print("javascript");
\\sql

select "(my)sql" from dual;
\\py

print("python");
",
                                      "lineStarts": Uint16Array [
                                        0,
                                        1,
                                        22,
                                        26,
                                        27,
                                        48,
                                        53,
                                        54,
                                        82,
                                        86,
                                        87,
                                        104,
                                      ],
                                    },
                                  ],
                                  "_lastChangeBufferPos": {
                                    "column": 0,
                                    "line": 0,
                                  },
                                  "_lastVisitedLine": {
                                    "lineNumber": 0,
                                    "value": "",
                                  },
                                  "_length": 104,
                                  "_lineCnt": 12,
                                  "_searchCache": PieceTreeSearchCache {
                                    "_cache": [],
                                    "_limit": 1,
                                  },
                                  "root": TreeNode {
                                    "color": 0,
                                    "left": TreeNode {
                                      "color": 0,
                                      "left": [Circular],
                                      "lf_left": 0,
                                      "parent": [Circular],
                                      "piece": null,
                                      "right": [Circular],
                                      "size_left": 0,
                                    },
                                    "lf_left": 0,
                                    "parent": TreeNode {
                                      "color": 0,
                                      "left": [Circular],
                                      "lf_left": 0,
                                      "parent": [Circular],
                                      "piece": null,
                                      "right": [Circular],
                                      "size_left": 0,
                                    },
                                    "piece": Piece {
                                      "bufferIndex": 1,
                                      "end": {
                                        "column": 0,
                                        "line": 11,
                                      },
                                      "length": 104,
                                      "lineFeedCnt": 11,
                                      "start": {
                                        "column": 0,
                                        "line": 0,
                                      },
                                    },
                                    "right": TreeNode {
                                      "color": 0,
                                      "left": [Circular],
                                      "lf_left": 0,
                                      "parent": [Circular],
                                      "piece": null,
                                      "right": [Circular],
                                      "size_left": 0,
                                    },
                                    "size_left": 0,
                                  },
                                },
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                  },
                                },
                              },
                              "_commandManager": EditStack {
                                "_model": [Circular],
                                "_undoRedoService": bound UndoRedoService {
                                  "constructor": [Function],
                                  "removeElements": [Function],
                                },
                              },
                              "_decorationProvider": ColorizedBracketPairsDecorationProvider {
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    {
                                      "dispose": [Function],
                                    },
                                  },
                                },
                                "colorProvider": ColorProvider {
                                  "unexpectedClosingBracketClassName": "unexpected-closing-bracket",
                                },
                                "colorizationOptions": {
                                  "enabled": true,
                                  "independentColorPoolPerBracketType": false,
                                },
                                "onDidChange": [Function],
                                "onDidChangeEmitter": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                "textModel": [Circular],
                              },
                              "_decorations": {},
                              "_decorationsTree": DecorationsTrees {
                                "_decorationsTree0": IntervalTree {
                                  "requestNormalizeDelta": false,
                                  "root": IntervalNode {
                                    "cachedAbsoluteEnd": 0,
                                    "cachedAbsoluteStart": 0,
                                    "cachedVersionId": 0,
                                    "delta": 0,
                                    "end": 0,
                                    "id": null,
                                    "left": [Circular],
                                    "maxEnd": 0,
                                    "metadata": 8,
                                    "options": null,
                                    "ownerId": 0,
                                    "parent": [Circular],
                                    "range": null,
                                    "right": [Circular],
                                    "start": 0,
                                  },
                                },
                                "_decorationsTree1": IntervalTree {
                                  "requestNormalizeDelta": false,
                                  "root": IntervalNode {
                                    "cachedAbsoluteEnd": 0,
                                    "cachedAbsoluteStart": 0,
                                    "cachedVersionId": 0,
                                    "delta": 0,
                                    "end": 0,
                                    "id": null,
                                    "left": [Circular],
                                    "maxEnd": 0,
                                    "metadata": 8,
                                    "options": null,
                                    "ownerId": 0,
                                    "parent": [Circular],
                                    "range": null,
                                    "right": [Circular],
                                    "start": 0,
                                  },
                                },
                                "_injectedTextDecorationsTree": IntervalTree {
                                  "requestNormalizeDelta": false,
                                  "root": IntervalNode {
                                    "cachedAbsoluteEnd": 0,
                                    "cachedAbsoluteStart": 0,
                                    "cachedVersionId": 0,
                                    "delta": 0,
                                    "end": 0,
                                    "id": null,
                                    "left": [Circular],
                                    "maxEnd": 0,
                                    "metadata": 8,
                                    "options": null,
                                    "ownerId": 0,
                                    "parent": [Circular],
                                    "range": null,
                                    "right": [Circular],
                                    "start": 0,
                                  },
                                },
                              },
                              "_deltaDecorationCallCnt": 0,
                              "_eventEmitter": DidChangeContentEmitter {
                                "_deferredCnt": 0,
                                "_deferredEvent": null,
                                "_fastEmitter": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_slowEmitter": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                  },
                                },
                                "fastEvent": [Function],
                                "slowEvent": [Function],
                              },
                              "_guidesTextModelPart": GuidesTextModelPart {
                                "_isDisposed": false,
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {},
                                },
                                "languageConfigurationService": bound LanguageConfigurationService {
                                  "constructor": [Function],
                                },
                                "textModel": [Circular],
                              },
                              "_initialUndoRedoSnapshot": null,
                              "_instanceId": "b",
                              "_isDisposed": false,
                              "_isRedoing": false,
                              "_isTooLargeForHeapOperation": false,
                              "_isTooLargeForSyncing": false,
                              "_isTooLargeForTokenization": false,
                              "_isUndoing": false,
                              "_languageConfigurationService": bound LanguageConfigurationService {
                                "constructor": [Function],
                              },
                              "_languageSelectionListener": MutableDisposable {
                                "_isDisposed": false,
                                "_value": {
                                  "dispose": [Function],
                                },
                              },
                              "_languageService": StandaloneLanguageService {
                                "_onDidChange": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": LeakageMonitor {
                                    "_warnCountdown": 0,
                                    "name": "MOCK_VALUE",
                                    "threshold": 200,
                                  },
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": {
                                    "leakWarningThreshold": 200,
                                  },
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                "_onDidRequestBasicLanguageFeatures": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_onDidRequestRichLanguageFeatures": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_registry": LanguagesRegistry {
                                  "_dynamicLanguages": [],
                                  "_languages": {
                                    "plaintext": {
                                      "aliases": [
                                        "plaintext",
                                        "Plain Text",
                                        "text",
                                      ],
                                      "configurationFiles": [],
                                      "extensions": [
                                        ".txt",
                                      ],
                                      "filenames": [],
                                      "icons": [],
                                      "identifier": "plaintext",
                                      "mimetypes": [
                                        "text/plain",
                                      ],
                                      "name": "MOCK_VALUE",
                                    },
                                  },
                                  "_lowercaseNameMap": {
                                    "plain text": "plaintext",
                                    "plaintext": "plaintext",
                                    "text": "plaintext",
                                  },
                                  "_mimeTypesMap": {
                                    "text/plain": "plaintext",
                                  },
                                  "_nameMap": {
                                    "Plain Text": "plaintext",
                                  },
                                  "_onDidChange": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  "_store": DisposableStore {
                                    "_isDisposed": false,
                                    "_toDispose": Set {
                                      Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_listeners": UniqueContainer {
                                          "value": [Function],
                                        },
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 1,
                                      },
                                      {
                                        "dispose": [Function],
                                      },
                                    },
                                  },
                                  "_warnOnOverwrite": false,
                                  "languageIdCodec": LanguageIdCodec {
                                    "_languageIdToLanguage": [
                                      "vs.editor.nullLanguage",
                                      "plaintext",
                                    ],
                                    "_languageToLanguageId": Map {
                                      "vs.editor.nullLanguage" => 0,
                                      "plaintext" => 1,
                                    },
                                    "_nextLanguageId": 2,
                                  },
                                  "onDidChange": [Function],
                                },
                                "_requestedBasicLanguages": Set {
                                  "plaintext",
                                },
                                "_requestedRichLanguages": Set {
                                  "plaintext",
                                },
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": LeakageMonitor {
                                        "_warnCountdown": 0,
                                        "name": "MOCK_VALUE",
                                        "threshold": 200,
                                      },
                                      "_listeners": UniqueContainer {
                                        "value": [Function],
                                      },
                                      "_options": {
                                        "leakWarningThreshold": 200,
                                      },
                                      "_perfMon": undefined,
                                      "_size": 1,
                                    },
                                    LanguagesRegistry {
                                      "_dynamicLanguages": [],
                                      "_languages": {
                                        "plaintext": {
                                          "aliases": [
                                            "plaintext",
                                            "Plain Text",
                                            "text",
                                          ],
                                          "configurationFiles": [],
                                          "extensions": [
                                            ".txt",
                                          ],
                                          "filenames": [],
                                          "icons": [],
                                          "identifier": "plaintext",
                                          "mimetypes": [
                                            "text/plain",
                                          ],
                                          "name": "MOCK_VALUE",
                                        },
                                      },
                                      "_lowercaseNameMap": {
                                        "plain text": "plaintext",
                                        "plaintext": "plaintext",
                                        "text": "plaintext",
                                      },
                                      "_mimeTypesMap": {
                                        "text/plain": "plaintext",
                                      },
                                      "_nameMap": {
                                        "Plain Text": "plaintext",
                                      },
                                      "_onDidChange": Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_listeners": UniqueContainer {
                                          "value": [Function],
                                        },
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 1,
                                      },
                                      "_store": DisposableStore {
                                        "_isDisposed": false,
                                        "_toDispose": Set {
                                          Emitter {
                                            "_deliveryQueue": undefined,
                                            "_event": [Function],
                                            "_leakageMon": undefined,
                                            "_listeners": UniqueContainer {
                                              "value": [Function],
                                            },
                                            "_options": undefined,
                                            "_perfMon": undefined,
                                            "_size": 1,
                                          },
                                          {
                                            "dispose": [Function],
                                          },
                                        },
                                      },
                                      "_warnOnOverwrite": false,
                                      "languageIdCodec": LanguageIdCodec {
                                        "_languageIdToLanguage": [
                                          "vs.editor.nullLanguage",
                                          "plaintext",
                                        ],
                                        "_languageToLanguageId": Map {
                                          "vs.editor.nullLanguage" => 0,
                                          "plaintext" => 1,
                                        },
                                        "_nextLanguageId": 2,
                                      },
                                      "onDidChange": [Function],
                                    },
                                    {
                                      "dispose": [Function],
                                    },
                                  },
                                },
                                "languageIdCodec": LanguageIdCodec {
                                  "_languageIdToLanguage": [
                                    "vs.editor.nullLanguage",
                                    "plaintext",
                                  ],
                                  "_languageToLanguageId": Map {
                                    "vs.editor.nullLanguage" => 0,
                                    "plaintext" => 1,
                                  },
                                  "_nextLanguageId": 2,
                                },
                                "onDidChange": [Function],
                                "onDidRequestBasicLanguageFeatures": [Function],
                                "onDidRequestRichLanguageFeatures": [Function],
                              },
                              "_lastDecorationId": 0,
                              "_onDidChangeAttached": Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 0,
                              },
                              "_onDidChangeDecorations": DidChangeDecorationsEmitter {
                                "_actual": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_affectedInjectedTextLines": null,
                                "_affectsGlyphMargin": false,
                                "_affectsLineNumber": false,
                                "_affectsMinimap": false,
                                "_affectsOverviewRuler": false,
                                "_deferredCnt": 0,
                                "_shouldFireDeferred": false,
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                  },
                                },
                                "event": [Function],
                                "handleBeforeFire": [Function],
                              },
                              "_onDidChangeInjectedText": Emitter {
                                "_deliveryQueue": undefined,
                                "_leakageMon": undefined,
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 0,
                              },
                              "_onDidChangeOptions": Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 0,
                              },
                              "_onWillDispose": Emitter {
                                "_deliveryQueue": undefined,
                                "_event": [Function],
                                "_leakageMon": undefined,
                                "_listeners": UniqueContainer {
                                  "value": [Function],
                                },
                                "_options": undefined,
                                "_perfMon": undefined,
                                "_size": 1,
                              },
                              "_options": TextModelResolvedOptions {
                                "_indentSizeIsTabSize": true,
                                "_textModelResolvedOptionsBrand": undefined,
                                "bracketPairColorizationOptions": {
                                  "enabled": true,
                                  "independentColorPoolPerBracketType": false,
                                },
                                "defaultEOL": 1,
                                "indentSize": 4,
                                "insertSpaces": true,
                                "tabSize": 4,
                                "trimAutoWhitespace": true,
                              },
                              "_store": DisposableStore {
                                "_isDisposed": false,
                                "_toDispose": Set {
                                  Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  DidChangeDecorationsEmitter {
                                    "_actual": Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    "_affectedInjectedTextLines": null,
                                    "_affectsGlyphMargin": false,
                                    "_affectsLineNumber": false,
                                    "_affectsMinimap": false,
                                    "_affectsOverviewRuler": false,
                                    "_deferredCnt": 0,
                                    "_shouldFireDeferred": false,
                                    "_store": DisposableStore {
                                      "_isDisposed": false,
                                      "_toDispose": Set {
                                        Emitter {
                                          "_deliveryQueue": undefined,
                                          "_event": [Function],
                                          "_leakageMon": undefined,
                                          "_options": undefined,
                                          "_perfMon": undefined,
                                          "_size": 0,
                                        },
                                      },
                                    },
                                    "event": [Function],
                                    "handleBeforeFire": [Function],
                                  },
                                  Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 0,
                                  },
                                  Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 0,
                                  },
                                  Emitter {
                                    "_deliveryQueue": undefined,
                                    "_leakageMon": undefined,
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 0,
                                  },
                                  DidChangeContentEmitter {
                                    "_deferredCnt": 0,
                                    "_deferredEvent": null,
                                    "_fastEmitter": Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    "_slowEmitter": Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    "_store": DisposableStore {
                                      "_isDisposed": false,
                                      "_toDispose": Set {
                                        Emitter {
                                          "_deliveryQueue": undefined,
                                          "_event": [Function],
                                          "_leakageMon": undefined,
                                          "_options": undefined,
                                          "_perfMon": undefined,
                                          "_size": 0,
                                        },
                                        Emitter {
                                          "_deliveryQueue": undefined,
                                          "_event": [Function],
                                          "_leakageMon": undefined,
                                          "_options": undefined,
                                          "_perfMon": undefined,
                                          "_size": 0,
                                        },
                                      },
                                    },
                                    "fastEvent": [Function],
                                    "slowEvent": [Function],
                                  },
                                  MutableDisposable {
                                    "_isDisposed": false,
                                    "_value": {
                                      "dispose": [Function],
                                    },
                                  },
                                  BracketPairsTextModelPart {
                                    "_store": DisposableStore {
                                      "_isDisposed": false,
                                      "_toDispose": Set {
                                        MutableDisposable {
                                          "_isDisposed": false,
                                        },
                                        {
                                          "dispose": [Function],
                                        },
                                      },
                                    },
                                    "bracketPairsTree": MutableDisposable {
                                      "_isDisposed": false,
                                    },
                                    "bracketsRequested": false,
                                    "languageConfigurationService": bound LanguageConfigurationService {
                                      "constructor": [Function],
                                    },
                                    "onDidChange": [Function],
                                    "onDidChangeEmitter": Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_listeners": UniqueContainer {
                                        "value": [Function],
                                      },
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 1,
                                    },
                                    "textModel": [Circular],
                                  },
                                  GuidesTextModelPart {
                                    "_isDisposed": false,
                                    "_store": DisposableStore {
                                      "_isDisposed": false,
                                      "_toDispose": Set {},
                                    },
                                    "languageConfigurationService": bound LanguageConfigurationService {
                                      "constructor": [Function],
                                    },
                                    "textModel": [Circular],
                                  },
                                  ColorizedBracketPairsDecorationProvider {
                                    "_store": DisposableStore {
                                      "_isDisposed": false,
                                      "_toDispose": Set {
                                        {
                                          "dispose": [Function],
                                        },
                                      },
                                    },
                                    "colorProvider": ColorProvider {
                                      "unexpectedClosingBracketClassName": "unexpected-closing-bracket",
                                    },
                                    "colorizationOptions": {
                                      "enabled": true,
                                      "independentColorPoolPerBracketType": false,
                                    },
                                    "onDidChange": [Function],
                                    "onDidChangeEmitter": Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_listeners": UniqueContainer {
                                        "value": [Function],
                                      },
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 1,
                                    },
                                    "textModel": [Circular],
                                  },
                                  {
                                    "dispose": [Function],
                                  },
                                },
                              },
                              "_tokenizationTextModelPart": TokenizationTextModelPart {
                                "_attachedViews": AttachedViews {
                                  "_onDidChangeVisibleRanges": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  "_views": Set {},
                                  "onDidChangeVisibleRanges": [Function],
                                },
                                "_bracketPairsTextModelPart": BracketPairsTextModelPart {
                                  "_store": DisposableStore {
                                    "_isDisposed": false,
                                    "_toDispose": Set {
                                      MutableDisposable {
                                        "_isDisposed": false,
                                      },
                                      {
                                        "dispose": [Function],
                                      },
                                    },
                                  },
                                  "bracketPairsTree": MutableDisposable {
                                    "_isDisposed": false,
                                  },
                                  "bracketsRequested": false,
                                  "languageConfigurationService": bound LanguageConfigurationService {
                                    "constructor": [Function],
                                  },
                                  "onDidChange": [Function],
                                  "onDidChangeEmitter": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  "textModel": [Circular],
                                },
                                "_isDisposed": false,
                                "_languageConfigurationService": bound LanguageConfigurationService {
                                  "constructor": [Function],
                                },
                                "_languageId": "plaintext",
                                "_languageService": StandaloneLanguageService {
                                  "_onDidChange": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": LeakageMonitor {
                                      "_warnCountdown": 0,
                                      "name": "MOCK_VALUE",
                                      "threshold": 200,
                                    },
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": {
                                      "leakWarningThreshold": 200,
                                    },
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  "_onDidRequestBasicLanguageFeatures": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 0,
                                  },
                                  "_onDidRequestRichLanguageFeatures": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 0,
                                  },
                                  "_registry": LanguagesRegistry {
                                    "_dynamicLanguages": [],
                                    "_languages": {
                                      "plaintext": {
                                        "aliases": [
                                          "plaintext",
                                          "Plain Text",
                                          "text",
                                        ],
                                        "configurationFiles": [],
                                        "extensions": [
                                          ".txt",
                                        ],
                                        "filenames": [],
                                        "icons": [],
                                        "identifier": "plaintext",
                                        "mimetypes": [
                                          "text/plain",
                                        ],
                                        "name": "MOCK_VALUE",
                                      },
                                    },
                                    "_lowercaseNameMap": {
                                      "plain text": "plaintext",
                                      "plaintext": "plaintext",
                                      "text": "plaintext",
                                    },
                                    "_mimeTypesMap": {
                                      "text/plain": "plaintext",
                                    },
                                    "_nameMap": {
                                      "Plain Text": "plaintext",
                                    },
                                    "_onDidChange": Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_listeners": UniqueContainer {
                                        "value": [Function],
                                      },
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 1,
                                    },
                                    "_store": DisposableStore {
                                      "_isDisposed": false,
                                      "_toDispose": Set {
                                        Emitter {
                                          "_deliveryQueue": undefined,
                                          "_event": [Function],
                                          "_leakageMon": undefined,
                                          "_listeners": UniqueContainer {
                                            "value": [Function],
                                          },
                                          "_options": undefined,
                                          "_perfMon": undefined,
                                          "_size": 1,
                                        },
                                        {
                                          "dispose": [Function],
                                        },
                                      },
                                    },
                                    "_warnOnOverwrite": false,
                                    "languageIdCodec": LanguageIdCodec {
                                      "_languageIdToLanguage": [
                                        "vs.editor.nullLanguage",
                                        "plaintext",
                                      ],
                                      "_languageToLanguageId": Map {
                                        "vs.editor.nullLanguage" => 0,
                                        "plaintext" => 1,
                                      },
                                      "_nextLanguageId": 2,
                                    },
                                    "onDidChange": [Function],
                                  },
                                  "_requestedBasicLanguages": Set {
                                    "plaintext",
                                  },
                                  "_requestedRichLanguages": Set {
                                    "plaintext",
                                  },
                                  "_store": DisposableStore {
                                    "_isDisposed": false,
                                    "_toDispose": Set {
                                      Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 0,
                                      },
                                      Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 0,
                                      },
                                      Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": LeakageMonitor {
                                          "_warnCountdown": 0,
                                          "name": "MOCK_VALUE",
                                          "threshold": 200,
                                        },
                                        "_listeners": UniqueContainer {
                                          "value": [Function],
                                        },
                                        "_options": {
                                          "leakWarningThreshold": 200,
                                        },
                                        "_perfMon": undefined,
                                        "_size": 1,
                                      },
                                      LanguagesRegistry {
                                        "_dynamicLanguages": [],
                                        "_languages": {
                                          "plaintext": {
                                            "aliases": [
                                              "plaintext",
                                              "Plain Text",
                                              "text",
                                            ],
                                            "configurationFiles": [],
                                            "extensions": [
                                              ".txt",
                                            ],
                                            "filenames": [],
                                            "icons": [],
                                            "identifier": "plaintext",
                                            "mimetypes": [
                                              "text/plain",
                                            ],
                                            "name": "MOCK_VALUE",
                                          },
                                        },
                                        "_lowercaseNameMap": {
                                          "plain text": "plaintext",
                                          "plaintext": "plaintext",
                                          "text": "plaintext",
                                        },
                                        "_mimeTypesMap": {
                                          "text/plain": "plaintext",
                                        },
                                        "_nameMap": {
                                          "Plain Text": "plaintext",
                                        },
                                        "_onDidChange": Emitter {
                                          "_deliveryQueue": undefined,
                                          "_event": [Function],
                                          "_leakageMon": undefined,
                                          "_listeners": UniqueContainer {
                                            "value": [Function],
                                          },
                                          "_options": undefined,
                                          "_perfMon": undefined,
                                          "_size": 1,
                                        },
                                        "_store": DisposableStore {
                                          "_isDisposed": false,
                                          "_toDispose": Set {
                                            Emitter {
                                              "_deliveryQueue": undefined,
                                              "_event": [Function],
                                              "_leakageMon": undefined,
                                              "_listeners": UniqueContainer {
                                                "value": [Function],
                                              },
                                              "_options": undefined,
                                              "_perfMon": undefined,
                                              "_size": 1,
                                            },
                                            {
                                              "dispose": [Function],
                                            },
                                          },
                                        },
                                        "_warnOnOverwrite": false,
                                        "languageIdCodec": LanguageIdCodec {
                                          "_languageIdToLanguage": [
                                            "vs.editor.nullLanguage",
                                            "plaintext",
                                          ],
                                          "_languageToLanguageId": Map {
                                            "vs.editor.nullLanguage" => 0,
                                            "plaintext" => 1,
                                          },
                                          "_nextLanguageId": 2,
                                        },
                                        "onDidChange": [Function],
                                      },
                                      {
                                        "dispose": [Function],
                                      },
                                    },
                                  },
                                  "languageIdCodec": LanguageIdCodec {
                                    "_languageIdToLanguage": [
                                      "vs.editor.nullLanguage",
                                      "plaintext",
                                    ],
                                    "_languageToLanguageId": Map {
                                      "vs.editor.nullLanguage" => 0,
                                      "plaintext" => 1,
                                    },
                                    "_nextLanguageId": 2,
                                  },
                                  "onDidChange": [Function],
                                  "onDidRequestBasicLanguageFeatures": [Function],
                                  "onDidRequestRichLanguageFeatures": [Function],
                                },
                                "_onDidChangeLanguage": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_listeners": UniqueContainer {
                                    "value": [Function],
                                  },
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 1,
                                },
                                "_onDidChangeLanguageConfiguration": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_onDidChangeTokens": Emitter {
                                  "_deliveryQueue": undefined,
                                  "_event": [Function],
                                  "_leakageMon": undefined,
                                  "_options": undefined,
                                  "_perfMon": undefined,
                                  "_size": 0,
                                },
                                "_semanticTokens": SparseTokensStore {
                                  "_isComplete": false,
                                  "_languageIdCodec": LanguageIdCodec {
                                    "_languageIdToLanguage": [
                                      "vs.editor.nullLanguage",
                                      "plaintext",
                                    ],
                                    "_languageToLanguageId": Map {
                                      "vs.editor.nullLanguage" => 0,
                                      "plaintext" => 1,
                                    },
                                    "_nextLanguageId": 2,
                                  },
                                  "_pieces": [],
                                },
                                "_store": DisposableStore {
                                  "_isDisposed": false,
                                  "_toDispose": Set {
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_listeners": UniqueContainer {
                                        "value": [Function],
                                      },
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 1,
                                    },
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    Emitter {
                                      "_deliveryQueue": undefined,
                                      "_event": [Function],
                                      "_leakageMon": undefined,
                                      "_options": undefined,
                                      "_perfMon": undefined,
                                      "_size": 0,
                                    },
                                    GrammarTokens {
                                      "_attachedViewStates": DisposableMap {
                                        "_isDisposed": false,
                                        "_store": Map {},
                                      },
                                      "_backgroundTokenizationState": 1,
                                      "_backgroundTokenizer": MutableDisposable {
                                        "_isDisposed": false,
                                      },
                                      "_debugBackgroundTokenizer": MutableDisposable {
                                        "_isDisposed": false,
                                      },
                                      "_defaultBackgroundTokenizer": null,
                                      "_languageIdCodec": LanguageIdCodec {
                                        "_languageIdToLanguage": [
                                          "vs.editor.nullLanguage",
                                          "plaintext",
                                        ],
                                        "_languageToLanguageId": Map {
                                          "vs.editor.nullLanguage" => 0,
                                          "plaintext" => 1,
                                        },
                                        "_nextLanguageId": 2,
                                      },
                                      "_onDidChangeBackgroundTokenizationState": Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_listeners": UniqueContainer {
                                          "value": [Function],
                                        },
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 1,
                                      },
                                      "_onDidChangeTokens": Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_listeners": UniqueContainer {
                                          "value": [Function],
                                        },
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 1,
                                      },
                                      "_store": DisposableStore {
                                        "_isDisposed": false,
                                        "_toDispose": Set {
                                          MutableDisposable {
                                            "_isDisposed": false,
                                          },
                                          MutableDisposable {
                                            "_isDisposed": false,
                                          },
                                          Emitter {
                                            "_deliveryQueue": undefined,
                                            "_event": [Function],
                                            "_leakageMon": undefined,
                                            "_listeners": UniqueContainer {
                                              "value": [Function],
                                            },
                                            "_options": undefined,
                                            "_perfMon": undefined,
                                            "_size": 1,
                                          },
                                          Emitter {
                                            "_deliveryQueue": undefined,
                                            "_event": [Function],
                                            "_leakageMon": undefined,
                                            "_listeners": UniqueContainer {
                                              "value": [Function],
                                            },
                                            "_options": undefined,
                                            "_perfMon": undefined,
                                            "_size": 1,
                                          },
                                          DisposableMap {
                                            "_isDisposed": false,
                                            "_store": Map {},
                                          },
                                          {
                                            "dispose": [Function],
                                          },
                                          {
                                            "dispose": [Function],
                                          },
                                        },
                                      },
                                      "_textModel": [Circular],
                                      "_tokenizer": null,
                                      "_tokens": ContiguousTokensStore {
                                        "_languageIdCodec": LanguageIdCodec {
                                          "_languageIdToLanguage": [
                                            "vs.editor.nullLanguage",
                                            "plaintext",
                                          ],
                                          "_languageToLanguageId": Map {
                                            "vs.editor.nullLanguage" => 0,
                                            "plaintext" => 1,
                                          },
                                          "_nextLanguageId": 2,
                                        },
                                        "_len": 0,
                                        "_lineTokens": [],
                                      },
                                      "getLanguageId": [Function],
                                      "onDidChangeBackgroundTokenizationState": [Function],
                                      "onDidChangeTokens": [Function],
                                    },
                                    {
                                      "dispose": [Function],
                                    },
                                    {
                                      "dispose": [Function],
                                    },
                                    {
                                      "dispose": [Function],
                                    },
                                  },
                                },
                                "_textModel": [Circular],
                                "grammarTokens": GrammarTokens {
                                  "_attachedViewStates": DisposableMap {
                                    "_isDisposed": false,
                                    "_store": Map {},
                                  },
                                  "_backgroundTokenizationState": 1,
                                  "_backgroundTokenizer": MutableDisposable {
                                    "_isDisposed": false,
                                  },
                                  "_debugBackgroundTokenizer": MutableDisposable {
                                    "_isDisposed": false,
                                  },
                                  "_defaultBackgroundTokenizer": null,
                                  "_languageIdCodec": LanguageIdCodec {
                                    "_languageIdToLanguage": [
                                      "vs.editor.nullLanguage",
                                      "plaintext",
                                    ],
                                    "_languageToLanguageId": Map {
                                      "vs.editor.nullLanguage" => 0,
                                      "plaintext" => 1,
                                    },
                                    "_nextLanguageId": 2,
                                  },
                                  "_onDidChangeBackgroundTokenizationState": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  "_onDidChangeTokens": Emitter {
                                    "_deliveryQueue": undefined,
                                    "_event": [Function],
                                    "_leakageMon": undefined,
                                    "_listeners": UniqueContainer {
                                      "value": [Function],
                                    },
                                    "_options": undefined,
                                    "_perfMon": undefined,
                                    "_size": 1,
                                  },
                                  "_store": DisposableStore {
                                    "_isDisposed": false,
                                    "_toDispose": Set {
                                      MutableDisposable {
                                        "_isDisposed": false,
                                      },
                                      MutableDisposable {
                                        "_isDisposed": false,
                                      },
                                      Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_listeners": UniqueContainer {
                                          "value": [Function],
                                        },
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 1,
                                      },
                                      Emitter {
                                        "_deliveryQueue": undefined,
                                        "_event": [Function],
                                        "_leakageMon": undefined,
                                        "_listeners": UniqueContainer {
                                          "value": [Function],
                                        },
                                        "_options": undefined,
                                        "_perfMon": undefined,
                                        "_size": 1,
                                      },
                                      DisposableMap {
                                        "_isDisposed": false,
                                        "_store": Map {},
                                      },
                                      {
                                        "dispose": [Function],
                                      },
                                      {
                                        "dispose": [Function],
                                      },
                                    },
                                  },
                                  "_textModel": [Circular],
                                  "_tokenizer": null,
                                  "_tokens": ContiguousTokensStore {
                                    "_languageIdCodec": LanguageIdCodec {
                                      "_languageIdToLanguage": [
                                        "vs.editor.nullLanguage",
                                        "plaintext",
                                      ],
                                      "_languageToLanguageId": Map {
                                        "vs.editor.nullLanguage" => 0,
                                        "plaintext" => 1,
                                      },
                                      "_nextLanguageId": 2,
                                    },
                                    "_len": 0,
                                    "_lineTokens": [],
                                  },
                                  "getLanguageId": [Function],
                                  "onDidChangeBackgroundTokenizationState": [Function],
                                  "onDidChangeTokens": [Function],
                                },
                                "onDidChangeLanguage": [Function],
                                "onDidChangeLanguageConfiguration": [Function],
                                "onDidChangeTokens": [Function],
                              },
                              "_trimAutoWhitespaceLines": null,
                              "_undoRedoService": bound UndoRedoService {
                                "constructor": [Function],
                                "removeElements": [Function],
                              },
                              "_versionId": 3,
                              "editorMode": 0,
                              "executionContexts": ExecutionContexts {
                                "content": [],
                                "cursorPosition": {
                                  "column": 1,
                                  "lineNumber": 1,
                                },
                                "dbVersion": 80200,
                                "defaultSchema": "",
                                "onCommitChanges": [Function],
                                "onResultRemoval": [Function],
                                "rollbackChanges": [Function],
                                "runUpdates": undefined,
                                "sqlMode": "",
                                "sqlUpdateColumnInfo": [Function],
                                "store": "unused",
                              },
                              "id": "$model1",
                              "isForSimpleWidget": false,
                              "onDidChangeAttached": [Function],
                              "onDidChangeDecorations": [Function],
                              "onDidChangeOptions": [Function],
                              "onWillDispose": [Function],
                            },
                            "options": {},
                            "viewState": null,
                          },
                          "type": 0,
                        },
                      ],
                      "executionHistory": [],
                      "explorerState": Map {
                        "state1" => {},
                      },
                      "explorerWidth": 200,
                      "graphData": {
                        "activeColorScheme": "grays",
                        "computedValues": {},
                        "currentValues": Map {},
                        "displayInterval": 300,
                        "series": Map {},
                        "timestamp": "MOCK_VALUE",
                      },
                      "heatWaveEnabled": false,
                      "mleEnabled": false,
                      "schemaTree": [],
                      "scripts": [],
                      "serverEdition": "gpl",
                      "serverVersion": 1,
                      "sqlMode": "mode1",
                    }
                  }
                  showAbout={false}
                  standaloneMode={false}
                  toolbarItemsTemplate={
                    {
                      "auxillary": [],
                      "editor": [],
                      "execution": [],
                      "navigation": [],
                    }
                  }
                />,
                "id": "notebook",
                "minSize": 350,
                "resizable": false,
                "snap": false,
                "stretch": true,
              },
              {
                "collapsed": true,
                "content": undefined,
                "id": "chatOptions",
                "initialSize": 340,
                "minSize": 340,
                "snap": true,
              },
            ]
          }
          splitterSize={4}
        />,
        "id": "content",
        "minSize": 350,
        "snap": false,
        "stretch": true,
      },
    ]
  }
  splitterSize={4}
/>
`;
