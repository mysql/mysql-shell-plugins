// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DBEditor module tests Test DBEditorModule instantiation 1`] = `
<DBEditorModule
  innerRef={
    {
      "current": <div
        class="msg container fixedScrollbar tabview top dbModuleTabview moduleHost"
        style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
      >
        <div
          class="msg container fixedScrollbar selector horizontal tabArea"
          style="flex-direction: row;"
        >
          <div
            class="msg container fixedScrollbar selectorItem stepDown"
            id="selectorItemstepDown"
            style="flex-direction: row; justify-content: center; align-items: center; display: none;"
          />
          <div
            class="msg container fixedScrollbar selectorItem selected normal"
            draggable="true"
            id="progress"
            style="flex-direction: row; justify-content: center; align-items: center;"
          >
            <span
              class="msg icon"
              data-tooltip="inherit"
              style="mask-image: url(overviewPage.svg);"
            />
            <label
              class="msg label"
              data-tooltip="inherit"
            >
              Open Connection
            </label>
          </div>
          <div
            class="msg container fixedScrollbar selectorItem stepUp"
            id="selectorItemstepUp"
            style="flex-direction: row; justify-content: center; align-items: center; display: none;"
          />
        </div>
        <div
          class="msg container fixedScrollbar content"
          style="flex-direction: column;"
        >
          <div
            class="msg container fixedScrollbar progressIndicatorHost"
            id="loadingProgressIndicator"
            style="flex-direction: column; justify-content: center; align-items: center; opacity: 0.95; --position: 0; --width: 80; --height: 80; --strokeWidth: 5;"
          >
            <svg
              class="circleBackground animated"
            >
              <circle
                cx="37.5"
                cy="37.5"
                r="35"
              />
              <circle
                cx="37.5"
                cy="37.5"
                r="35"
              />
            </svg>
          </div>
          <label
            class="msg label"
            data-tooltip="expand"
            id="progressMessageId"
          />
        </div>
      </div>,
    }
  }
>
  <Tabview
    canReorderTabs={true}
    className="dbModuleTabview moduleHost"
    hideSingleTab={false}
    innerRef={
      {
        "current": <div
          class="msg container fixedScrollbar tabview top dbModuleTabview moduleHost"
          style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
        >
          <div
            class="msg container fixedScrollbar selector horizontal tabArea"
            style="flex-direction: row;"
          >
            <div
              class="msg container fixedScrollbar selectorItem stepDown"
              id="selectorItemstepDown"
              style="flex-direction: row; justify-content: center; align-items: center; display: none;"
            />
            <div
              class="msg container fixedScrollbar selectorItem selected normal"
              draggable="true"
              id="progress"
              style="flex-direction: row; justify-content: center; align-items: center;"
            >
              <span
                class="msg icon"
                data-tooltip="inherit"
                style="mask-image: url(overviewPage.svg);"
              />
              <label
                class="msg label"
                data-tooltip="inherit"
              >
                Open Connection
              </label>
            </div>
            <div
              class="msg container fixedScrollbar selectorItem stepUp"
              id="selectorItemstepUp"
              style="flex-direction: row; justify-content: center; align-items: center; display: none;"
            />
          </div>
          <div
            class="msg container fixedScrollbar content"
            style="flex-direction: column;"
          >
            <div
              class="msg container fixedScrollbar progressIndicatorHost"
              id="loadingProgressIndicator"
              style="flex-direction: column; justify-content: center; align-items: center; opacity: 0.95; --position: 0; --width: 80; --height: 80; --strokeWidth: 5;"
            >
              <svg
                class="circleBackground animated"
              >
                <circle
                  cx="37.5"
                  cy="37.5"
                  r="35"
                />
                <circle
                  cx="37.5"
                  cy="37.5"
                  r="35"
                />
              </svg>
            </div>
            <label
              class="msg label"
              data-tooltip="expand"
              id="progressMessageId"
            />
          </div>
        </div>,
      }
    }
    onSelectTab={[Function]}
    pages={
      [
        {
          "caption": "Open Connection",
          "content": <p>
            <ProgressIndicator
              backgroundOpacity={0.95}
              id="loadingProgressIndicator"
              linear={false}
            />
            <Label
              caption=""
              id="progressMessageId"
            />
          </p>,
          "icon": "overviewPage.svg",
          "id": "progress",
        },
      ]
    }
    selectedId="progress"
    showTabs={true}
    stretchTabs={false}
    tabPosition="top"
  >
    <Container
      className="msg tabview top dbModuleTabview moduleHost"
      innerRef={
        {
          "current": <div
            class="msg container fixedScrollbar tabview top dbModuleTabview moduleHost"
            style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
          >
            <div
              class="msg container fixedScrollbar selector horizontal tabArea"
              style="flex-direction: row;"
            >
              <div
                class="msg container fixedScrollbar selectorItem stepDown"
                id="selectorItemstepDown"
                style="flex-direction: row; justify-content: center; align-items: center; display: none;"
              />
              <div
                class="msg container fixedScrollbar selectorItem selected normal"
                draggable="true"
                id="progress"
                style="flex-direction: row; justify-content: center; align-items: center;"
              >
                <span
                  class="msg icon"
                  data-tooltip="inherit"
                  style="mask-image: url(overviewPage.svg);"
                />
                <label
                  class="msg label"
                  data-tooltip="inherit"
                >
                  Open Connection
                </label>
              </div>
              <div
                class="msg container fixedScrollbar selectorItem stepUp"
                id="selectorItemstepUp"
                style="flex-direction: row; justify-content: center; align-items: center; display: none;"
              />
            </div>
            <div
              class="msg container fixedScrollbar content"
              style="flex-direction: column;"
            >
              <div
                class="msg container fixedScrollbar progressIndicatorHost"
                id="loadingProgressIndicator"
                style="flex-direction: column; justify-content: center; align-items: center; opacity: 0.95; --position: 0; --width: 80; --height: 80; --strokeWidth: 5;"
              >
                <svg
                  class="circleBackground animated"
                >
                  <circle
                    cx="37.5"
                    cy="37.5"
                    r="35"
                  />
                  <circle
                    cx="37.5"
                    cy="37.5"
                    r="35"
                  />
                </svg>
              </div>
              <label
                class="msg label"
                data-tooltip="expand"
                id="progressMessageId"
              />
            </div>
          </div>,
        }
      }
      orientation="column"
      style={
        {
          "--content-separator-width": "0px",
          "--tabItem-border-width": "0px",
        }
      }
    >
      <div
        className="msg container fixedScrollbar tabview top dbModuleTabview moduleHost"
        style={
          {
            "--content-separator-width": "0px",
            "--tabItem-border-width": "0px",
            "alignItems": undefined,
            "flexDirection": "column",
            "flexWrap": undefined,
            "justifyContent": undefined,
          }
        }
      >
        <Selector
          activeItemId="progress"
          className="tabArea"
          entryOrientation="row"
          items={
            [
              {
                "auxillary": undefined,
                "canReorder": true,
                "caption": "Open Connection",
                "icon": "overviewPage.svg",
                "id": "progress",
                "tooltip": undefined,
              },
            ]
          }
          onDrop={[Function]}
          onSelect={[Function]}
          orientation="row"
          smoothScroll={false}
          wrapNavigation={false}
        >
          <Container
            className="msg selector horizontal tabArea"
            innerRef={
              {
                "current": <div
                  class="msg container fixedScrollbar selector horizontal tabArea"
                  style="flex-direction: row;"
                >
                  <div
                    class="msg container fixedScrollbar selectorItem stepDown"
                    id="selectorItemstepDown"
                    style="flex-direction: row; justify-content: center; align-items: center; display: none;"
                  />
                  <div
                    class="msg container fixedScrollbar selectorItem selected normal"
                    draggable="true"
                    id="progress"
                    style="flex-direction: row; justify-content: center; align-items: center;"
                  >
                    <span
                      class="msg icon"
                      data-tooltip="inherit"
                      style="mask-image: url(overviewPage.svg);"
                    />
                    <label
                      class="msg label"
                      data-tooltip="inherit"
                    >
                      Open Connection
                    </label>
                  </div>
                  <div
                    class="msg container fixedScrollbar selectorItem stepUp"
                    id="selectorItemstepUp"
                    style="flex-direction: row; justify-content: center; align-items: center; display: none;"
                  />
                </div>,
              }
            }
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            orientation="row"
          >
            <div
              className="msg container fixedScrollbar selector horizontal tabArea"
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              style={
                {
                  "alignItems": undefined,
                  "flexDirection": "row",
                  "flexWrap": undefined,
                  "justifyContent": undefined,
                }
              }
            >
              <SelectorItem
                disabled={false}
                id="selectorItemstepDown"
                innerRef={
                  {
                    "current": <div
                      class="msg container fixedScrollbar selectorItem stepDown"
                      id="selectorItemstepDown"
                      style="flex-direction: row; justify-content: center; align-items: center; display: none;"
                    />,
                  }
                }
                onClick={[Function]}
                orientation="row"
                type="stepDown"
              >
                <Container
                  className="msg selectorItem stepDown"
                  crossAlignment="center"
                  id="selectorItemstepDown"
                  innerRef={
                    {
                      "current": <div
                        class="msg container fixedScrollbar selectorItem stepDown"
                        id="selectorItemstepDown"
                        style="flex-direction: row; justify-content: center; align-items: center; display: none;"
                      />,
                    }
                  }
                  mainAlignment="center"
                  onClick={[Function]}
                  orientation="row"
                >
                  <div
                    className="msg container fixedScrollbar selectorItem stepDown"
                    id="selectorItemstepDown"
                    onClick={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "flexWrap": undefined,
                        "justifyContent": "center",
                      }
                    }
                  />
                </Container>
              </SelectorItem>
              <SelectorItem
                caption="Open Connection"
                disabled={false}
                draggable={true}
                id="progress"
                image="overviewPage.svg"
                innerRef={
                  {
                    "current": <div
                      class="msg container fixedScrollbar selectorItem selected normal"
                      draggable="true"
                      id="progress"
                      style="flex-direction: row; justify-content: center; align-items: center;"
                    >
                      <span
                        class="msg icon"
                        data-tooltip="inherit"
                        style="mask-image: url(overviewPage.svg);"
                      />
                      <label
                        class="msg label"
                        data-tooltip="inherit"
                      >
                        Open Connection
                      </label>
                    </div>,
                  }
                }
                key="progress"
                onClick={[Function]}
                onDrop={[Function]}
                orientation="row"
                selected={true}
                type="normal"
              >
                <Container
                  className="msg selectorItem selected normal"
                  crossAlignment="center"
                  draggable={true}
                  id="progress"
                  innerRef={
                    {
                      "current": <div
                        class="msg container fixedScrollbar selectorItem selected normal"
                        draggable="true"
                        id="progress"
                        style="flex-direction: row; justify-content: center; align-items: center;"
                      >
                        <span
                          class="msg icon"
                          data-tooltip="inherit"
                          style="mask-image: url(overviewPage.svg);"
                        />
                        <label
                          class="msg label"
                          data-tooltip="inherit"
                        >
                          Open Connection
                        </label>
                      </div>,
                    }
                  }
                  mainAlignment="center"
                  onClick={[Function]}
                  onDragEnter={[Function]}
                  onDragLeave={[Function]}
                  onDragOver={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  orientation="row"
                >
                  <div
                    className="msg container fixedScrollbar selectorItem selected normal"
                    draggable={true}
                    id="progress"
                    onClick={[Function]}
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "flexWrap": undefined,
                        "justifyContent": "center",
                      }
                    }
                  >
                    <Icon
                      data-tooltip="inherit"
                      disabled={false}
                      src="overviewPage.svg"
                    >
                      <span
                        className="msg icon"
                        data-tooltip="inherit"
                        style={
                          {
                            "WebkitMaskImage": "url(overviewPage.svg)",
                            "backgroundColor": undefined,
                            "height": undefined,
                            "maskImage": "url(overviewPage.svg)",
                            "width": undefined,
                          }
                        }
                      />
                    </Icon>
                    <Label
                      data-tooltip="inherit"
                    >
                      <label
                        className="msg label"
                        data-tooltip="inherit"
                        style={{}}
                      >
                        Open Connection
                      </label>
                    </Label>
                  </div>
                </Container>
              </SelectorItem>
              <SelectorItem
                disabled={false}
                id="selectorItemstepUp"
                innerRef={
                  {
                    "current": <div
                      class="msg container fixedScrollbar selectorItem stepUp"
                      id="selectorItemstepUp"
                      style="flex-direction: row; justify-content: center; align-items: center; display: none;"
                    />,
                  }
                }
                onClick={[Function]}
                orientation="row"
                type="stepUp"
              >
                <Container
                  className="msg selectorItem stepUp"
                  crossAlignment="center"
                  id="selectorItemstepUp"
                  innerRef={
                    {
                      "current": <div
                        class="msg container fixedScrollbar selectorItem stepUp"
                        id="selectorItemstepUp"
                        style="flex-direction: row; justify-content: center; align-items: center; display: none;"
                      />,
                    }
                  }
                  mainAlignment="center"
                  onClick={[Function]}
                  orientation="row"
                >
                  <div
                    className="msg container fixedScrollbar selectorItem stepUp"
                    id="selectorItemstepUp"
                    onClick={[Function]}
                    style={
                      {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "flexWrap": undefined,
                        "justifyContent": "center",
                      }
                    }
                  />
                </Container>
              </SelectorItem>
            </div>
          </Container>
        </Selector>
        <Container
          className="content"
          innerRef={
            {
              "current": <div
                class="msg container fixedScrollbar content"
                style="flex-direction: column;"
              >
                <div
                  class="msg container fixedScrollbar progressIndicatorHost"
                  id="loadingProgressIndicator"
                  style="flex-direction: column; justify-content: center; align-items: center; opacity: 0.95; --position: 0; --width: 80; --height: 80; --strokeWidth: 5;"
                >
                  <svg
                    class="circleBackground animated"
                  >
                    <circle
                      cx="37.5"
                      cy="37.5"
                      r="35"
                    />
                    <circle
                      cx="37.5"
                      cy="37.5"
                      r="35"
                    />
                  </svg>
                </div>
                <label
                  class="msg label"
                  data-tooltip="expand"
                  id="progressMessageId"
                />
              </div>,
            }
          }
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
          orientation="column"
        >
          <div
            className="msg container fixedScrollbar content"
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDrop={[Function]}
            style={
              {
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <ProgressIndicator
              backgroundOpacity={0.95}
              id="loadingProgressIndicator"
              linear={false}
            >
              <Container
                className="msg progressIndicatorHost"
                crossAlignment="center"
                id="loadingProgressIndicator"
                mainAlignment="center"
                orientation="column"
                style={
                  {
                    "--height": 80,
                    "--position": 0,
                    "--strokeWidth": 5,
                    "--width": 80,
                    "opacity": 0.95,
                  }
                }
              >
                <div
                  className="msg container fixedScrollbar progressIndicatorHost"
                  id="loadingProgressIndicator"
                  style={
                    {
                      "--height": 80,
                      "--position": 0,
                      "--strokeWidth": 5,
                      "--width": 80,
                      "alignItems": "center",
                      "flexDirection": "column",
                      "flexWrap": undefined,
                      "justifyContent": "center",
                      "opacity": 0.95,
                    }
                  }
                >
                  <svg
                    className="circleBackground animated"
                  >
                    <circle
                      cx={37.5}
                      cy={37.5}
                      r={35}
                    />
                    <circle
                      cx={37.5}
                      cy={37.5}
                      r={35}
                    />
                  </svg>
                </div>
              </Container>
            </ProgressIndicator>
            <Label
              caption=""
              id="progressMessageId"
            >
              <label
                className="msg label"
                data-tooltip="expand"
                id="progressMessageId"
                style={{}}
              />
            </Label>
          </div>
        </Container>
      </div>
    </Container>
  </Tabview>
</DBEditorModule>
`;
