// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Client connections module tests Test ClientConnections instantiation: ClientConnections1 1`] = `
<ClientConnections
  backend={
    ShellInterfaceSqlEditor {
      "mds": ShellInterfaceMds {},
      "moduleSessionLookupId": "",
      "mrs": ShellInterfaceMrs {
        "moduleSessionLookupId": "",
      },
    }
  }
>
  <Container
    className="msg clientConnections"
    mainAlignment="flex-start"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar clientConnections"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": "flex-start",
        }
      }
    >
      <Toolbar
        dropShadow={false}
        id="clientConnectionToolbar"
        vibrant={false}
      >
        <Container
          className="msg toolbar verticalCenterContent"
          crossAlignment="center"
          id="clientConnectionToolbar"
          orientation="row"
        >
          <div
            className="msg container fixedScrollbar toolbar verticalCenterContent"
            id="clientConnectionToolbar"
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Label
              key="mainLabel"
            >
              <label
                className="msg label"
                data-tooltip="expand"
                style={{}}
              >
                Refresh Rate:
              </label>
            </Label>
            <Dropdown
              id="refreshSelector"
              key="selector"
              multiSelect={false}
              optional={false}
              selection="5"
              showDescription={false}
              withoutArrow={false}
            >
              <Container
                className="msg dropdown"
                crossAlignment="center"
                id="refreshSelector"
                innerRef={
                  {
                    "current": <div
                      class="msg container fixedScrollbar dropdown"
                      id="refreshSelector"
                      style="flex-direction: row; align-items: center;"
                      tabindex="0"
                    >
                      <label
                        class="msg label ellipsis"
                        data-tooltip="expand"
                      >
                        5 seconds
                      </label>
                    </div>,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                orientation="row"
                tabIndex={0}
              >
                <div
                  className="msg container fixedScrollbar dropdown"
                  id="refreshSelector"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onfocusout={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexWrap": undefined,
                      "justifyContent": undefined,
                    }
                  }
                  tabIndex={0}
                >
                  <Label
                    className="ellipsis"
                  >
                    <label
                      className="msg label ellipsis"
                      data-tooltip="expand"
                      style={{}}
                    >
                      5 seconds
                    </label>
                  </Label>
                </div>
              </Container>
              <Popup
                className="dropdownList"
                id="refreshSelectorPopup"
                innerRef={
                  {
                    "current": null,
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                orientation="column"
                pinned={false}
                placement="bottom-end"
                showArrow={false}
              >
                <Portal
                  id="refreshSelectorPopup"
                  onClose={[Function]}
                  onOpen={[Function]}
                />
              </Popup>
            </Dropdown>
            <Divider
              key="refreshSeparator"
              thickness={1}
              vertical={true}
            >
              <div
                className="msg divider vertical"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  {
                    "--thickness": "1px",
                  }
                }
              />
            </Divider>
            <Button
              data-tooltip="Hide sleeping connections"
              imageOnly={true}
              key="hideSleepConn"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Hide sleeping connections"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-sleeping_conns-active.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-sleeping_conns-active.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-sleeping_conns-active.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Button
              data-tooltip="Hide background threads"
              imageOnly={true}
              key="hideBkgThreads"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Hide background threads"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-background_threads-active.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-background_threads-active.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-background_threads-active.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Divider
              key="filterSeparator"
              thickness={1}
              vertical={true}
            >
              <div
                className="msg divider vertical"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  {
                    "--thickness": "1px",
                  }
                }
              />
            </Divider>
            <Button
              data-tooltip="Don't load full thread info"
              imageOnly={true}
              key="noFullInfo"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Don't load full thread info"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-info-inactive.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-info-inactive.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-info-inactive.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Button
              data-tooltip="Show/Hide Details"
              imageOnly={true}
              key="showDetails"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Show/Hide Details"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-show_details-inactive.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-show_details-inactive.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-show_details-inactive.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Divider
              key="actionSeparator"
              thickness={1}
              vertical={true}
            >
              <div
                className="msg divider vertical"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  {
                    "--thickness": "1px",
                  }
                }
              />
            </Divider>
            <Button
              data-tooltip="Kill Query"
              disabled={true}
              imageOnly={true}
              key="killQuery"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Kill Query"
                disabled={true}
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-kill_query.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-kill_query.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-kill_query.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Button
              data-tooltip="Kill Connection"
              disabled={true}
              imageOnly={true}
              key="killCOnnection"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Kill Connection"
                disabled={true}
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-kill_connection.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-kill_connection.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-kill_connection.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <div
              className="expander"
            />
          </div>
        </Container>
      </Toolbar>
      <Container
        id="contentHost"
        orientation="column"
      >
        <div
          className="msg container fixedScrollbar"
          id="contentHost"
          style={
            {
              "alignItems": undefined,
              "flexDirection": "column",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        >
          <Container
            crossAlignment="flex-start"
            id="connectionProps"
            orientation="row"
            wrap="wrap"
          >
            <div
              className="msg container fixedScrollbar"
              id="connectionProps"
              style={
                {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": undefined,
                }
              }
            >
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Connected: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Running: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Created: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Cached: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Rejected (over limit): 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Total Connections: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Connection Limit: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Aborted Clients: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Aborted Connections: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Errors: 
                </label>
              </Label>
            </div>
          </Container>
          <Container
            id="connectionListTitle"
            orientation="column"
          >
            <div
              className="msg container fixedScrollbar"
              id="connectionListTitle"
              style={
                {
                  "alignItems": undefined,
                  "flexDirection": "column",
                  "flexWrap": undefined,
                  "justifyContent": undefined,
                }
              }
            >
              <Divider
                thickness={4}
                vertical={false}
              >
                <div
                  className="msg divider horizontal"
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    {
                      "--thickness": "4px",
                    }
                  }
                />
              </Divider>
              <Label>
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Client Connection List
                </label>
              </Label>
            </div>
          </Container>
          <Container
            id="connectionList"
            orientation="row"
          >
            <div
              className="msg container fixedScrollbar"
              id="connectionList"
              style={
                {
                  "alignItems": undefined,
                  "flexDirection": "row",
                  "flexWrap": undefined,
                  "justifyContent": undefined,
                }
              }
            />
          </Container>
        </div>
      </Container>
    </div>
  </Container>
</ClientConnections>
`;

exports[`Client connections module tests Test ClientConnections instantiation: ClientConnections2 1`] = `
<ClientConnections
  backend={
    ShellInterfaceSqlEditor {
      "mds": ShellInterfaceMds {},
      "moduleSessionLookupId": "",
      "mrs": ShellInterfaceMrs {
        "moduleSessionLookupId": "",
      },
    }
  }
>
  <Container
    className="msg clientConnections"
    mainAlignment="flex-start"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar clientConnections"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": "flex-start",
        }
      }
    >
      <Toolbar
        dropShadow={false}
        id="clientConnectionToolbar"
        vibrant={false}
      >
        <Container
          className="msg toolbar verticalCenterContent"
          crossAlignment="center"
          id="clientConnectionToolbar"
          orientation="row"
        >
          <div
            className="msg container fixedScrollbar toolbar verticalCenterContent"
            id="clientConnectionToolbar"
            style={
              {
                "alignItems": "center",
                "flexDirection": "row",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Label
              key="mainLabel"
            >
              <label
                className="msg label"
                data-tooltip="expand"
                style={{}}
              >
                Refresh Rate:
              </label>
            </Label>
            <Dropdown
              id="refreshSelector"
              key="selector"
              multiSelect={false}
              optional={false}
              selection="5"
              showDescription={false}
              withoutArrow={false}
            >
              <Container
                className="msg dropdown"
                crossAlignment="center"
                id="refreshSelector"
                innerRef={
                  {
                    "current": <div
                      class="msg container fixedScrollbar dropdown"
                      id="refreshSelector"
                      style="flex-direction: row; align-items: center;"
                      tabindex="0"
                    >
                      <label
                        class="msg label ellipsis"
                        data-tooltip="expand"
                      >
                        5 seconds
                      </label>
                    </div>,
                  }
                }
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                orientation="row"
                tabIndex={0}
              >
                <div
                  className="msg container fixedScrollbar dropdown"
                  id="refreshSelector"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onfocusout={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "flexWrap": undefined,
                      "justifyContent": undefined,
                    }
                  }
                  tabIndex={0}
                >
                  <Label
                    className="ellipsis"
                  >
                    <label
                      className="msg label ellipsis"
                      data-tooltip="expand"
                      style={{}}
                    >
                      5 seconds
                    </label>
                  </Label>
                </div>
              </Container>
              <Popup
                className="dropdownList"
                id="refreshSelectorPopup"
                innerRef={
                  {
                    "current": null,
                  }
                }
                onClose={[Function]}
                onOpen={[Function]}
                orientation="column"
                pinned={false}
                placement="bottom-end"
                showArrow={false}
              >
                <Portal
                  id="refreshSelectorPopup"
                  onClose={[Function]}
                  onOpen={[Function]}
                />
              </Popup>
            </Dropdown>
            <Divider
              key="refreshSeparator"
              thickness={1}
              vertical={true}
            >
              <div
                className="msg divider vertical"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  {
                    "--thickness": "1px",
                  }
                }
              />
            </Divider>
            <Button
              data-tooltip="Hide sleeping connections"
              imageOnly={true}
              key="hideSleepConn"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Hide sleeping connections"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-sleeping_conns-active.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-sleeping_conns-active.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-sleeping_conns-active.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Button
              data-tooltip="Hide background threads"
              imageOnly={true}
              key="hideBkgThreads"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Hide background threads"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-background_threads-active.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-background_threads-active.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-background_threads-active.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Divider
              key="filterSeparator"
              thickness={1}
              vertical={true}
            >
              <div
                className="msg divider vertical"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  {
                    "--thickness": "1px",
                  }
                }
              />
            </Divider>
            <Button
              data-tooltip="Don't load full thread info"
              imageOnly={true}
              key="noFullInfo"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Don't load full thread info"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-info-inactive.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-info-inactive.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-info-inactive.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Button
              data-tooltip="Show/Hide Details"
              imageOnly={true}
              key="showDetails"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Show/Hide Details"
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-show_details-inactive.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-show_details-inactive.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-show_details-inactive.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Divider
              key="actionSeparator"
              thickness={1}
              vertical={true}
            >
              <div
                className="msg divider vertical"
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                style={
                  {
                    "--thickness": "1px",
                  }
                }
              />
            </Divider>
            <Button
              data-tooltip="Kill Query"
              disabled={true}
              imageOnly={true}
              key="killQuery"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Kill Query"
                disabled={true}
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-kill_query.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-kill_query.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-kill_query.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <Button
              data-tooltip="Kill Connection"
              disabled={true}
              imageOnly={true}
              key="killCOnnection"
              onClick={[Function]}
            >
              <div
                className="msg button imageOnly"
                data-tooltip="Kill Connection"
                disabled={true}
                draggable={true}
                onClick={[Function]}
                onMouseDown={[Function]}
                role="button"
                style={
                  {
                    "flexDirection": undefined,
                  }
                }
                tabIndex={0}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-kill_connection.svg"
                >
                  <span
                    className="msg icon"
                    data-tooltip="inherit"
                    style={
                      {
                        "WebkitMaskImage": "url(toolbar-kill_connection.svg)",
                        "backgroundColor": undefined,
                        "height": undefined,
                        "maskImage": "url(toolbar-kill_connection.svg)",
                        "width": undefined,
                      }
                    }
                  />
                </Icon>
              </div>
            </Button>
            <div
              className="expander"
            />
          </div>
        </Container>
      </Toolbar>
      <Container
        id="contentHost"
        orientation="column"
      >
        <div
          className="msg container fixedScrollbar"
          id="contentHost"
          style={
            {
              "alignItems": undefined,
              "flexDirection": "column",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        >
          <Container
            crossAlignment="flex-start"
            id="connectionProps"
            orientation="row"
            wrap="wrap"
          >
            <div
              className="msg container fixedScrollbar"
              id="connectionProps"
              style={
                {
                  "alignItems": "flex-start",
                  "flexDirection": "row",
                  "flexWrap": "wrap",
                  "justifyContent": undefined,
                }
              }
            >
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Connected: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Running: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Created: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Threads Cached: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Rejected (over limit): 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Total Connections: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Connection Limit: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Aborted Clients: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Aborted Connections: 
                </label>
              </Label>
              <Label
                key="mainLabel"
              >
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Errors: 
                </label>
              </Label>
            </div>
          </Container>
          <Container
            id="connectionListTitle"
            orientation="column"
          >
            <div
              className="msg container fixedScrollbar"
              id="connectionListTitle"
              style={
                {
                  "alignItems": undefined,
                  "flexDirection": "column",
                  "flexWrap": undefined,
                  "justifyContent": undefined,
                }
              }
            >
              <Divider
                thickness={4}
                vertical={false}
              >
                <div
                  className="msg divider horizontal"
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  style={
                    {
                      "--thickness": "4px",
                    }
                  }
                />
              </Divider>
              <Label>
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  Client Connection List
                </label>
              </Label>
            </div>
          </Container>
          <Container
            id="connectionList"
            orientation="row"
          >
            <div
              className="msg container fixedScrollbar"
              id="connectionList"
              style={
                {
                  "alignItems": undefined,
                  "flexDirection": "row",
                  "flexWrap": undefined,
                  "justifyContent": undefined,
                }
              }
            />
          </Container>
        </div>
      </Container>
    </div>
  </Container>
</ClientConnections>
`;
