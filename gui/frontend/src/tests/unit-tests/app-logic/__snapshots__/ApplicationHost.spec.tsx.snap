// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Application host tests Rendering About 1`] = `
<ApplicationHost
  toggleOptions={[Function]}
>
  <Container
    className="applicationHost"
    orientation="row"
  >
    <div
      className="msg container fixedScrollbar applicationHost"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "row",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <ShellModule
        innerRef={
          {
            "current": <div
              class="msg container fixedScrollbar moduleHost"
              id="shellModuleHost"
              style="flex-direction: column;"
            >
              <div
                class="msg container fixedScrollbar tabview top"
                id="shellModuleTabview"
                style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
              >
                <div
                  class="msg container tabAreaContainer"
                  style="flex-direction: row;"
                >
                  <div
                    class="scrollable"
                  >
                    <div
                      class="msg container tabArea"
                      style="flex-direction: row;"
                    >
                      <div
                        class="msg button tabItem selected"
                        draggable="true"
                        id="sessions"
                        role="button"
                        tabindex="-1"
                      >
                        <div
                          class="msg icon"
                          data-tooltip="inherit"
                          style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                        />
                        <label
                          class="msg label"
                          data-tooltip="inherit"
                        >
                          GUI Console
                        </label>
                      </div>
                    </div>
                    <div
                      class="scrollbar"
                    >
                      <div
                        class="slider"
                      />
                    </div>
                  </div>
                </div>
                <div
                  class="msg container fixedScrollbar tabContent"
                  style="flex-direction: column;"
                >
                  <div />
                </div>
              </div>
            </div>,
          }
        }
        key="gui.shell"
      >
        <Container
          className="msg moduleHost"
          id="shellModuleHost"
          innerRef={
            {
              "current": <div
                class="msg container fixedScrollbar moduleHost"
                id="shellModuleHost"
                style="flex-direction: column;"
              >
                <div
                  class="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
                >
                  <div
                    class="msg container tabAreaContainer"
                    style="flex-direction: row;"
                  >
                    <div
                      class="scrollable"
                    >
                      <div
                        class="msg container tabArea"
                        style="flex-direction: row;"
                      >
                        <div
                          class="msg button tabItem selected"
                          draggable="true"
                          id="sessions"
                          role="button"
                          tabindex="-1"
                        >
                          <div
                            class="msg icon"
                            data-tooltip="inherit"
                            style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                          />
                          <label
                            class="msg label"
                            data-tooltip="inherit"
                          >
                            GUI Console
                          </label>
                        </div>
                      </div>
                      <div
                        class="scrollbar"
                      >
                        <div
                          class="slider"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="msg container fixedScrollbar tabContent"
                    style="flex-direction: column;"
                  >
                    <div />
                  </div>
                </div>
              </div>,
            }
          }
          orientation="column"
        >
          <div
            className="msg container fixedScrollbar moduleHost"
            id="shellModuleHost"
            style={
              {
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Tabview
              canReorderTabs={true}
              hideSingleTab={false}
              id="shellModuleTabview"
              onSelectTab={[Function]}
              pages={
                [
                  {
                    "caption": "GUI Console",
                    "content": <div />,
                    "icon": "module-shell.svg",
                    "id": "sessions",
                  },
                ]
              }
              selectedId="sessions"
              showTabs={true}
              stretchTabs={false}
              tabPosition="top"
            >
              <Container
                className="msg tabview top"
                id="shellModuleTabview"
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                orientation="column"
                style={
                  {
                    "--content-separator-width": "0px",
                    "--tabItem-border-width": "0px",
                  }
                }
              >
                <div
                  className="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  onDragEnter={[Function]}
                  onDragLeave={[Function]}
                  onDragOver={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  style={
                    {
                      "--content-separator-width": "0px",
                      "--tabItem-border-width": "0px",
                      "alignItems": undefined,
                      "flexDirection": "column",
                      "flexWrap": undefined,
                      "justifyContent": undefined,
                    }
                  }
                >
                  <Container
                    className="tabAreaContainer"
                    fixedScrollbars={false}
                    orientation="row"
                  >
                    <div
                      className="msg container tabAreaContainer"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "row",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div
                        className="scrollable"
                        onWheel={[Function]}
                      >
                        <Container
                          className="tabArea"
                          fixedScrollbars={false}
                          innerRef={
                            {
                              "current": <div
                                class="msg container tabArea"
                                style="flex-direction: row;"
                              >
                                <div
                                  class="msg button tabItem selected"
                                  draggable="true"
                                  id="sessions"
                                  role="button"
                                  tabindex="-1"
                                >
                                  <div
                                    class="msg icon"
                                    data-tooltip="inherit"
                                    style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="inherit"
                                  >
                                    GUI Console
                                  </label>
                                </div>
                              </div>,
                            }
                          }
                          onDragOver={[Function]}
                          onDrop={[Function]}
                          orientation="row"
                        >
                          <div
                            className="msg container tabArea"
                            onDragOver={[Function]}
                            onDrop={[Function]}
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "row",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Button
                              className="tabItem selected"
                              draggable={true}
                              focusOnClick={false}
                              id="sessions"
                              key="sessions"
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onDragEnter={[Function]}
                              onDrop={[Function]}
                              tabIndex={-1}
                            >
                              <div
                                className="msg button tabItem selected"
                                draggable={true}
                                id="sessions"
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onDragEnter={[Function]}
                                onDragLeave={[Function]}
                                onDragOver={[Function]}
                                onDragStart={[Function]}
                                onDrop={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  {
                                    "flexDirection": undefined,
                                  }
                                }
                                tabIndex={-1}
                              >
                                <Icon
                                  data-tooltip="inherit"
                                  disabled={false}
                                  src="module-shell.svg"
                                >
                                  <div
                                    className="msg icon"
                                    data-tooltip="inherit"
                                    style={
                                      {
                                        "WebkitMaskImage": "url("module-shell.svg")",
                                        "backgroundColor": undefined,
                                        "height": undefined,
                                        "maskComposite": "subtract",
                                        "maskImage": "url("module-shell.svg")",
                                        "maskSize": "100% 100%",
                                        "width": undefined,
                                      }
                                    }
                                  />
                                </Icon>
                                <Label
                                  data-tooltip="inherit"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="inherit"
                                    style={{}}
                                  >
                                    GUI Console
                                  </label>
                                </Label>
                              </div>
                            </Button>
                          </div>
                        </Container>
                        <div
                          className="scrollbar"
                        >
                          <div
                            className="slider"
                            onPointerDown={[Function]}
                            onPointerMove={[Function]}
                            onPointerUp={[Function]}
                          />
                        </div>
                      </div>
                    </div>
                  </Container>
                  <Container
                    className="tabContent"
                    innerRef={
                      {
                        "current": <div
                          class="msg container fixedScrollbar tabContent"
                          style="flex-direction: column;"
                        >
                          <div />
                        </div>,
                      }
                    }
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar tabContent"
                      onDragEnter={[Function]}
                      onDragLeave={[Function]}
                      onDragOver={[Function]}
                      onDrop={[Function]}
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div />
                    </div>
                  </Container>
                </div>
              </Container>
            </Tabview>
          </div>
        </Container>
      </ShellModule>
      <DialogHost>
        <MrsAuthDialog
          key="mrsAuthDialog"
        />
        <ValueEditDialog
          key="promptDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "begin": [],
                "end": [
                  <Button
                    caption="OK"
                    disabled={false}
                    id="ok"
                    onClick={[Function]}
                  />,
                  <Button
                    caption="Cancel"
                    id="cancel"
                    onClick={[Function]}
                  />,
                ],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={391}
                />
                <Label />
              </g>
            }
            className="msg valueEditDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Grid
                columnGap={16}
                columns={8}
                id="contentGrid"
                rowGap={16}
              />
            }
            id=""
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              id=""
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
          <Menu
            onItemClick={[Function]}
            orientation="column"
            placement="right-start"
          />
        </ValueEditDialog>
        <ConfirmDialog
          key="confirmDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "end": [],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={278}
                />
                <Label>
                  Confirm
                </Label>
              </g>
            }
            className="msg confirmDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Container
                orientation="column"
              >
                
                <Container
                  className="description"
                  orientation="column"
                />
              </Container>
            }
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
        </ConfirmDialog>
        <MdsHWClusterDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWClusterDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWClusterDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWClusterDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWClusterDialog>
        <MdsHWLoadDataDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWLoadDataDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWLoadDataDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWLoadDataDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWLoadDataDialog>
        <MdsEndpointDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsEndpointDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsEndpointDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsEndpointDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsEndpointDialog>
      </DialogHost>
    </div>
  </Container>
</ApplicationHost>
`;

exports[`Application host tests Rendering Debugger Maximized 1`] = `
<ApplicationHost
  toggleOptions={[Function]}
>
  <Container
    className="applicationHost"
    orientation="row"
  >
    <div
      className="msg container fixedScrollbar applicationHost"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "row",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <ShellModule
        innerRef={
          {
            "current": <div
              class="msg container fixedScrollbar moduleHost"
              id="shellModuleHost"
              style="flex-direction: column;"
            >
              <div
                class="msg container fixedScrollbar tabview top"
                id="shellModuleTabview"
                style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
              >
                <div
                  class="msg container tabAreaContainer"
                  style="flex-direction: row;"
                >
                  <div
                    class="scrollable"
                  >
                    <div
                      class="msg container tabArea"
                      style="flex-direction: row;"
                    >
                      <div
                        class="msg button tabItem selected"
                        draggable="true"
                        id="sessions"
                        role="button"
                        tabindex="-1"
                      >
                        <div
                          class="msg icon"
                          data-tooltip="inherit"
                          style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                        />
                        <label
                          class="msg label"
                          data-tooltip="inherit"
                        >
                          GUI Console
                        </label>
                      </div>
                    </div>
                    <div
                      class="scrollbar"
                    >
                      <div
                        class="slider"
                      />
                    </div>
                  </div>
                </div>
                <div
                  class="msg container fixedScrollbar tabContent"
                  style="flex-direction: column;"
                >
                  <div />
                </div>
              </div>
            </div>,
          }
        }
        key="gui.shell"
      >
        <Container
          className="msg moduleHost"
          id="shellModuleHost"
          innerRef={
            {
              "current": <div
                class="msg container fixedScrollbar moduleHost"
                id="shellModuleHost"
                style="flex-direction: column;"
              >
                <div
                  class="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
                >
                  <div
                    class="msg container tabAreaContainer"
                    style="flex-direction: row;"
                  >
                    <div
                      class="scrollable"
                    >
                      <div
                        class="msg container tabArea"
                        style="flex-direction: row;"
                      >
                        <div
                          class="msg button tabItem selected"
                          draggable="true"
                          id="sessions"
                          role="button"
                          tabindex="-1"
                        >
                          <div
                            class="msg icon"
                            data-tooltip="inherit"
                            style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                          />
                          <label
                            class="msg label"
                            data-tooltip="inherit"
                          >
                            GUI Console
                          </label>
                        </div>
                      </div>
                      <div
                        class="scrollbar"
                      >
                        <div
                          class="slider"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="msg container fixedScrollbar tabContent"
                    style="flex-direction: column;"
                  >
                    <div />
                  </div>
                </div>
              </div>,
            }
          }
          orientation="column"
        >
          <div
            className="msg container fixedScrollbar moduleHost"
            id="shellModuleHost"
            style={
              {
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Tabview
              canReorderTabs={true}
              hideSingleTab={false}
              id="shellModuleTabview"
              onSelectTab={[Function]}
              pages={
                [
                  {
                    "caption": "GUI Console",
                    "content": <div />,
                    "icon": "module-shell.svg",
                    "id": "sessions",
                  },
                ]
              }
              selectedId="sessions"
              showTabs={true}
              stretchTabs={false}
              tabPosition="top"
            >
              <Container
                className="msg tabview top"
                id="shellModuleTabview"
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                orientation="column"
                style={
                  {
                    "--content-separator-width": "0px",
                    "--tabItem-border-width": "0px",
                  }
                }
              >
                <div
                  className="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  onDragEnter={[Function]}
                  onDragLeave={[Function]}
                  onDragOver={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  style={
                    {
                      "--content-separator-width": "0px",
                      "--tabItem-border-width": "0px",
                      "alignItems": undefined,
                      "flexDirection": "column",
                      "flexWrap": undefined,
                      "justifyContent": undefined,
                    }
                  }
                >
                  <Container
                    className="tabAreaContainer"
                    fixedScrollbars={false}
                    orientation="row"
                  >
                    <div
                      className="msg container tabAreaContainer"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "row",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div
                        className="scrollable"
                        onWheel={[Function]}
                      >
                        <Container
                          className="tabArea"
                          fixedScrollbars={false}
                          innerRef={
                            {
                              "current": <div
                                class="msg container tabArea"
                                style="flex-direction: row;"
                              >
                                <div
                                  class="msg button tabItem selected"
                                  draggable="true"
                                  id="sessions"
                                  role="button"
                                  tabindex="-1"
                                >
                                  <div
                                    class="msg icon"
                                    data-tooltip="inherit"
                                    style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="inherit"
                                  >
                                    GUI Console
                                  </label>
                                </div>
                              </div>,
                            }
                          }
                          onDragOver={[Function]}
                          onDrop={[Function]}
                          orientation="row"
                        >
                          <div
                            className="msg container tabArea"
                            onDragOver={[Function]}
                            onDrop={[Function]}
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "row",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Button
                              className="tabItem selected"
                              draggable={true}
                              focusOnClick={false}
                              id="sessions"
                              key="sessions"
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onDragEnter={[Function]}
                              onDrop={[Function]}
                              tabIndex={-1}
                            >
                              <div
                                className="msg button tabItem selected"
                                draggable={true}
                                id="sessions"
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onDragEnter={[Function]}
                                onDragLeave={[Function]}
                                onDragOver={[Function]}
                                onDragStart={[Function]}
                                onDrop={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  {
                                    "flexDirection": undefined,
                                  }
                                }
                                tabIndex={-1}
                              >
                                <Icon
                                  data-tooltip="inherit"
                                  disabled={false}
                                  src="module-shell.svg"
                                >
                                  <div
                                    className="msg icon"
                                    data-tooltip="inherit"
                                    style={
                                      {
                                        "WebkitMaskImage": "url("module-shell.svg")",
                                        "backgroundColor": undefined,
                                        "height": undefined,
                                        "maskComposite": "subtract",
                                        "maskImage": "url("module-shell.svg")",
                                        "maskSize": "100% 100%",
                                        "width": undefined,
                                      }
                                    }
                                  />
                                </Icon>
                                <Label
                                  data-tooltip="inherit"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="inherit"
                                    style={{}}
                                  >
                                    GUI Console
                                  </label>
                                </Label>
                              </div>
                            </Button>
                          </div>
                        </Container>
                        <div
                          className="scrollbar"
                        >
                          <div
                            className="slider"
                            onPointerDown={[Function]}
                            onPointerMove={[Function]}
                            onPointerUp={[Function]}
                          />
                        </div>
                      </div>
                    </div>
                  </Container>
                  <Container
                    className="tabContent"
                    innerRef={
                      {
                        "current": <div
                          class="msg container fixedScrollbar tabContent"
                          style="flex-direction: column;"
                        >
                          <div />
                        </div>,
                      }
                    }
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar tabContent"
                      onDragEnter={[Function]}
                      onDragLeave={[Function]}
                      onDragOver={[Function]}
                      onDrop={[Function]}
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div />
                    </div>
                  </Container>
                </div>
              </Container>
            </Tabview>
          </div>
        </Container>
      </ShellModule>
      <DialogHost>
        <MrsAuthDialog
          key="mrsAuthDialog"
        />
        <ValueEditDialog
          key="promptDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "begin": [],
                "end": [
                  <Button
                    caption="OK"
                    disabled={false}
                    id="ok"
                    onClick={[Function]}
                  />,
                  <Button
                    caption="Cancel"
                    id="cancel"
                    onClick={[Function]}
                  />,
                ],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={391}
                />
                <Label />
              </g>
            }
            className="msg valueEditDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Grid
                columnGap={16}
                columns={8}
                id="contentGrid"
                rowGap={16}
              />
            }
            id=""
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              id=""
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
          <Menu
            onItemClick={[Function]}
            orientation="column"
            placement="right-start"
          />
        </ValueEditDialog>
        <ConfirmDialog
          key="confirmDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "end": [],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={278}
                />
                <Label>
                  Confirm
                </Label>
              </g>
            }
            className="msg confirmDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Container
                orientation="column"
              >
                
                <Container
                  className="description"
                  orientation="column"
                />
              </Container>
            }
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
        </ConfirmDialog>
        <MdsHWClusterDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWClusterDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWClusterDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWClusterDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWClusterDialog>
        <MdsHWLoadDataDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWLoadDataDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWLoadDataDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWLoadDataDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWLoadDataDialog>
        <MdsEndpointDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsEndpointDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsEndpointDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsEndpointDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsEndpointDialog>
      </DialogHost>
    </div>
  </Container>
</ApplicationHost>
`;

exports[`Application host tests Rendering Debugger Normal 1`] = `
<ApplicationHost
  toggleOptions={[Function]}
>
  <Container
    className="applicationHost"
    orientation="row"
  >
    <div
      className="msg container fixedScrollbar applicationHost"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "row",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <ShellModule
        innerRef={
          {
            "current": <div
              class="msg container fixedScrollbar moduleHost"
              id="shellModuleHost"
              style="flex-direction: column;"
            >
              <div
                class="msg container fixedScrollbar tabview top"
                id="shellModuleTabview"
                style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
              >
                <div
                  class="msg container tabAreaContainer"
                  style="flex-direction: row;"
                >
                  <div
                    class="scrollable"
                  >
                    <div
                      class="msg container tabArea"
                      style="flex-direction: row;"
                    >
                      <div
                        class="msg button tabItem selected"
                        draggable="true"
                        id="sessions"
                        role="button"
                        tabindex="-1"
                      >
                        <div
                          class="msg icon"
                          data-tooltip="inherit"
                          style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                        />
                        <label
                          class="msg label"
                          data-tooltip="inherit"
                        >
                          GUI Console
                        </label>
                      </div>
                    </div>
                    <div
                      class="scrollbar"
                    >
                      <div
                        class="slider"
                      />
                    </div>
                  </div>
                </div>
                <div
                  class="msg container fixedScrollbar tabContent"
                  style="flex-direction: column;"
                >
                  <div />
                </div>
              </div>
            </div>,
          }
        }
        key="gui.shell"
      >
        <Container
          className="msg moduleHost"
          id="shellModuleHost"
          innerRef={
            {
              "current": <div
                class="msg container fixedScrollbar moduleHost"
                id="shellModuleHost"
                style="flex-direction: column;"
              >
                <div
                  class="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
                >
                  <div
                    class="msg container tabAreaContainer"
                    style="flex-direction: row;"
                  >
                    <div
                      class="scrollable"
                    >
                      <div
                        class="msg container tabArea"
                        style="flex-direction: row;"
                      >
                        <div
                          class="msg button tabItem selected"
                          draggable="true"
                          id="sessions"
                          role="button"
                          tabindex="-1"
                        >
                          <div
                            class="msg icon"
                            data-tooltip="inherit"
                            style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                          />
                          <label
                            class="msg label"
                            data-tooltip="inherit"
                          >
                            GUI Console
                          </label>
                        </div>
                      </div>
                      <div
                        class="scrollbar"
                      >
                        <div
                          class="slider"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="msg container fixedScrollbar tabContent"
                    style="flex-direction: column;"
                  >
                    <div />
                  </div>
                </div>
              </div>,
            }
          }
          orientation="column"
        >
          <div
            className="msg container fixedScrollbar moduleHost"
            id="shellModuleHost"
            style={
              {
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Tabview
              canReorderTabs={true}
              hideSingleTab={false}
              id="shellModuleTabview"
              onSelectTab={[Function]}
              pages={
                [
                  {
                    "caption": "GUI Console",
                    "content": <div />,
                    "icon": "module-shell.svg",
                    "id": "sessions",
                  },
                ]
              }
              selectedId="sessions"
              showTabs={true}
              stretchTabs={false}
              tabPosition="top"
            >
              <Container
                className="msg tabview top"
                id="shellModuleTabview"
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                orientation="column"
                style={
                  {
                    "--content-separator-width": "0px",
                    "--tabItem-border-width": "0px",
                  }
                }
              >
                <div
                  className="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  onDragEnter={[Function]}
                  onDragLeave={[Function]}
                  onDragOver={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  style={
                    {
                      "--content-separator-width": "0px",
                      "--tabItem-border-width": "0px",
                      "alignItems": undefined,
                      "flexDirection": "column",
                      "flexWrap": undefined,
                      "justifyContent": undefined,
                    }
                  }
                >
                  <Container
                    className="tabAreaContainer"
                    fixedScrollbars={false}
                    orientation="row"
                  >
                    <div
                      className="msg container tabAreaContainer"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "row",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div
                        className="scrollable"
                        onWheel={[Function]}
                      >
                        <Container
                          className="tabArea"
                          fixedScrollbars={false}
                          innerRef={
                            {
                              "current": <div
                                class="msg container tabArea"
                                style="flex-direction: row;"
                              >
                                <div
                                  class="msg button tabItem selected"
                                  draggable="true"
                                  id="sessions"
                                  role="button"
                                  tabindex="-1"
                                >
                                  <div
                                    class="msg icon"
                                    data-tooltip="inherit"
                                    style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="inherit"
                                  >
                                    GUI Console
                                  </label>
                                </div>
                              </div>,
                            }
                          }
                          onDragOver={[Function]}
                          onDrop={[Function]}
                          orientation="row"
                        >
                          <div
                            className="msg container tabArea"
                            onDragOver={[Function]}
                            onDrop={[Function]}
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "row",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Button
                              className="tabItem selected"
                              draggable={true}
                              focusOnClick={false}
                              id="sessions"
                              key="sessions"
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onDragEnter={[Function]}
                              onDrop={[Function]}
                              tabIndex={-1}
                            >
                              <div
                                className="msg button tabItem selected"
                                draggable={true}
                                id="sessions"
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onDragEnter={[Function]}
                                onDragLeave={[Function]}
                                onDragOver={[Function]}
                                onDragStart={[Function]}
                                onDrop={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  {
                                    "flexDirection": undefined,
                                  }
                                }
                                tabIndex={-1}
                              >
                                <Icon
                                  data-tooltip="inherit"
                                  disabled={false}
                                  src="module-shell.svg"
                                >
                                  <div
                                    className="msg icon"
                                    data-tooltip="inherit"
                                    style={
                                      {
                                        "WebkitMaskImage": "url("module-shell.svg")",
                                        "backgroundColor": undefined,
                                        "height": undefined,
                                        "maskComposite": "subtract",
                                        "maskImage": "url("module-shell.svg")",
                                        "maskSize": "100% 100%",
                                        "width": undefined,
                                      }
                                    }
                                  />
                                </Icon>
                                <Label
                                  data-tooltip="inherit"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="inherit"
                                    style={{}}
                                  >
                                    GUI Console
                                  </label>
                                </Label>
                              </div>
                            </Button>
                          </div>
                        </Container>
                        <div
                          className="scrollbar"
                        >
                          <div
                            className="slider"
                            onPointerDown={[Function]}
                            onPointerMove={[Function]}
                            onPointerUp={[Function]}
                          />
                        </div>
                      </div>
                    </div>
                  </Container>
                  <Container
                    className="tabContent"
                    innerRef={
                      {
                        "current": <div
                          class="msg container fixedScrollbar tabContent"
                          style="flex-direction: column;"
                        >
                          <div />
                        </div>,
                      }
                    }
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar tabContent"
                      onDragEnter={[Function]}
                      onDragLeave={[Function]}
                      onDragOver={[Function]}
                      onDrop={[Function]}
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div />
                    </div>
                  </Container>
                </div>
              </Container>
            </Tabview>
          </div>
        </Container>
      </ShellModule>
      <DialogHost>
        <MrsAuthDialog
          key="mrsAuthDialog"
        />
        <ValueEditDialog
          key="promptDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "begin": [],
                "end": [
                  <Button
                    caption="OK"
                    disabled={false}
                    id="ok"
                    onClick={[Function]}
                  />,
                  <Button
                    caption="Cancel"
                    id="cancel"
                    onClick={[Function]}
                  />,
                ],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={391}
                />
                <Label />
              </g>
            }
            className="msg valueEditDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Grid
                columnGap={16}
                columns={8}
                id="contentGrid"
                rowGap={16}
              />
            }
            id=""
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              id=""
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
          <Menu
            onItemClick={[Function]}
            orientation="column"
            placement="right-start"
          />
        </ValueEditDialog>
        <ConfirmDialog
          key="confirmDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "end": [],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={278}
                />
                <Label>
                  Confirm
                </Label>
              </g>
            }
            className="msg confirmDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Container
                orientation="column"
              >
                
                <Container
                  className="description"
                  orientation="column"
                />
              </Container>
            }
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
        </ConfirmDialog>
        <MdsHWClusterDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWClusterDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWClusterDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWClusterDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWClusterDialog>
        <MdsHWLoadDataDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWLoadDataDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWLoadDataDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWLoadDataDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWLoadDataDialog>
        <MdsEndpointDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsEndpointDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsEndpointDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsEndpointDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsEndpointDialog>
      </DialogHost>
    </div>
  </Container>
</ApplicationHost>
`;

exports[`Application host tests Rendering Preferences 1`] = `
<ApplicationHost
  toggleOptions={[Function]}
>
  <Container
    className="applicationHost"
    orientation="row"
  >
    <div
      className="msg container fixedScrollbar applicationHost"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "row",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <ShellModule
        innerRef={
          {
            "current": <div
              class="msg container fixedScrollbar moduleHost"
              id="shellModuleHost"
              style="flex-direction: column;"
            >
              <div
                class="msg container fixedScrollbar tabview top"
                id="shellModuleTabview"
                style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
              >
                <div
                  class="msg container tabAreaContainer"
                  style="flex-direction: row;"
                >
                  <div
                    class="scrollable"
                  >
                    <div
                      class="msg container tabArea"
                      style="flex-direction: row;"
                    >
                      <div
                        class="msg button tabItem selected"
                        draggable="true"
                        id="sessions"
                        role="button"
                        tabindex="-1"
                      >
                        <div
                          class="msg icon"
                          data-tooltip="inherit"
                          style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                        />
                        <label
                          class="msg label"
                          data-tooltip="inherit"
                        >
                          GUI Console
                        </label>
                      </div>
                    </div>
                    <div
                      class="scrollbar"
                    >
                      <div
                        class="slider"
                      />
                    </div>
                  </div>
                </div>
                <div
                  class="msg container fixedScrollbar tabContent"
                  style="flex-direction: column;"
                >
                  <div />
                </div>
              </div>
            </div>,
          }
        }
        key="gui.shell"
      >
        <Container
          className="msg moduleHost"
          id="shellModuleHost"
          innerRef={
            {
              "current": <div
                class="msg container fixedScrollbar moduleHost"
                id="shellModuleHost"
                style="flex-direction: column;"
              >
                <div
                  class="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  style="flex-direction: column; --tabItem-border-width: 0px; --content-separator-width: 0px;"
                >
                  <div
                    class="msg container tabAreaContainer"
                    style="flex-direction: row;"
                  >
                    <div
                      class="scrollable"
                    >
                      <div
                        class="msg container tabArea"
                        style="flex-direction: row;"
                      >
                        <div
                          class="msg button tabItem selected"
                          draggable="true"
                          id="sessions"
                          role="button"
                          tabindex="-1"
                        >
                          <div
                            class="msg icon"
                            data-tooltip="inherit"
                            style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                          />
                          <label
                            class="msg label"
                            data-tooltip="inherit"
                          >
                            GUI Console
                          </label>
                        </div>
                      </div>
                      <div
                        class="scrollbar"
                      >
                        <div
                          class="slider"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    class="msg container fixedScrollbar tabContent"
                    style="flex-direction: column;"
                  >
                    <div />
                  </div>
                </div>
              </div>,
            }
          }
          orientation="column"
        >
          <div
            className="msg container fixedScrollbar moduleHost"
            id="shellModuleHost"
            style={
              {
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Tabview
              canReorderTabs={true}
              hideSingleTab={false}
              id="shellModuleTabview"
              onSelectTab={[Function]}
              pages={
                [
                  {
                    "caption": "GUI Console",
                    "content": <div />,
                    "icon": "module-shell.svg",
                    "id": "sessions",
                  },
                ]
              }
              selectedId="sessions"
              showTabs={true}
              stretchTabs={false}
              tabPosition="top"
            >
              <Container
                className="msg tabview top"
                id="shellModuleTabview"
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                orientation="column"
                style={
                  {
                    "--content-separator-width": "0px",
                    "--tabItem-border-width": "0px",
                  }
                }
              >
                <div
                  className="msg container fixedScrollbar tabview top"
                  id="shellModuleTabview"
                  onDragEnter={[Function]}
                  onDragLeave={[Function]}
                  onDragOver={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  style={
                    {
                      "--content-separator-width": "0px",
                      "--tabItem-border-width": "0px",
                      "alignItems": undefined,
                      "flexDirection": "column",
                      "flexWrap": undefined,
                      "justifyContent": undefined,
                    }
                  }
                >
                  <Container
                    className="tabAreaContainer"
                    fixedScrollbars={false}
                    orientation="row"
                  >
                    <div
                      className="msg container tabAreaContainer"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "row",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div
                        className="scrollable"
                        onWheel={[Function]}
                      >
                        <Container
                          className="tabArea"
                          fixedScrollbars={false}
                          innerRef={
                            {
                              "current": <div
                                class="msg container tabArea"
                                style="flex-direction: row;"
                              >
                                <div
                                  class="msg button tabItem selected"
                                  draggable="true"
                                  id="sessions"
                                  role="button"
                                  tabindex="-1"
                                >
                                  <div
                                    class="msg icon"
                                    data-tooltip="inherit"
                                    style="mask-image: url("module-shell.svg"); mask-size: 100% 100%; mask-composite: subtract;"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="inherit"
                                  >
                                    GUI Console
                                  </label>
                                </div>
                              </div>,
                            }
                          }
                          onDragOver={[Function]}
                          onDrop={[Function]}
                          orientation="row"
                        >
                          <div
                            className="msg container tabArea"
                            onDragOver={[Function]}
                            onDrop={[Function]}
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "row",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Button
                              className="tabItem selected"
                              draggable={true}
                              focusOnClick={false}
                              id="sessions"
                              key="sessions"
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onDragEnter={[Function]}
                              onDrop={[Function]}
                              tabIndex={-1}
                            >
                              <div
                                className="msg button tabItem selected"
                                draggable={true}
                                id="sessions"
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onDragEnter={[Function]}
                                onDragLeave={[Function]}
                                onDragOver={[Function]}
                                onDragStart={[Function]}
                                onDrop={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  {
                                    "flexDirection": undefined,
                                  }
                                }
                                tabIndex={-1}
                              >
                                <Icon
                                  data-tooltip="inherit"
                                  disabled={false}
                                  src="module-shell.svg"
                                >
                                  <div
                                    className="msg icon"
                                    data-tooltip="inherit"
                                    style={
                                      {
                                        "WebkitMaskImage": "url("module-shell.svg")",
                                        "backgroundColor": undefined,
                                        "height": undefined,
                                        "maskComposite": "subtract",
                                        "maskImage": "url("module-shell.svg")",
                                        "maskSize": "100% 100%",
                                        "width": undefined,
                                      }
                                    }
                                  />
                                </Icon>
                                <Label
                                  data-tooltip="inherit"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="inherit"
                                    style={{}}
                                  >
                                    GUI Console
                                  </label>
                                </Label>
                              </div>
                            </Button>
                          </div>
                        </Container>
                        <div
                          className="scrollbar"
                        >
                          <div
                            className="slider"
                            onPointerDown={[Function]}
                            onPointerMove={[Function]}
                            onPointerUp={[Function]}
                          />
                        </div>
                      </div>
                    </div>
                  </Container>
                  <Container
                    className="tabContent"
                    innerRef={
                      {
                        "current": <div
                          class="msg container fixedScrollbar tabContent"
                          style="flex-direction: column;"
                        >
                          <div />
                        </div>,
                      }
                    }
                    onDragEnter={[Function]}
                    onDragLeave={[Function]}
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar tabContent"
                      onDragEnter={[Function]}
                      onDragLeave={[Function]}
                      onDragOver={[Function]}
                      onDrop={[Function]}
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div />
                    </div>
                  </Container>
                </div>
              </Container>
            </Tabview>
          </div>
        </Container>
      </ShellModule>
      <DialogHost>
        <MrsAuthDialog
          key="mrsAuthDialog"
        />
        <ValueEditDialog
          key="promptDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "begin": [],
                "end": [
                  <Button
                    caption="OK"
                    disabled={false}
                    id="ok"
                    onClick={[Function]}
                  />,
                  <Button
                    caption="Cancel"
                    id="cancel"
                    onClick={[Function]}
                  />,
                ],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={391}
                />
                <Label />
              </g>
            }
            className="msg valueEditDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Grid
                columnGap={16}
                columns={8}
                id="contentGrid"
                rowGap={16}
              />
            }
            id=""
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              id=""
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
          <Menu
            onItemClick={[Function]}
            orientation="column"
            placement="right-start"
          />
        </ValueEditDialog>
        <ConfirmDialog
          key="confirmDialog"
          onClose={[Function]}
        >
          <Dialog
            actions={
              {
                "end": [],
              }
            }
            caption={
              <g>
                <Icon
                  disabled={false}
                  src={278}
                />
                <Label>
                  Confirm
                </Label>
              </g>
            }
            className="msg confirmDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Container
                orientation="column"
              >
                
                <Container
                  className="description"
                  orientation="column"
                />
              </Container>
            }
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
        </ConfirmDialog>
        <MdsHWClusterDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWClusterDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWClusterDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWClusterDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWClusterDialog>
        <MdsHWLoadDataDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsHWLoadDataDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsHWLoadDataDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsHWLoadDataDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsHWLoadDataDialog>
        <MdsEndpointDialog
          onClose={[Function]}
        >
          <ValueEditDialog
            id="mdsEndpointDialog"
            onClose={[Function]}
            onValidate={[Function]}
          >
            <Dialog
              actions={
                {
                  "begin": [],
                  "end": [
                    <Button
                      caption="OK"
                      disabled={false}
                      id="ok"
                      onClick={[Function]}
                    />,
                    <Button
                      caption="Cancel"
                      id="cancel"
                      onClick={[Function]}
                    />,
                  ],
                }
              }
              caption={
                <g>
                  <Icon
                    disabled={false}
                    src={391}
                  />
                  <Label />
                </g>
              }
              className="msg valueEditDialog"
              container={
                <body
                  theme="dark"
                />
              }
              content={
                <Grid
                  columnGap={16}
                  columns={8}
                  id="contentGrid"
                  rowGap={16}
                />
              }
              id="mdsEndpointDialog"
              onClose={[Function]}
            >
              <Portal
                container={
                  <body
                    theme="dark"
                  />
                }
                id="mdsEndpointDialog"
                onClose={[Function]}
                onOpen={[Function]}
              />
            </Dialog>
            <Menu
              onItemClick={[Function]}
              orientation="column"
              placement="right-start"
            />
          </ValueEditDialog>
        </MdsEndpointDialog>
      </DialogHost>
    </div>
  </Container>
</ApplicationHost>
`;

exports[`Application host tests Standard Rendering 1`] = `
<Container
  className="applicationHost"
  orientation="row"
>
  <DialogHost />
</Container>
`;
