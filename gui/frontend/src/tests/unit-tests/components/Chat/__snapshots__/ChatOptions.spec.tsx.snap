// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatOptions Standard Rendering (snapshot) 1`] = `
<ChatOptions
  onAction={[MockFunction]}
  onChatOptionsStateChange={[MockFunction]}
  savedState={
    {
      "chatOptionsExpanded": true,
      "chatOptionsWidth": 300,
      "options": {},
    }
  }
>
  <Container
    className="msg chatOptionsPanel"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar chatOptionsPanel"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Container
        className="header"
        crossAlignment="center"
        mainAlignment="flex-start"
        orientation="column"
      >
        <div
          className="msg container fixedScrollbar header"
          style={
            {
              "alignItems": "center",
              "flexDirection": "column",
              "flexWrap": undefined,
              "justifyContent": "flex-start",
            }
          }
        >
          <Container
            className="title"
            crossAlignment="center"
            mainAlignment="stretch"
            orientation="row"
          >
            <div
              className="msg container fixedScrollbar title"
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "flexWrap": undefined,
                  "justifyContent": "stretch",
                }
              }
            >
              <Icon
                disabled={false}
                src="chatOptions.svg"
              >
                <div
                  className="msg icon"
                  style={
                    {
                      "WebkitMaskImage": "url("chatOptions.svg")",
                      "backgroundColor": undefined,
                      "height": undefined,
                      "maskComposite": undefined,
                      "maskImage": "url("chatOptions.svg")",
                      "maskSize": undefined,
                      "width": undefined,
                    }
                  }
                />
              </Icon>
              <Label>
                <label
                  className="msg label"
                  data-tooltip="expand"
                  style={{}}
                >
                  HeatWave Chat
                </label>
              </Label>
            </div>
          </Container>
          <Label>
            <label
              className="msg label"
              data-tooltip="expand"
              style={{}}
            >
              AI Profile Editor
            </label>
          </Label>
        </div>
      </Container>
      <Accordion
        onSectionExpand={[Function]}
        sectionClosedSize={16}
        sections={
          [
            {
              "caption": "Schema Scope",
              "content": [
                <Container
                  className="scopeMultiItemRow"
                  orientation="row"
                >
                  <Dropdown
                    className="scopeSchema"
                    multiSelect={false}
                    onSelect={[Function]}
                    optional={false}
                    selection="schemaDropdownAllSchemas"
                    showDescription={false}
                    withoutArrow={false}
                  >
                    <DropdownItem
                      caption="All Database Schemas"
                      id="schemaDropdownAllSchemas"
                    />
                  </Dropdown>
                </Container>,
              ],
              "dimmed": false,
              "expanded": true,
              "id": "schemaSection",
              "initialSize": 54,
              "maxSize": 44,
              "minSize": 44,
              "stretch": false,
            },
            {
              "caption": "History",
              "content": [
                <Container
                  className="scopeMultiItemRow"
                  orientation="row"
                >
                  <TreeGrid
                    columns={
                      [
                        {
                          "editable": false,
                          "field": "userMessage",
                          "formatter": [Function],
                          "title": "User",
                          "tooltip": true,
                        },
                        {
                          "editable": false,
                          "field": "chatBotMessage",
                          "formatter": [Function],
                          "title": "Chatbot",
                          "tooltip": true,
                        },
                        {
                          "editable": false,
                          "field": "chatQueryId",
                          "title": "ChatQueryId",
                          "visible": false,
                        },
                      ]
                    }
                    options={
                      {
                        "index": "param",
                        "layout": "fitDataStretch",
                        "rowHeight": 20,
                        "showHeader": true,
                      }
                    }
                    tableData={[]}
                  />
                  <Dialog
                    actions={
                      {
                        "end": [
                          <Button
                            caption="Save"
                            id="ok"
                            onClick={[Function]}
                          />,
                          <Button
                            caption="Cancel"
                            id="cancel"
                            onClick={[Function]}
                          />,
                        ],
                      }
                    }
                    caption={
                      <g>
                        <Icon
                          disabled={false}
                          src={123}
                        />
                        <Label>
                          Edit chat history
                        </Label>
                      </g>
                    }
                    className="historyEditDialog"
                    container={
                      <body
                        theme="dark"
                      />
                    }
                    content={
                      <Input
                        autoFocus={true}
                        className="historyEdit"
                        id="historyEdit"
                        multiLine={true}
                        multiLineCount={5}
                        onChange={[Function]}
                        spellCheck={true}
                      />
                    }
                    id="historyEditDialog"
                    onChatOptionsStateChange={[MockFunction]}
                    onClose={[Function]}
                  />
                </Container>,
              ],
              "dimmed": false,
              "expanded": true,
              "id": "historySection",
              "initialSize": 125,
              "maxSize": 126,
              "minSize": 125,
              "stretch": false,
            },
            {
              "caption": "Database Tables",
              "content": [
                <Container
                  className="scopeMultiItemRow"
                  orientation="column"
                >
                  <TagInput
                    className="scopeTables"
                    onRemove={[Function]}
                    removable={true}
                    tags={[]}
                  />
                  <Toggle
                    caption="Lock table list"
                    checkState={0}
                    disabled={false}
                    id="lockTableListToggle"
                    onChange={[Function]}
                    round={true}
                  />
                </Container>,
              ],
              "dimmed": false,
              "expanded": true,
              "id": "tablesSection",
              "initialSize": 40,
              "maxSize": 136,
              "minSize": 106,
              "stretch": false,
            },
            {
              "caption": "Matched Documents",
              "content": [
                <Container
                  className="scopeMultiItemRow"
                  orientation="row"
                >
                  <TreeGrid
                    columns={
                      [
                        {
                          "editable": false,
                          "field": "title",
                          "title": "Title",
                          "tooltip": true,
                        },
                        {
                          "editable": false,
                          "field": "segment",
                          "title": "Segment",
                          "tooltip": true,
                        },
                      ]
                    }
                    onFormatRow={[Function]}
                    options={
                      {
                        "index": "title",
                        "layout": "fitDataStretch",
                        "showHeader": true,
                      }
                    }
                    tableData={[]}
                  />
                </Container>,
              ],
              "dimmed": false,
              "expanded": true,
              "id": "docsSection",
              "initialSize": 120,
              "maxSize": 180,
              "minSize": 80,
              "stretch": false,
            },
            {
              "caption": "Model Options",
              "content": [
                <Container
                  className="scopeMultiItemColumn"
                  crossAlignment="stretch"
                  mainAlignment="flex-start"
                  orientation="column"
                >
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Model:"
                      className="scopeLabel"
                    />
                    <Dropdown
                      className="scopeModel"
                      multiSelect={false}
                      onSelect={[Function]}
                      optional={false}
                      selection="default"
                      showDescription={false}
                      withoutArrow={false}
                    >
                      <DropdownItem
                        caption="Default"
                        id="default"
                      />
                      <DropdownItem
                        caption="Llama 3"
                        id="llama3-8b-instruct-v1"
                      />
                      <DropdownItem
                        caption="Mistral"
                        id="mistral-7b-instruct-v1"
                      />
                      <DropdownItem
                        caption="OCI GenAI - Cohere+ (added cost)"
                        id="cohere.command-r-plus"
                      />
                      <DropdownItem
                        caption="OCI GenAI - Cohere (added cost)"
                        id="cohere.command-r-16k"
                      />
                      <DropdownItem
                        caption="OCI GenAI - Llama 3 Large (added cost)"
                        id="meta.llama-3-70b-instruct"
                      />
                    </Dropdown>
                  </Container>
                </Container>,
              ],
              "dimmed": false,
              "expanded": true,
              "id": "modelSection",
              "initialSize": 76,
              "maxSize": 76,
              "minSize": 76,
              "stretch": false,
            },
            {
              "caption": "Advanced Model Options",
              "content": [
                <Container
                  className="scopeMultiItemColumn"
                  crossAlignment="stretch"
                  mainAlignment="flex-start"
                  orientation="column"
                >
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Temperature:"
                      className="scopeLabel"
                    />
                    <Input
                      id="temperature"
                      onBlur={[Function]}
                      spellCheck={true}
                      value=""
                    />
                    <Label
                      caption="(0.0 - 5.0)"
                      className="infoLbl"
                    />
                  </Container>
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Max Tokens:"
                      className="scopeLabel"
                    />
                    <Input
                      id="maxTokens"
                      onBlur={[Function]}
                      spellCheck={true}
                      value=""
                    />
                    <Label
                      caption="(1 - 4096)"
                      className="infoLbl"
                    />
                  </Container>
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Top k:"
                      className="scopeLabel"
                    />
                    <Input
                      id="topK"
                      onBlur={[Function]}
                      spellCheck={true}
                      value=""
                    />
                    <Label
                      caption="(0 - 500)"
                      className="infoLbl"
                    />
                  </Container>
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Top p:"
                      className="scopeLabel"
                    />
                    <Input
                      id="topP"
                      onBlur={[Function]}
                      spellCheck={true}
                      value=""
                    />
                    <Label
                      caption="(0.0 - 1.0)"
                      className="infoLbl"
                    />
                  </Container>
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Repeat Penalty:"
                      className="scopeLabel"
                    />
                    <Input
                      id="repeatPenalty"
                      onBlur={[Function]}
                      spellCheck={true}
                      value=""
                    />
                    <Label
                      caption="(0.0 - 1.0)"
                      className="infoLbl"
                    />
                  </Container>
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Stop Sequences:"
                      className="scopeLabel"
                    />
                    <Input
                      id="stopSequences"
                      multiLine={true}
                      multiLineCount={2}
                      onBlur={[Function]}
                      spellCheck={true}
                      value=""
                    />
                  </Container>
                </Container>,
              ],
              "dimmed": false,
              "expanded": false,
              "id": "advancedModelSection",
              "initialSize": 190,
              "maxSize": 190,
              "minSize": 190,
              "stretch": false,
            },
            {
              "caption": "Review Generated Prompt",
              "content": [
                <Container
                  className="scopeMultiItemColumn"
                  orientation="column"
                >
                  <Input
                    className="generatedPrompt"
                    multiLine={true}
                    multiLineCount={5}
                    onChange={[Function]}
                    spellCheck={false}
                    value=""
                  />
                  <Toggle
                    caption="Capture generated prompt"
                    checkState={0}
                    disabled={false}
                    id="returnPromptToggle"
                    onChange={[Function]}
                    round={true}
                  />
                </Container>,
              ],
              "dimmed": false,
              "expanded": false,
              "id": "promptSection",
              "initialSize": 54,
              "maxSize": 200,
              "minSize": 120,
              "stretch": false,
            },
            {
              "caption": "Language Settings",
              "content": [
                <Container
                  className="scopeMultiItemColumn"
                  crossAlignment="stretch"
                  mainAlignment="flex-start"
                  orientation="column"
                >
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Translation:"
                      className="scopeLabel"
                    />
                    <Dropdown
                      className="scopeLanguage"
                      disabled={false}
                      multiSelect={false}
                      onSelect={[Function]}
                      optional={false}
                      selection="noTranslation"
                      showDescription={false}
                      withoutArrow={false}
                    >
                      <DropdownItem
                        caption="No translation"
                        id="noTranslation"
                      />
                      <DropdownItem
                        caption="English"
                        id="English"
                      />
                      <DropdownItem
                        caption="German"
                        id="German"
                      />
                      <DropdownItem
                        caption="Spanish"
                        id="Spanish"
                      />
                      <DropdownItem
                        caption="Portuguese"
                        id="Portuguese"
                      />
                      <DropdownItem
                        caption="Japanese"
                        id="Japanese"
                      />
                      <DropdownItem
                        caption="Italian"
                        id="Italian"
                      />
                    </Dropdown>
                  </Container>
                  <Container
                    className="scopeLabeledItem"
                    orientation="row"
                  >
                    <Label
                      caption="Translation Model:"
                      className="scopeLabel"
                    />
                    <Dropdown
                      className="scopeModel"
                      multiSelect={false}
                      onSelect={[Function]}
                      optional={false}
                      selection="mistral-7b-instruct-v1"
                      showDescription={false}
                      withoutArrow={false}
                    >
                      <DropdownItem
                        caption="Mistral"
                        id="mistral-7b-instruct-v1"
                      />
                    </Dropdown>
                  </Container>
                  <Toggle
                    caption="Only translate answers"
                    checkState={0}
                    disabled={false}
                    id="translateUserPromptToggle"
                    onChange={[Function]}
                    round={true}
                  />
                </Container>,
              ],
              "dimmed": false,
              "expanded": false,
              "id": "languageSection",
              "initialSize": 94,
              "maxSize": 94,
              "minSize": 94,
              "stretch": false,
            },
          ]
        }
      >
        <Container
          className="msg accordion"
          mainAlignment="flex-start"
          orientation="column"
        >
          <div
            className="msg container fixedScrollbar accordion"
            style={
              {
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": "flex-start",
              }
            }
          >
            <SplitContainer
              className="accordionContent"
              onPaneResized={[Function]}
              orientation="column"
              panes={
                [
                  {
                    "collapsed": false,
                    "content": <AccordionSection
                      caption="Schema Scope"
                      dimmed={false}
                      expanded={true}
                      id="schemaSection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemRow"
                        orientation="row"
                      >
                        <Dropdown
                          className="scopeSchema"
                          multiSelect={false}
                          onSelect={[Function]}
                          optional={false}
                          selection="schemaDropdownAllSchemas"
                          showDescription={false}
                          withoutArrow={false}
                        >
                          <DropdownItem
                            caption="All Database Schemas"
                            id="schemaDropdownAllSchemas"
                          />
                        </Dropdown>
                      </Container>
                    </AccordionSection>,
                    "id": "schemaSection",
                    "initialSize": 54,
                    "maxSize": 44,
                    "minSize": 44,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                  {
                    "collapsed": false,
                    "content": <AccordionSection
                      caption="History"
                      dimmed={false}
                      expanded={true}
                      id="historySection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemRow"
                        orientation="row"
                      >
                        <TreeGrid
                          columns={
                            [
                              {
                                "editable": false,
                                "field": "userMessage",
                                "formatter": [Function],
                                "title": "User",
                                "tooltip": true,
                              },
                              {
                                "editable": false,
                                "field": "chatBotMessage",
                                "formatter": [Function],
                                "title": "Chatbot",
                                "tooltip": true,
                              },
                              {
                                "editable": false,
                                "field": "chatQueryId",
                                "title": "ChatQueryId",
                                "visible": false,
                              },
                            ]
                          }
                          options={
                            {
                              "index": "param",
                              "layout": "fitDataStretch",
                              "rowHeight": 20,
                              "showHeader": true,
                            }
                          }
                          tableData={[]}
                        />
                        <Dialog
                          actions={
                            {
                              "end": [
                                <Button
                                  caption="Save"
                                  id="ok"
                                  onClick={[Function]}
                                />,
                                <Button
                                  caption="Cancel"
                                  id="cancel"
                                  onClick={[Function]}
                                />,
                              ],
                            }
                          }
                          caption={
                            <g>
                              <Icon
                                disabled={false}
                                src={123}
                              />
                              <Label>
                                Edit chat history
                              </Label>
                            </g>
                          }
                          className="historyEditDialog"
                          container={
                            <body
                              theme="dark"
                            />
                          }
                          content={
                            <Input
                              autoFocus={true}
                              className="historyEdit"
                              id="historyEdit"
                              multiLine={true}
                              multiLineCount={5}
                              onChange={[Function]}
                              spellCheck={true}
                            />
                          }
                          id="historyEditDialog"
                          onChatOptionsStateChange={[MockFunction]}
                          onClose={[Function]}
                        />
                      </Container>
                    </AccordionSection>,
                    "id": "historySection",
                    "initialSize": 125,
                    "maxSize": 126,
                    "minSize": 125,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                  {
                    "collapsed": false,
                    "content": <AccordionSection
                      caption="Database Tables"
                      dimmed={false}
                      expanded={true}
                      id="tablesSection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemRow"
                        orientation="column"
                      >
                        <TagInput
                          className="scopeTables"
                          onRemove={[Function]}
                          removable={true}
                          tags={[]}
                        />
                        <Toggle
                          caption="Lock table list"
                          checkState={0}
                          disabled={false}
                          id="lockTableListToggle"
                          onChange={[Function]}
                          round={true}
                        />
                      </Container>
                    </AccordionSection>,
                    "id": "tablesSection",
                    "initialSize": 40,
                    "maxSize": 136,
                    "minSize": 106,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                  {
                    "collapsed": false,
                    "content": <AccordionSection
                      caption="Matched Documents"
                      dimmed={false}
                      expanded={true}
                      id="docsSection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemRow"
                        orientation="row"
                      >
                        <TreeGrid
                          columns={
                            [
                              {
                                "editable": false,
                                "field": "title",
                                "title": "Title",
                                "tooltip": true,
                              },
                              {
                                "editable": false,
                                "field": "segment",
                                "title": "Segment",
                                "tooltip": true,
                              },
                            ]
                          }
                          onFormatRow={[Function]}
                          options={
                            {
                              "index": "title",
                              "layout": "fitDataStretch",
                              "showHeader": true,
                            }
                          }
                          tableData={[]}
                        />
                      </Container>
                    </AccordionSection>,
                    "id": "docsSection",
                    "initialSize": 120,
                    "maxSize": 180,
                    "minSize": 80,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                  {
                    "collapsed": false,
                    "content": <AccordionSection
                      caption="Model Options"
                      dimmed={false}
                      expanded={true}
                      id="modelSection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemColumn"
                        crossAlignment="stretch"
                        mainAlignment="flex-start"
                        orientation="column"
                      >
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Model:"
                            className="scopeLabel"
                          />
                          <Dropdown
                            className="scopeModel"
                            multiSelect={false}
                            onSelect={[Function]}
                            optional={false}
                            selection="default"
                            showDescription={false}
                            withoutArrow={false}
                          >
                            <DropdownItem
                              caption="Default"
                              id="default"
                            />
                            <DropdownItem
                              caption="Llama 3"
                              id="llama3-8b-instruct-v1"
                            />
                            <DropdownItem
                              caption="Mistral"
                              id="mistral-7b-instruct-v1"
                            />
                            <DropdownItem
                              caption="OCI GenAI - Cohere+ (added cost)"
                              id="cohere.command-r-plus"
                            />
                            <DropdownItem
                              caption="OCI GenAI - Cohere (added cost)"
                              id="cohere.command-r-16k"
                            />
                            <DropdownItem
                              caption="OCI GenAI - Llama 3 Large (added cost)"
                              id="meta.llama-3-70b-instruct"
                            />
                          </Dropdown>
                        </Container>
                      </Container>
                    </AccordionSection>,
                    "id": "modelSection",
                    "initialSize": 76,
                    "maxSize": 76,
                    "minSize": 76,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                  {
                    "collapsed": true,
                    "content": <AccordionSection
                      caption="Advanced Model Options"
                      dimmed={false}
                      expanded={false}
                      id="advancedModelSection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemColumn"
                        crossAlignment="stretch"
                        mainAlignment="flex-start"
                        orientation="column"
                      >
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Temperature:"
                            className="scopeLabel"
                          />
                          <Input
                            id="temperature"
                            onBlur={[Function]}
                            spellCheck={true}
                            value=""
                          />
                          <Label
                            caption="(0.0 - 5.0)"
                            className="infoLbl"
                          />
                        </Container>
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Max Tokens:"
                            className="scopeLabel"
                          />
                          <Input
                            id="maxTokens"
                            onBlur={[Function]}
                            spellCheck={true}
                            value=""
                          />
                          <Label
                            caption="(1 - 4096)"
                            className="infoLbl"
                          />
                        </Container>
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Top k:"
                            className="scopeLabel"
                          />
                          <Input
                            id="topK"
                            onBlur={[Function]}
                            spellCheck={true}
                            value=""
                          />
                          <Label
                            caption="(0 - 500)"
                            className="infoLbl"
                          />
                        </Container>
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Top p:"
                            className="scopeLabel"
                          />
                          <Input
                            id="topP"
                            onBlur={[Function]}
                            spellCheck={true}
                            value=""
                          />
                          <Label
                            caption="(0.0 - 1.0)"
                            className="infoLbl"
                          />
                        </Container>
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Repeat Penalty:"
                            className="scopeLabel"
                          />
                          <Input
                            id="repeatPenalty"
                            onBlur={[Function]}
                            spellCheck={true}
                            value=""
                          />
                          <Label
                            caption="(0.0 - 1.0)"
                            className="infoLbl"
                          />
                        </Container>
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Stop Sequences:"
                            className="scopeLabel"
                          />
                          <Input
                            id="stopSequences"
                            multiLine={true}
                            multiLineCount={2}
                            onBlur={[Function]}
                            spellCheck={true}
                            value=""
                          />
                        </Container>
                      </Container>
                    </AccordionSection>,
                    "id": "advancedModelSection",
                    "initialSize": 16,
                    "maxSize": 16,
                    "minSize": 16,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                  {
                    "collapsed": true,
                    "content": <AccordionSection
                      caption="Review Generated Prompt"
                      dimmed={false}
                      expanded={false}
                      id="promptSection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemColumn"
                        orientation="column"
                      >
                        <Input
                          className="generatedPrompt"
                          multiLine={true}
                          multiLineCount={5}
                          onChange={[Function]}
                          spellCheck={false}
                          value=""
                        />
                        <Toggle
                          caption="Capture generated prompt"
                          checkState={0}
                          disabled={false}
                          id="returnPromptToggle"
                          onChange={[Function]}
                          round={true}
                        />
                      </Container>
                    </AccordionSection>,
                    "id": "promptSection",
                    "initialSize": 16,
                    "maxSize": 16,
                    "minSize": 16,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                  {
                    "collapsed": true,
                    "content": <AccordionSection
                      caption="Language Settings"
                      dimmed={false}
                      expanded={false}
                      id="languageSection"
                      onAction={[Function]}
                      onToggleExpandState={[Function]}
                    >
                      <Container
                        className="scopeMultiItemColumn"
                        crossAlignment="stretch"
                        mainAlignment="flex-start"
                        orientation="column"
                      >
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Translation:"
                            className="scopeLabel"
                          />
                          <Dropdown
                            className="scopeLanguage"
                            disabled={false}
                            multiSelect={false}
                            onSelect={[Function]}
                            optional={false}
                            selection="noTranslation"
                            showDescription={false}
                            withoutArrow={false}
                          >
                            <DropdownItem
                              caption="No translation"
                              id="noTranslation"
                            />
                            <DropdownItem
                              caption="English"
                              id="English"
                            />
                            <DropdownItem
                              caption="German"
                              id="German"
                            />
                            <DropdownItem
                              caption="Spanish"
                              id="Spanish"
                            />
                            <DropdownItem
                              caption="Portuguese"
                              id="Portuguese"
                            />
                            <DropdownItem
                              caption="Japanese"
                              id="Japanese"
                            />
                            <DropdownItem
                              caption="Italian"
                              id="Italian"
                            />
                          </Dropdown>
                        </Container>
                        <Container
                          className="scopeLabeledItem"
                          orientation="row"
                        >
                          <Label
                            caption="Translation Model:"
                            className="scopeLabel"
                          />
                          <Dropdown
                            className="scopeModel"
                            multiSelect={false}
                            onSelect={[Function]}
                            optional={false}
                            selection="mistral-7b-instruct-v1"
                            showDescription={false}
                            withoutArrow={false}
                          >
                            <DropdownItem
                              caption="Mistral"
                              id="mistral-7b-instruct-v1"
                            />
                          </Dropdown>
                        </Container>
                        <Toggle
                          caption="Only translate answers"
                          checkState={0}
                          disabled={false}
                          id="translateUserPromptToggle"
                          onChange={[Function]}
                          round={true}
                        />
                      </Container>
                    </AccordionSection>,
                    "id": "languageSection",
                    "initialSize": 16,
                    "maxSize": 16,
                    "minSize": 16,
                    "resizable": false,
                    "snap": true,
                    "stretch": false,
                  },
                ]
              }
              splitterSize={4}
            >
              <div
                className="msg splitContainer accordionContent"
              >
                <div
                  className="sashContainer"
                >
                  <Divider
                    className="sash disabled"
                    id="schemaSectionSash"
                    key="schemaSectionSash"
                    thickness={4}
                    vertical={false}
                  >
                    <div
                      className="msg divider horizontal sash disabled"
                      id="schemaSectionSash"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        {
                          "--thickness": "4px",
                        }
                      }
                    />
                  </Divider>
                  <Divider
                    className="sash disabled"
                    id="historySectionSash"
                    key="historySectionSash"
                    thickness={4}
                    vertical={false}
                  >
                    <div
                      className="msg divider horizontal sash disabled"
                      id="historySectionSash"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        {
                          "--thickness": "4px",
                        }
                      }
                    />
                  </Divider>
                  <Divider
                    className="sash disabled"
                    id="tablesSectionSash"
                    key="tablesSectionSash"
                    thickness={4}
                    vertical={false}
                  >
                    <div
                      className="msg divider horizontal sash disabled"
                      id="tablesSectionSash"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        {
                          "--thickness": "4px",
                        }
                      }
                    />
                  </Divider>
                  <Divider
                    className="sash disabled"
                    id="docsSectionSash"
                    key="docsSectionSash"
                    thickness={4}
                    vertical={false}
                  >
                    <div
                      className="msg divider horizontal sash disabled"
                      id="docsSectionSash"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        {
                          "--thickness": "4px",
                        }
                      }
                    />
                  </Divider>
                  <Divider
                    className="sash disabled"
                    id="modelSectionSash"
                    key="modelSectionSash"
                    thickness={4}
                    vertical={false}
                  >
                    <div
                      className="msg divider horizontal sash disabled"
                      id="modelSectionSash"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        {
                          "--thickness": "4px",
                        }
                      }
                    />
                  </Divider>
                  <Divider
                    className="sash disabled"
                    id="advancedModelSectionSash"
                    key="advancedModelSectionSash"
                    thickness={4}
                    vertical={false}
                  >
                    <div
                      className="msg divider horizontal sash disabled"
                      id="advancedModelSectionSash"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        {
                          "--thickness": "4px",
                        }
                      }
                    />
                  </Divider>
                  <Divider
                    className="sash disabled"
                    id="promptSectionSash"
                    key="promptSectionSash"
                    thickness={4}
                    vertical={false}
                  >
                    <div
                      className="msg divider horizontal sash disabled"
                      id="promptSectionSash"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      style={
                        {
                          "--thickness": "4px",
                        }
                      }
                    />
                  </Divider>
                </div>
                <div
                  className="splitContentContainer"
                >
                  <Container
                    className="splitHost"
                    id="schemaSectionHost"
                    key="schemaSectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="schemaSectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="Schema Scope"
                        dimmed={false}
                        expanded={true}
                        id="schemaSection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section expanded"
                          id="schemaSection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section expanded"
                                id="schemaSection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-down"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    Schema Scope
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemRow"
                                    style="flex-direction: row;"
                                  >
                                    <div
                                      class="msg container fixedScrollbar dropdown scopeSchema"
                                      data-tooltip="inherit"
                                      style="flex-direction: row; align-items: center;"
                                      tabindex="0"
                                    >
                                      <label
                                        class="msg label ellipsis"
                                        data-tooltip="expand"
                                      >
                                        All Database Schemas
                                      </label>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section expanded"
                            id="schemaSection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={34}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-down"
                                  />
                                </Icon>
                                <Label
                                  caption="Schema Scope"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    Schema Scope
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemRow"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemRow"
                                    style={
                                      {
                                        "alignItems": undefined,
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": undefined,
                                      }
                                    }
                                  >
                                    <Dropdown
                                      className="scopeSchema"
                                      multiSelect={false}
                                      onSelect={[Function]}
                                      optional={false}
                                      selection="schemaDropdownAllSchemas"
                                      showDescription={false}
                                      withoutArrow={false}
                                    >
                                      <Container
                                        className="msg dropdown scopeSchema"
                                        crossAlignment="center"
                                        data-tooltip="inherit"
                                        innerRef={
                                          {
                                            "current": <div
                                              class="msg container fixedScrollbar dropdown scopeSchema"
                                              data-tooltip="inherit"
                                              style="flex-direction: row; align-items: center;"
                                              tabindex="0"
                                            >
                                              <label
                                                class="msg label ellipsis"
                                                data-tooltip="expand"
                                              >
                                                All Database Schemas
                                              </label>
                                            </div>,
                                          }
                                        }
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        orientation="row"
                                        tabIndex={0}
                                      >
                                        <div
                                          className="msg container fixedScrollbar dropdown scopeSchema"
                                          data-tooltip="inherit"
                                          onClick={[Function]}
                                          onKeyDown={[Function]}
                                          onfocusin={[Function]}
                                          onfocusout={[Function]}
                                          style={
                                            {
                                              "alignItems": "center",
                                              "flexDirection": "row",
                                              "flexWrap": undefined,
                                              "justifyContent": undefined,
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <Label
                                            className="ellipsis"
                                          >
                                            <label
                                              className="msg label ellipsis"
                                              data-tooltip="expand"
                                              style={{}}
                                            >
                                              All Database Schemas
                                            </label>
                                          </Label>
                                        </div>
                                      </Container>
                                      <Popup
                                        className="dropdownList"
                                        id="Popup"
                                        innerRef={
                                          {
                                            "current": null,
                                          }
                                        }
                                        onClose={[Function]}
                                        onOpen={[Function]}
                                        orientation="column"
                                        pinned={false}
                                        placement="bottom-end"
                                        showArrow={false}
                                      >
                                        <Portal
                                          className="popupPortal"
                                          id="Popup"
                                          onClose={[Function]}
                                          onOpen={[Function]}
                                        />
                                      </Popup>
                                    </Dropdown>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                  <Container
                    className="splitHost"
                    id="historySectionHost"
                    key="historySectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="historySectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="History"
                        dimmed={false}
                        expanded={true}
                        id="historySection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section expanded"
                          id="historySection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section expanded"
                                id="historySection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-down"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    History
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemRow"
                                    style="flex-direction: row;"
                                  >
                                    <div
                                      class="msg treeGrid"
                                    />
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section expanded"
                            id="historySection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={34}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-down"
                                  />
                                </Icon>
                                <Label
                                  caption="History"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    History
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemRow"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemRow"
                                    style={
                                      {
                                        "alignItems": undefined,
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": undefined,
                                      }
                                    }
                                  >
                                    <TreeGrid
                                      columns={
                                        [
                                          {
                                            "editable": false,
                                            "field": "userMessage",
                                            "formatter": [Function],
                                            "title": "User",
                                            "tooltip": true,
                                          },
                                          {
                                            "editable": false,
                                            "field": "chatBotMessage",
                                            "formatter": [Function],
                                            "title": "Chatbot",
                                            "tooltip": true,
                                          },
                                          {
                                            "editable": false,
                                            "field": "chatQueryId",
                                            "title": "ChatQueryId",
                                            "visible": false,
                                          },
                                        ]
                                      }
                                      options={
                                        {
                                          "index": "param",
                                          "layout": "fitDataStretch",
                                          "rowHeight": 20,
                                          "showHeader": true,
                                        }
                                      }
                                      tableData={[]}
                                    >
                                      <div
                                        className="msg treeGrid"
                                      />
                                    </TreeGrid>
                                    <Dialog
                                      actions={
                                        {
                                          "end": [
                                            <Button
                                              caption="Save"
                                              id="ok"
                                              onClick={[Function]}
                                            />,
                                            <Button
                                              caption="Cancel"
                                              id="cancel"
                                              onClick={[Function]}
                                            />,
                                          ],
                                        }
                                      }
                                      caption={
                                        <g>
                                          <Icon
                                            disabled={false}
                                            src={123}
                                          />
                                          <Label>
                                            Edit chat history
                                          </Label>
                                        </g>
                                      }
                                      className="historyEditDialog"
                                      container={
                                        <body
                                          theme="dark"
                                        />
                                      }
                                      content={
                                        <Input
                                          autoFocus={true}
                                          className="historyEdit"
                                          id="historyEdit"
                                          multiLine={true}
                                          multiLineCount={5}
                                          onChange={[Function]}
                                          spellCheck={true}
                                        />
                                      }
                                      id="historyEditDialog"
                                      onChatOptionsStateChange={[MockFunction]}
                                      onClose={[Function]}
                                    >
                                      <Portal
                                        container={
                                          <body
                                            theme="dark"
                                          />
                                        }
                                        id="historyEditDialog"
                                        onChatOptionsStateChange={[MockFunction]}
                                        onClose={[Function]}
                                        onOpen={[Function]}
                                      />
                                    </Dialog>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                  <Container
                    className="splitHost"
                    id="tablesSectionHost"
                    key="tablesSectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="tablesSectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="Database Tables"
                        dimmed={false}
                        expanded={true}
                        id="tablesSection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section expanded"
                          id="tablesSection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section expanded"
                                id="tablesSection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-down"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    Database Tables
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemRow"
                                    style="flex-direction: column;"
                                  >
                                    <div
                                      class="msg container fixedScrollbar tagInput scopeTables"
                                      style="flex-direction: row; flex-wrap: wrap;"
                                    />
                                    <input
                                      class="msg toggle round"
                                      id="lockTableListToggle"
                                      readonly=""
                                      type="checkbox"
                                    />
                                    <label
                                      class="msg toggle round"
                                      for="lockTableListToggle"
                                      tabindex="0"
                                    >
                                      Lock table list
                                    </label>
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section expanded"
                            id="tablesSection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={34}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-down"
                                  />
                                </Icon>
                                <Label
                                  caption="Database Tables"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    Database Tables
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemRow"
                                  orientation="column"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemRow"
                                    style={
                                      {
                                        "alignItems": undefined,
                                        "flexDirection": "column",
                                        "flexWrap": undefined,
                                        "justifyContent": undefined,
                                      }
                                    }
                                  >
                                    <TagInput
                                      className="scopeTables"
                                      onRemove={[Function]}
                                      removable={true}
                                      tags={[]}
                                    >
                                      <Container
                                        className="msg tagInput scopeTables"
                                        onDragEnter={[Function]}
                                        onDragLeave={[Function]}
                                        onDragOver={[Function]}
                                        onDragStart={[Function]}
                                        onDrop={[Function]}
                                        orientation="row"
                                        wrap="wrap"
                                      >
                                        <div
                                          className="msg container fixedScrollbar tagInput scopeTables"
                                          onDragEnter={[Function]}
                                          onDragLeave={[Function]}
                                          onDragOver={[Function]}
                                          onDragStart={[Function]}
                                          onDrop={[Function]}
                                          style={
                                            {
                                              "alignItems": undefined,
                                              "flexDirection": "row",
                                              "flexWrap": "wrap",
                                              "justifyContent": undefined,
                                            }
                                          }
                                        />
                                      </Container>
                                    </TagInput>
                                    <Toggle
                                      caption="Lock table list"
                                      checkState={0}
                                      disabled={false}
                                      id="lockTableListToggle"
                                      onChange={[Function]}
                                      round={true}
                                    >
                                      <input
                                        className="msg toggle round"
                                        id="lockTableListToggle"
                                        oninput={[Function]}
                                        readOnly={true}
                                        type="checkbox"
                                      />
                                      <label
                                        className="msg toggle round"
                                        disabled={false}
                                        htmlFor="lockTableListToggle"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        tabIndex={0}
                                      >
                                        Lock table list
                                      </label>
                                    </Toggle>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                  <Container
                    className="splitHost"
                    id="docsSectionHost"
                    key="docsSectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="docsSectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="Matched Documents"
                        dimmed={false}
                        expanded={true}
                        id="docsSection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section expanded"
                          id="docsSection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section expanded"
                                id="docsSection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-down"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    Matched Documents
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemRow"
                                    style="flex-direction: row;"
                                  >
                                    <div
                                      class="msg treeGrid"
                                    />
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section expanded"
                            id="docsSection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={34}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-down"
                                  />
                                </Icon>
                                <Label
                                  caption="Matched Documents"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    Matched Documents
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemRow"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemRow"
                                    style={
                                      {
                                        "alignItems": undefined,
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": undefined,
                                      }
                                    }
                                  >
                                    <TreeGrid
                                      columns={
                                        [
                                          {
                                            "editable": false,
                                            "field": "title",
                                            "title": "Title",
                                            "tooltip": true,
                                          },
                                          {
                                            "editable": false,
                                            "field": "segment",
                                            "title": "Segment",
                                            "tooltip": true,
                                          },
                                        ]
                                      }
                                      onFormatRow={[Function]}
                                      options={
                                        {
                                          "index": "title",
                                          "layout": "fitDataStretch",
                                          "showHeader": true,
                                        }
                                      }
                                      tableData={[]}
                                    >
                                      <div
                                        className="msg treeGrid"
                                      />
                                    </TreeGrid>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                  <Container
                    className="splitHost"
                    id="modelSectionHost"
                    key="modelSectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="modelSectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="Model Options"
                        dimmed={false}
                        expanded={true}
                        id="modelSection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section expanded"
                          id="modelSection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section expanded"
                                id="modelSection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-down"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    Model Options
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemColumn"
                                    style="flex-direction: column; justify-content: flex-start; align-items: stretch;"
                                  >
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Model:
                                      </label>
                                      <div
                                        class="msg container fixedScrollbar dropdown scopeModel"
                                        data-tooltip="inherit"
                                        style="flex-direction: row; align-items: center;"
                                        tabindex="0"
                                      >
                                        <label
                                          class="msg label ellipsis"
                                          data-tooltip="expand"
                                        >
                                          Default
                                        </label>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section expanded"
                            id="modelSection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={34}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-down"
                                  />
                                </Icon>
                                <Label
                                  caption="Model Options"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    Model Options
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemColumn"
                                  crossAlignment="stretch"
                                  mainAlignment="flex-start"
                                  orientation="column"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemColumn"
                                    style={
                                      {
                                        "alignItems": "stretch",
                                        "flexDirection": "column",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Model:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Model:
                                          </label>
                                        </Label>
                                        <Dropdown
                                          className="scopeModel"
                                          multiSelect={false}
                                          onSelect={[Function]}
                                          optional={false}
                                          selection="default"
                                          showDescription={false}
                                          withoutArrow={false}
                                        >
                                          <Container
                                            className="msg dropdown scopeModel"
                                            crossAlignment="center"
                                            data-tooltip="inherit"
                                            innerRef={
                                              {
                                                "current": <div
                                                  class="msg container fixedScrollbar dropdown scopeModel"
                                                  data-tooltip="inherit"
                                                  style="flex-direction: row; align-items: center;"
                                                  tabindex="0"
                                                >
                                                  <label
                                                    class="msg label ellipsis"
                                                    data-tooltip="expand"
                                                  >
                                                    Default
                                                  </label>
                                                </div>,
                                              }
                                            }
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            orientation="row"
                                            tabIndex={0}
                                          >
                                            <div
                                              className="msg container fixedScrollbar dropdown scopeModel"
                                              data-tooltip="inherit"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onfocusin={[Function]}
                                              onfocusout={[Function]}
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "flexDirection": "row",
                                                  "flexWrap": undefined,
                                                  "justifyContent": undefined,
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <Label
                                                className="ellipsis"
                                              >
                                                <label
                                                  className="msg label ellipsis"
                                                  data-tooltip="expand"
                                                  style={{}}
                                                >
                                                  Default
                                                </label>
                                              </Label>
                                            </div>
                                          </Container>
                                          <Popup
                                            className="dropdownList"
                                            id="Popup"
                                            innerRef={
                                              {
                                                "current": null,
                                              }
                                            }
                                            onClose={[Function]}
                                            onOpen={[Function]}
                                            orientation="column"
                                            pinned={false}
                                            placement="bottom-end"
                                            showArrow={false}
                                          >
                                            <Portal
                                              className="popupPortal"
                                              id="Popup"
                                              onClose={[Function]}
                                              onOpen={[Function]}
                                            />
                                          </Popup>
                                        </Dropdown>
                                      </div>
                                    </Container>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                  <Container
                    className="splitHost"
                    id="advancedModelSectionHost"
                    key="advancedModelSectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="advancedModelSectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="Advanced Model Options"
                        dimmed={false}
                        expanded={false}
                        id="advancedModelSection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section"
                          id="advancedModelSection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section"
                                id="advancedModelSection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-right"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    Advanced Model Options
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemColumn"
                                    style="flex-direction: column; justify-content: flex-start; align-items: stretch;"
                                  >
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Temperature:
                                      </label>
                                      <input
                                        class="msg input"
                                        id="temperature"
                                        spellcheck="true"
                                        type="text"
                                      />
                                      <label
                                        class="msg label infoLbl"
                                        data-tooltip="expand"
                                      >
                                        (0.0 - 5.0)
                                      </label>
                                    </div>
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Max Tokens:
                                      </label>
                                      <input
                                        class="msg input"
                                        id="maxTokens"
                                        spellcheck="true"
                                        type="text"
                                      />
                                      <label
                                        class="msg label infoLbl"
                                        data-tooltip="expand"
                                      >
                                        (1 - 4096)
                                      </label>
                                    </div>
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Top k:
                                      </label>
                                      <input
                                        class="msg input"
                                        id="topK"
                                        spellcheck="true"
                                        type="text"
                                      />
                                      <label
                                        class="msg label infoLbl"
                                        data-tooltip="expand"
                                      >
                                        (0 - 500)
                                      </label>
                                    </div>
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Top p:
                                      </label>
                                      <input
                                        class="msg input"
                                        id="topP"
                                        spellcheck="true"
                                        type="text"
                                      />
                                      <label
                                        class="msg label infoLbl"
                                        data-tooltip="expand"
                                      >
                                        (0.0 - 1.0)
                                      </label>
                                    </div>
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Repeat Penalty:
                                      </label>
                                      <input
                                        class="msg input"
                                        id="repeatPenalty"
                                        spellcheck="true"
                                        type="text"
                                      />
                                      <label
                                        class="msg label infoLbl"
                                        data-tooltip="expand"
                                      >
                                        (0.0 - 1.0)
                                      </label>
                                    </div>
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Stop Sequences:
                                      </label>
                                      <textarea
                                        class="msg input"
                                        id="stopSequences"
                                        rows="2"
                                        spellcheck="true"
                                        type="text"
                                      />
                                    </div>
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section"
                            id="advancedModelSection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={36}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-right"
                                  />
                                </Icon>
                                <Label
                                  caption="Advanced Model Options"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    Advanced Model Options
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemColumn"
                                  crossAlignment="stretch"
                                  mainAlignment="flex-start"
                                  orientation="column"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemColumn"
                                    style={
                                      {
                                        "alignItems": "stretch",
                                        "flexDirection": "column",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Temperature:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Temperature:
                                          </label>
                                        </Label>
                                        <Input
                                          id="temperature"
                                          onBlur={[Function]}
                                          spellCheck={true}
                                          value=""
                                        >
                                          <input
                                            className="msg input"
                                            id="temperature"
                                            onKeyDown={[Function]}
                                            onfocusout={[Function]}
                                            oninput={[Function]}
                                            spellCheck={true}
                                            style={
                                              {
                                                "textAlign": undefined,
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                        <Label
                                          caption="(0.0 - 5.0)"
                                          className="infoLbl"
                                        >
                                          <label
                                            className="msg label infoLbl"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            (0.0 - 5.0)
                                          </label>
                                        </Label>
                                      </div>
                                    </Container>
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Max Tokens:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Max Tokens:
                                          </label>
                                        </Label>
                                        <Input
                                          id="maxTokens"
                                          onBlur={[Function]}
                                          spellCheck={true}
                                          value=""
                                        >
                                          <input
                                            className="msg input"
                                            id="maxTokens"
                                            onKeyDown={[Function]}
                                            onfocusout={[Function]}
                                            oninput={[Function]}
                                            spellCheck={true}
                                            style={
                                              {
                                                "textAlign": undefined,
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                        <Label
                                          caption="(1 - 4096)"
                                          className="infoLbl"
                                        >
                                          <label
                                            className="msg label infoLbl"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            (1 - 4096)
                                          </label>
                                        </Label>
                                      </div>
                                    </Container>
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Top k:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Top k:
                                          </label>
                                        </Label>
                                        <Input
                                          id="topK"
                                          onBlur={[Function]}
                                          spellCheck={true}
                                          value=""
                                        >
                                          <input
                                            className="msg input"
                                            id="topK"
                                            onKeyDown={[Function]}
                                            onfocusout={[Function]}
                                            oninput={[Function]}
                                            spellCheck={true}
                                            style={
                                              {
                                                "textAlign": undefined,
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                        <Label
                                          caption="(0 - 500)"
                                          className="infoLbl"
                                        >
                                          <label
                                            className="msg label infoLbl"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            (0 - 500)
                                          </label>
                                        </Label>
                                      </div>
                                    </Container>
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Top p:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Top p:
                                          </label>
                                        </Label>
                                        <Input
                                          id="topP"
                                          onBlur={[Function]}
                                          spellCheck={true}
                                          value=""
                                        >
                                          <input
                                            className="msg input"
                                            id="topP"
                                            onKeyDown={[Function]}
                                            onfocusout={[Function]}
                                            oninput={[Function]}
                                            spellCheck={true}
                                            style={
                                              {
                                                "textAlign": undefined,
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                        <Label
                                          caption="(0.0 - 1.0)"
                                          className="infoLbl"
                                        >
                                          <label
                                            className="msg label infoLbl"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            (0.0 - 1.0)
                                          </label>
                                        </Label>
                                      </div>
                                    </Container>
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Repeat Penalty:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Repeat Penalty:
                                          </label>
                                        </Label>
                                        <Input
                                          id="repeatPenalty"
                                          onBlur={[Function]}
                                          spellCheck={true}
                                          value=""
                                        >
                                          <input
                                            className="msg input"
                                            id="repeatPenalty"
                                            onKeyDown={[Function]}
                                            onfocusout={[Function]}
                                            oninput={[Function]}
                                            spellCheck={true}
                                            style={
                                              {
                                                "textAlign": undefined,
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                        <Label
                                          caption="(0.0 - 1.0)"
                                          className="infoLbl"
                                        >
                                          <label
                                            className="msg label infoLbl"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            (0.0 - 1.0)
                                          </label>
                                        </Label>
                                      </div>
                                    </Container>
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Stop Sequences:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Stop Sequences:
                                          </label>
                                        </Label>
                                        <Input
                                          id="stopSequences"
                                          multiLine={true}
                                          multiLineCount={2}
                                          onBlur={[Function]}
                                          spellCheck={true}
                                          value=""
                                        >
                                          <textarea
                                            className="msg input"
                                            id="stopSequences"
                                            onKeyDown={[Function]}
                                            onfocusout={[Function]}
                                            oninput={[Function]}
                                            rows={2}
                                            spellCheck={true}
                                            style={
                                              {
                                                "textAlign": undefined,
                                              }
                                            }
                                            type="text"
                                            value=""
                                          />
                                        </Input>
                                      </div>
                                    </Container>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                  <Container
                    className="splitHost"
                    id="promptSectionHost"
                    key="promptSectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="promptSectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="Review Generated Prompt"
                        dimmed={false}
                        expanded={false}
                        id="promptSection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section"
                          id="promptSection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section"
                                id="promptSection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-right"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    Review Generated Prompt
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemColumn"
                                    style="flex-direction: column;"
                                  >
                                    <textarea
                                      class="msg input generatedPrompt"
                                      rows="5"
                                      type="text"
                                    />
                                    <input
                                      class="msg toggle round"
                                      id="returnPromptToggle"
                                      readonly=""
                                      type="checkbox"
                                    />
                                    <label
                                      class="msg toggle round"
                                      for="returnPromptToggle"
                                      tabindex="0"
                                    >
                                      Capture generated prompt
                                    </label>
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section"
                            id="promptSection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={36}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-right"
                                  />
                                </Icon>
                                <Label
                                  caption="Review Generated Prompt"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    Review Generated Prompt
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemColumn"
                                  orientation="column"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemColumn"
                                    style={
                                      {
                                        "alignItems": undefined,
                                        "flexDirection": "column",
                                        "flexWrap": undefined,
                                        "justifyContent": undefined,
                                      }
                                    }
                                  >
                                    <Input
                                      className="generatedPrompt"
                                      multiLine={true}
                                      multiLineCount={5}
                                      onChange={[Function]}
                                      spellCheck={false}
                                      value=""
                                    >
                                      <textarea
                                        className="msg input generatedPrompt"
                                        onKeyDown={[Function]}
                                        oninput={[Function]}
                                        rows={5}
                                        spellCheck={false}
                                        style={
                                          {
                                            "textAlign": undefined,
                                          }
                                        }
                                        type="text"
                                        value=""
                                      />
                                    </Input>
                                    <Toggle
                                      caption="Capture generated prompt"
                                      checkState={0}
                                      disabled={false}
                                      id="returnPromptToggle"
                                      onChange={[Function]}
                                      round={true}
                                    >
                                      <input
                                        className="msg toggle round"
                                        id="returnPromptToggle"
                                        oninput={[Function]}
                                        readOnly={true}
                                        type="checkbox"
                                      />
                                      <label
                                        className="msg toggle round"
                                        disabled={false}
                                        htmlFor="returnPromptToggle"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        tabIndex={0}
                                      >
                                        Capture generated prompt
                                      </label>
                                    </Toggle>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                  <Container
                    className="splitHost"
                    id="languageSectionHost"
                    key="languageSectionHost"
                    mainAlignment="stretch"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar splitHost"
                      id="languageSectionHost"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": "stretch",
                        }
                      }
                    >
                      <AccordionSection
                        caption="Language Settings"
                        dimmed={false}
                        expanded={false}
                        id="languageSection"
                        onAction={[Function]}
                        onToggleExpandState={[Function]}
                      >
                        <Container
                          className="msg section"
                          id="languageSection"
                          innerRef={
                            {
                              "current": <div
                                class="msg container fixedScrollbar section"
                                id="languageSection"
                                style="flex-direction: column;"
                              >
                                <div
                                  class="msg container fixedScrollbar title"
                                  style="flex-direction: row; align-items: center;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg icon codicon codicon-chevron-right"
                                  />
                                  <label
                                    class="msg label"
                                    data-tooltip="expand"
                                  >
                                    Language Settings
                                  </label>
                                  <div
                                    class="msg container fixedScrollbar actions"
                                    style="flex-direction: row; justify-content: flex-end; align-items: center;"
                                  />
                                </div>
                                <div
                                  class="msg container fixedScrollbar content"
                                  style="flex-direction: column;"
                                  tabindex="0"
                                >
                                  <div
                                    class="msg container fixedScrollbar scopeMultiItemColumn"
                                    style="flex-direction: column; justify-content: flex-start; align-items: stretch;"
                                  >
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Translation:
                                      </label>
                                      <div
                                        class="msg container fixedScrollbar dropdown scopeLanguage"
                                        data-tooltip="inherit"
                                        style="flex-direction: row; align-items: center;"
                                        tabindex="0"
                                      >
                                        <label
                                          class="msg label ellipsis"
                                          data-tooltip="expand"
                                        >
                                          No translation
                                        </label>
                                      </div>
                                    </div>
                                    <div
                                      class="msg container fixedScrollbar scopeLabeledItem"
                                      style="flex-direction: row;"
                                    >
                                      <label
                                        class="msg label scopeLabel"
                                        data-tooltip="expand"
                                      >
                                        Translation Model:
                                      </label>
                                      <div
                                        class="msg container fixedScrollbar dropdown scopeModel"
                                        data-tooltip="inherit"
                                        style="flex-direction: row; align-items: center;"
                                        tabindex="0"
                                      >
                                        <label
                                          class="msg label ellipsis"
                                          data-tooltip="expand"
                                        >
                                          Mistral
                                        </label>
                                      </div>
                                    </div>
                                    <input
                                      class="msg toggle round"
                                      id="translateUserPromptToggle"
                                      readonly=""
                                      type="checkbox"
                                    />
                                    <label
                                      class="msg toggle round"
                                      for="translateUserPromptToggle"
                                      tabindex="0"
                                    >
                                      Only translate answers
                                    </label>
                                  </div>
                                </div>
                              </div>,
                            }
                          }
                          orientation="column"
                        >
                          <div
                            className="msg container fixedScrollbar section"
                            id="languageSection"
                            style={
                              {
                                "alignItems": undefined,
                                "flexDirection": "column",
                                "flexWrap": undefined,
                                "justifyContent": undefined,
                              }
                            }
                          >
                            <Container
                              className="title"
                              crossAlignment="center"
                              onClick={[Function]}
                              onKeyPress={[Function]}
                              orientation="row"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar title"
                                onClick={[Function]}
                                onKeyPress={[Function]}
                                style={
                                  {
                                    "alignItems": "center",
                                    "flexDirection": "row",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  disabled={false}
                                  src={36}
                                >
                                  <div
                                    className="msg icon codicon codicon-chevron-right"
                                  />
                                </Icon>
                                <Label
                                  caption="Language Settings"
                                >
                                  <label
                                    className="msg label"
                                    data-tooltip="expand"
                                    style={{}}
                                  >
                                    Language Settings
                                  </label>
                                </Label>
                                <Container
                                  className="actions"
                                  crossAlignment="center"
                                  mainAlignment="flex-end"
                                  orientation="row"
                                >
                                  <div
                                    className="msg container fixedScrollbar actions"
                                    style={
                                      {
                                        "alignItems": "center",
                                        "flexDirection": "row",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-end",
                                      }
                                    }
                                  />
                                </Container>
                              </div>
                            </Container>
                            <Container
                              className="content"
                              orientation="column"
                              tabIndex={0}
                            >
                              <div
                                className="msg container fixedScrollbar content"
                                style={
                                  {
                                    "alignItems": undefined,
                                    "flexDirection": "column",
                                    "flexWrap": undefined,
                                    "justifyContent": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Container
                                  className="scopeMultiItemColumn"
                                  crossAlignment="stretch"
                                  mainAlignment="flex-start"
                                  orientation="column"
                                >
                                  <div
                                    className="msg container fixedScrollbar scopeMultiItemColumn"
                                    style={
                                      {
                                        "alignItems": "stretch",
                                        "flexDirection": "column",
                                        "flexWrap": undefined,
                                        "justifyContent": "flex-start",
                                      }
                                    }
                                  >
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Translation:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Translation:
                                          </label>
                                        </Label>
                                        <Dropdown
                                          className="scopeLanguage"
                                          disabled={false}
                                          multiSelect={false}
                                          onSelect={[Function]}
                                          optional={false}
                                          selection="noTranslation"
                                          showDescription={false}
                                          withoutArrow={false}
                                        >
                                          <Container
                                            className="msg dropdown scopeLanguage"
                                            crossAlignment="center"
                                            data-tooltip="inherit"
                                            disabled={false}
                                            innerRef={
                                              {
                                                "current": <div
                                                  class="msg container fixedScrollbar dropdown scopeLanguage"
                                                  data-tooltip="inherit"
                                                  style="flex-direction: row; align-items: center;"
                                                  tabindex="0"
                                                >
                                                  <label
                                                    class="msg label ellipsis"
                                                    data-tooltip="expand"
                                                  >
                                                    No translation
                                                  </label>
                                                </div>,
                                              }
                                            }
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            orientation="row"
                                            tabIndex={0}
                                          >
                                            <div
                                              className="msg container fixedScrollbar dropdown scopeLanguage"
                                              data-tooltip="inherit"
                                              disabled={false}
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onfocusin={[Function]}
                                              onfocusout={[Function]}
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "flexDirection": "row",
                                                  "flexWrap": undefined,
                                                  "justifyContent": undefined,
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <Label
                                                className="ellipsis"
                                              >
                                                <label
                                                  className="msg label ellipsis"
                                                  data-tooltip="expand"
                                                  style={{}}
                                                >
                                                  No translation
                                                </label>
                                              </Label>
                                            </div>
                                          </Container>
                                          <Popup
                                            className="dropdownList"
                                            id="Popup"
                                            innerRef={
                                              {
                                                "current": null,
                                              }
                                            }
                                            onClose={[Function]}
                                            onOpen={[Function]}
                                            orientation="column"
                                            pinned={false}
                                            placement="bottom-end"
                                            showArrow={false}
                                          >
                                            <Portal
                                              className="popupPortal"
                                              id="Popup"
                                              onClose={[Function]}
                                              onOpen={[Function]}
                                            />
                                          </Popup>
                                        </Dropdown>
                                      </div>
                                    </Container>
                                    <Container
                                      className="scopeLabeledItem"
                                      orientation="row"
                                    >
                                      <div
                                        className="msg container fixedScrollbar scopeLabeledItem"
                                        style={
                                          {
                                            "alignItems": undefined,
                                            "flexDirection": "row",
                                            "flexWrap": undefined,
                                            "justifyContent": undefined,
                                          }
                                        }
                                      >
                                        <Label
                                          caption="Translation Model:"
                                          className="scopeLabel"
                                        >
                                          <label
                                            className="msg label scopeLabel"
                                            data-tooltip="expand"
                                            style={{}}
                                          >
                                            Translation Model:
                                          </label>
                                        </Label>
                                        <Dropdown
                                          className="scopeModel"
                                          multiSelect={false}
                                          onSelect={[Function]}
                                          optional={false}
                                          selection="mistral-7b-instruct-v1"
                                          showDescription={false}
                                          withoutArrow={false}
                                        >
                                          <Container
                                            className="msg dropdown scopeModel"
                                            crossAlignment="center"
                                            data-tooltip="inherit"
                                            innerRef={
                                              {
                                                "current": <div
                                                  class="msg container fixedScrollbar dropdown scopeModel"
                                                  data-tooltip="inherit"
                                                  style="flex-direction: row; align-items: center;"
                                                  tabindex="0"
                                                >
                                                  <label
                                                    class="msg label ellipsis"
                                                    data-tooltip="expand"
                                                  >
                                                    Mistral
                                                  </label>
                                                </div>,
                                              }
                                            }
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            orientation="row"
                                            tabIndex={0}
                                          >
                                            <div
                                              className="msg container fixedScrollbar dropdown scopeModel"
                                              data-tooltip="inherit"
                                              onClick={[Function]}
                                              onKeyDown={[Function]}
                                              onfocusin={[Function]}
                                              onfocusout={[Function]}
                                              style={
                                                {
                                                  "alignItems": "center",
                                                  "flexDirection": "row",
                                                  "flexWrap": undefined,
                                                  "justifyContent": undefined,
                                                }
                                              }
                                              tabIndex={0}
                                            >
                                              <Label
                                                className="ellipsis"
                                              >
                                                <label
                                                  className="msg label ellipsis"
                                                  data-tooltip="expand"
                                                  style={{}}
                                                >
                                                  Mistral
                                                </label>
                                              </Label>
                                            </div>
                                          </Container>
                                          <Popup
                                            className="dropdownList"
                                            id="Popup"
                                            innerRef={
                                              {
                                                "current": null,
                                              }
                                            }
                                            onClose={[Function]}
                                            onOpen={[Function]}
                                            orientation="column"
                                            pinned={false}
                                            placement="bottom-end"
                                            showArrow={false}
                                          >
                                            <Portal
                                              className="popupPortal"
                                              id="Popup"
                                              onClose={[Function]}
                                              onOpen={[Function]}
                                            />
                                          </Popup>
                                        </Dropdown>
                                      </div>
                                    </Container>
                                    <Toggle
                                      caption="Only translate answers"
                                      checkState={0}
                                      disabled={false}
                                      id="translateUserPromptToggle"
                                      onChange={[Function]}
                                      round={true}
                                    >
                                      <input
                                        className="msg toggle round"
                                        id="translateUserPromptToggle"
                                        oninput={[Function]}
                                        readOnly={true}
                                        type="checkbox"
                                      />
                                      <label
                                        className="msg toggle round"
                                        disabled={false}
                                        htmlFor="translateUserPromptToggle"
                                        onClick={[Function]}
                                        onKeyPress={[Function]}
                                        tabIndex={0}
                                      >
                                        Only translate answers
                                      </label>
                                    </Toggle>
                                  </div>
                                </Container>
                              </div>
                            </Container>
                          </div>
                        </Container>
                      </AccordionSection>
                    </div>
                  </Container>
                </div>
              </div>
            </SplitContainer>
          </div>
        </Container>
      </Accordion>
      <Container
        className="scopeControls"
        mainAlignment="flex-end"
        orientation="row"
      >
        <div
          className="msg container fixedScrollbar scopeControls"
          style={
            {
              "alignItems": undefined,
              "flexDirection": "row",
              "flexWrap": undefined,
              "justifyContent": "flex-end",
            }
          }
        >
          <Button
            caption="Save"
            className="saveChatOptionsBtn"
            onClick={[Function]}
          >
            <div
              caption="Save"
              className="msg button saveChatOptionsBtn"
              onClick={[Function]}
              onMouseDown={[Function]}
              role="button"
              style={
                {
                  "flexDirection": undefined,
                }
              }
              tabIndex={0}
            >
              Save
            </div>
          </Button>
          <Button
            caption="Load"
            className="loadChatOptionsBtn"
            onClick={[Function]}
          >
            <div
              caption="Load"
              className="msg button loadChatOptionsBtn"
              onClick={[Function]}
              onMouseDown={[Function]}
              role="button"
              style={
                {
                  "flexDirection": undefined,
                }
              }
              tabIndex={0}
            >
              Load
            </div>
          </Button>
          <Button
            caption="Start New Chat"
            className="startNewChatBtn"
            onClick={[Function]}
          >
            <div
              caption="Start New Chat"
              className="msg button startNewChatBtn"
              onClick={[Function]}
              onMouseDown={[Function]}
              role="button"
              style={
                {
                  "flexDirection": undefined,
                }
              }
              tabIndex={0}
            >
              Start New Chat
            </div>
          </Button>
        </div>
      </Container>
    </div>
  </Container>
</ChatOptions>
`;

exports[`ChatOptions historyMessageColumnFormatter should format message without truncation 1`] = `
<div
  class="itemField"
>
  <label
    class="msg label"
    data-tooltip="expand"
  >
    Hello, this is a test message
  </label>
  <div
    class="msg icon iconOnMouseOver codicon codicon-close"
  />
</div>
`;

exports[`ChatOptions historyMessageColumnFormatter should handle empty message 1`] = `
<div
  class="itemField"
>
  <label
    class="msg label"
    data-tooltip="expand"
  />
  <div
    class="msg icon iconOnMouseOver codicon codicon-close"
  />
</div>
`;
