// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Result Tabview Tests Rendering Only Output 1`] = `
<ResultTabView
  contextId="ec123"
  hideTabs="never"
  resultSets={
    {
      "output": [
        {
          "content": "Message 1",
          "type": 0,
        },
        {
          "content": "Message 2",
          "type": 4,
        },
      ],
      "sets": [],
      "type": "resultSets",
    }
  }
  showMaximizeButton="never"
>
  <Container
    className="msg resultHost"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar resultHost"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Tabview
        canReorderTabs={true}
        className="resultTabview"
        hideSingleTab={false}
        onSelectTab={[Function]}
        pages={
          [
            {
              "caption": "Output",
              "content": <ActionOutput
                contextId="ec123"
                output={
                  [
                    {
                      "content": "Message 1",
                      "type": 0,
                    },
                    {
                      "content": "Message 2",
                      "type": 4,
                    },
                  ]
                }
                showIndexes={true}
              />,
              "id": "output",
            },
          ]
        }
        selectedId="output"
        showTabs={true}
        stretchTabs={false}
        tabPosition="top"
      >
        <Container
          className="msg tabview top resultTabview"
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDragStart={[Function]}
          onDrop={[Function]}
          orientation="column"
          style={
            {
              "--content-separator-width": "0px",
              "--tabItem-border-width": "0px",
            }
          }
        >
          <div
            className="msg container fixedScrollbar tabview top resultTabview"
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            style={
              {
                "--content-separator-width": "0px",
                "--tabItem-border-width": "0px",
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Container
              className="tabAreaContainer"
              fixedScrollbars={false}
              orientation="row"
            >
              <div
                className="msg container tabAreaContainer"
                style={
                  {
                    "alignItems": undefined,
                    "flexDirection": "row",
                    "flexWrap": undefined,
                    "justifyContent": undefined,
                  }
                }
              >
                <div
                  className="scrollable"
                  onWheel={[Function]}
                >
                  <Container
                    className="tabArea"
                    fixedScrollbars={false}
                    innerRef={
                      {
                        "current": <div
                          class="msg container tabArea"
                          style="flex-direction: row;"
                        >
                          <div
                            class="msg button tabItem selected"
                            draggable="true"
                            id="output"
                            role="button"
                            tabindex="-1"
                          >
                            <label
                              class="msg label"
                              data-tooltip="inherit"
                            >
                              Output
                            </label>
                          </div>
                        </div>,
                      }
                    }
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    orientation="row"
                  >
                    <div
                      className="msg container tabArea"
                      onDragOver={[Function]}
                      onDrop={[Function]}
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "row",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <Button
                        className="tabItem selected"
                        draggable={true}
                        focusOnClick={false}
                        id="output"
                        key="output"
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDrop={[Function]}
                        tabIndex={-1}
                      >
                        <div
                          className="msg button tabItem selected"
                          draggable={true}
                          id="output"
                          onClick={[Function]}
                          onDragEnter={[Function]}
                          onDragLeave={[Function]}
                          onDragOver={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onMouseDown={[Function]}
                          role="button"
                          style={
                            {
                              "flexDirection": undefined,
                            }
                          }
                          tabIndex={-1}
                        >
                          <Label
                            data-tooltip="inherit"
                          >
                            <label
                              className="msg label"
                              data-tooltip="inherit"
                              style={{}}
                            >
                              Output
                            </label>
                          </Label>
                        </div>
                      </Button>
                    </div>
                  </Container>
                  <div
                    className="scrollbar"
                  >
                    <div
                      className="slider"
                      onPointerDown={[Function]}
                      onPointerMove={[Function]}
                      onPointerUp={[Function]}
                    />
                  </div>
                </div>
              </div>
            </Container>
            <Container
              className="content"
              innerRef={
                {
                  "current": <div
                    class="msg container fixedScrollbar content"
                    style="flex-direction: column;"
                  >
                    <div
                      class="msg button imageOnly copyButton"
                      data-tooltip="Copy result to clipboard"
                      role="button"
                      tabindex="-1"
                    >
                      <div
                        class="msg icon codicon codicon-copy"
                        data-tooltip="inherit"
                      />
                    </div>
                    <div
                      class="msg container fixedScrollbar actionOutput"
                      style="flex-direction: column;"
                    >
                      <div
                        style="display: flex; flex: 1; gap: 2px; flex-direction: row;"
                      >
                        <label
                          class="msg resultText error actionLabel"
                          style="grid-column: span 2;"
                          tabindex="-1"
                        >
                          <span
                            class=""
                          >
                            Message 1
                          </span>
                        </label>
                      </div>
                      <div
                        style="display: flex; flex: 1; gap: 2px; flex-direction: row;"
                      >
                        <label
                          class="msg resultText response actionLabel"
                          style="grid-column: span 2;"
                          tabindex="-1"
                        >
                          <span
                            class=""
                          >
                            Message 2
                          </span>
                        </label>
                      </div>
                    </div>
                  </div>,
                }
              }
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDrop={[Function]}
              orientation="column"
            >
              <div
                className="msg container fixedScrollbar content"
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDrop={[Function]}
                style={
                  {
                    "alignItems": undefined,
                    "flexDirection": "column",
                    "flexWrap": undefined,
                    "justifyContent": undefined,
                  }
                }
              >
                <ActionOutput
                  contextId="ec123"
                  output={
                    [
                      {
                        "content": "Message 1",
                        "type": 0,
                      },
                      {
                        "content": "Message 2",
                        "type": 4,
                      },
                    ]
                  }
                  showIndexes={true}
                >
                  <Button
                    className="copyButton"
                    data-tooltip="Copy result to clipboard"
                    focusOnClick={false}
                    imageOnly={true}
                    onPointerDown={[Function]}
                    tabIndex={-1}
                  >
                    <div
                      className="msg button imageOnly copyButton"
                      data-tooltip="Copy result to clipboard"
                      onMouseDown={[Function]}
                      onPointerDown={[Function]}
                      role="button"
                      style={
                        {
                          "flexDirection": undefined,
                        }
                      }
                      tabIndex={-1}
                    >
                      <Icon
                        data-tooltip="inherit"
                        disabled={false}
                        src={65}
                      >
                        <div
                          className="msg icon codicon codicon-copy"
                          data-tooltip="inherit"
                        />
                      </Icon>
                    </div>
                  </Button>
                  <Container
                    className="msg actionOutput"
                    innerRef={
                      {
                        "current": <div
                          class="msg container fixedScrollbar actionOutput"
                          style="flex-direction: column;"
                        >
                          <div
                            style="display: flex; flex: 1; gap: 2px; flex-direction: row;"
                          >
                            <label
                              class="msg resultText error actionLabel"
                              style="grid-column: span 2;"
                              tabindex="-1"
                            >
                              <span
                                class=""
                              >
                                Message 1
                              </span>
                            </label>
                          </div>
                          <div
                            style="display: flex; flex: 1; gap: 2px; flex-direction: row;"
                          >
                            <label
                              class="msg resultText response actionLabel"
                              style="grid-column: span 2;"
                              tabindex="-1"
                            >
                              <span
                                class=""
                              >
                                Message 2
                              </span>
                            </label>
                          </div>
                        </div>,
                      }
                    }
                    onPointerDown={[Function]}
                    onPointerMove={[Function]}
                    onPointerUp={[Function]}
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar actionOutput"
                      onPointerDown={[Function]}
                      onPointerMove={[Function]}
                      onPointerUp={[Function]}
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <div
                        style={
                          {
                            "display": "flex",
                            "flex": "1",
                            "flexDirection": "row",
                            "gap": "2px",
                          }
                        }
                      >
                        <Label
                          caption="Message 1"
                          className="actionLabel"
                          language="ansi"
                          onClick={[Function]}
                          style={
                            {
                              "gridColumn": "span 2",
                            }
                          }
                          tabIndex={-1}
                          type={0}
                        >
                          <label
                            className="msg resultText error actionLabel"
                            onClick={[Function]}
                            style={
                              {
                                "gridColumn": "span 2",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              className=""
                              style={
                                {
                                  "backgroundColor": undefined,
                                  "color": undefined,
                                }
                              }
                            >
                              Message 1
                            </span>
                          </label>
                        </Label>
                      </div>
                      <div
                        style={
                          {
                            "display": "flex",
                            "flex": "1",
                            "flexDirection": "row",
                            "gap": "2px",
                          }
                        }
                      >
                        <Label
                          caption="Message 2"
                          className="actionLabel"
                          language="ansi"
                          onClick={[Function]}
                          style={
                            {
                              "gridColumn": "span 2",
                            }
                          }
                          tabIndex={-1}
                          type={4}
                        >
                          <label
                            className="msg resultText response actionLabel"
                            onClick={[Function]}
                            style={
                              {
                                "gridColumn": "span 2",
                              }
                            }
                            tabIndex={-1}
                          >
                            <span
                              className=""
                              style={
                                {
                                  "backgroundColor": undefined,
                                  "color": undefined,
                                }
                              }
                            >
                              Message 2
                            </span>
                          </label>
                        </Label>
                      </div>
                    </div>
                  </Container>
                </ActionOutput>
              </div>
            </Container>
          </div>
        </Container>
      </Tabview>
      <Menu
        id="actionMenu"
        onItemClick={[Function]}
        orientation="column"
        placement="bottom-start"
      >
        <Popup
          className="msg menu"
          id="actionMenu"
          onClose={[Function]}
          onKeyDown={[Function]}
          onOpen={[Function]}
          orientation="column"
          pinned={false}
          placement="bottom-start"
          showArrow={false}
        >
          <Portal
            className="popupPortal"
            id="actionMenu"
            onClose={[Function]}
            onKeyDown={[Function]}
            onOpen={[Function]}
          />
        </Popup>
      </Menu>
    </div>
  </Container>
</ResultTabView>
`;

exports[`Result Tabview Tests Standard Rendering 1`] = `
<ResultTabView
  contextId="ec123"
  hideTabs="single"
  resultSets={
    {
      "sets": [],
      "type": "resultSets",
    }
  }
  showMaximizeButton="never"
>
  <Container
    className="msg resultHost"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar resultHost"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Tabview
        canReorderTabs={true}
        className="resultTabview"
        hideSingleTab={true}
        onSelectTab={[Function]}
        pages={[]}
        selectedId="output"
        showTabs={true}
        stretchTabs={false}
        tabPosition="top"
      >
        <Container
          className="msg tabview top resultTabview"
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDragStart={[Function]}
          onDrop={[Function]}
          orientation="column"
          style={
            {
              "--content-separator-width": "0px",
              "--tabItem-border-width": "0px",
            }
          }
        >
          <div
            className="msg container fixedScrollbar tabview top resultTabview"
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            style={
              {
                "--content-separator-width": "0px",
                "--tabItem-border-width": "0px",
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Container
              className="content"
              innerRef={
                {
                  "current": <div
                    class="msg container fixedScrollbar content"
                    style="flex-direction: column;"
                  />,
                }
              }
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDrop={[Function]}
              orientation="column"
            >
              <div
                className="msg container fixedScrollbar content"
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDrop={[Function]}
                style={
                  {
                    "alignItems": undefined,
                    "flexDirection": "column",
                    "flexWrap": undefined,
                    "justifyContent": undefined,
                  }
                }
              />
            </Container>
          </div>
        </Container>
      </Tabview>
      <Menu
        id="actionMenu"
        onItemClick={[Function]}
        orientation="column"
        placement="bottom-start"
      >
        <Popup
          className="msg menu"
          id="actionMenu"
          onClose={[Function]}
          onKeyDown={[Function]}
          onOpen={[Function]}
          orientation="column"
          pinned={false}
          placement="bottom-start"
          showArrow={false}
        >
          <Portal
            className="popupPortal"
            id="actionMenu"
            onClose={[Function]}
            onKeyDown={[Function]}
            onOpen={[Function]}
          />
        </Popup>
      </Menu>
    </div>
  </Container>
</ResultTabView>
`;

exports[`Result Tabview Tests Tabview With Result Sets 1`] = `
<ResultTabView
  contextId="ec123"
  hideTabs="single"
  resultSets={
    {
      "output": [
        {
          "content": "Lorem ipsum dolor sit amet",
          "language": "ini",
          "type": 2,
        },
      ],
      "sets": [
        {
          "columns": [],
          "data": {
            "currentPage": 0,
            "executionInfo": {
              "text": "All fine",
              "type": 4,
            },
            "rows": [],
          },
          "resultId": "123",
          "sql": "select 1",
          "type": "resultSet",
        },
        {
          "columns": [],
          "data": {
            "currentPage": 10,
            "rows": [],
          },
          "resultId": "456",
          "sql": "select 2",
          "type": "resultSet",
        },
      ],
      "type": "resultSets",
    }
  }
  showMaximizeButton="tab"
>
  <Container
    className="msg resultHost"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar resultHost"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Tabview
        canReorderTabs={true}
        className="resultTabview"
        hideSingleTab={true}
        onSelectTab={[Function]}
        pages={
          [
            {
              "caption": "Output",
              "content": <ActionOutput
                contextId="ec123"
                output={
                  [
                    {
                      "content": "Lorem ipsum dolor sit amet",
                      "language": "ini",
                      "type": 2,
                    },
                  ]
                }
                showIndexes={true}
              />,
              "id": "output",
            },
            {
              "auxillary": <Button
                data-tooltip="Maximize Result Tab"
                id="toggleStateButton"
                imageOnly={true}
                onClick={[Function]}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-maximize.svg"
                />
              </Button>,
              "caption": "Result #1",
              "content": <ResultView
                onEdit={[Function]}
                resultSet={
                  {
                    "columns": [],
                    "data": {
                      "currentPage": 0,
                      "executionInfo": {
                        "text": "All fine",
                        "type": 4,
                      },
                      "rows": [],
                    },
                    "resultId": "123",
                    "sql": "select 1",
                    "type": "resultSet",
                  }
                }
              />,
              "id": "123",
            },
            {
              "auxillary": <Button
                data-tooltip="Maximize Result Tab"
                id="toggleStateButton"
                imageOnly={true}
                onClick={[Function]}
              >
                <Icon
                  data-tooltip="inherit"
                  disabled={false}
                  src="toolbar-maximize.svg"
                />
              </Button>,
              "caption": "Result #2",
              "content": <ResultView
                onEdit={[Function]}
                resultSet={
                  {
                    "columns": [],
                    "data": {
                      "currentPage": 10,
                      "rows": [],
                    },
                    "resultId": "456",
                    "sql": "select 2",
                    "type": "resultSet",
                  }
                }
              />,
              "id": "456",
            },
          ]
        }
        selectedId="123"
        showTabs={true}
        stretchTabs={false}
        tabPosition="top"
      >
        <Container
          className="msg tabview top resultTabview"
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDragStart={[Function]}
          onDrop={[Function]}
          orientation="column"
          style={
            {
              "--content-separator-width": "0px",
              "--tabItem-border-width": "0px",
            }
          }
        >
          <div
            className="msg container fixedScrollbar tabview top resultTabview"
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDragStart={[Function]}
            onDrop={[Function]}
            style={
              {
                "--content-separator-width": "0px",
                "--tabItem-border-width": "0px",
                "alignItems": undefined,
                "flexDirection": "column",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Container
              className="tabAreaContainer"
              fixedScrollbars={false}
              orientation="row"
            >
              <div
                className="msg container tabAreaContainer"
                style={
                  {
                    "alignItems": undefined,
                    "flexDirection": "row",
                    "flexWrap": undefined,
                    "justifyContent": undefined,
                  }
                }
              >
                <div
                  className="scrollable"
                  onWheel={[Function]}
                >
                  <Container
                    className="tabArea"
                    fixedScrollbars={false}
                    innerRef={
                      {
                        "current": <div
                          class="msg container tabArea"
                          style="flex-direction: row;"
                        >
                          <div
                            class="msg button tabItem"
                            draggable="true"
                            id="output"
                            role="button"
                            tabindex="-1"
                          >
                            <label
                              class="msg label"
                              data-tooltip="inherit"
                            >
                              Output
                            </label>
                          </div>
                          <div
                            class="msg button tabItem hasAuxillary selected"
                            draggable="true"
                            id="123"
                            role="button"
                            tabindex="-1"
                          >
                            <label
                              class="msg label"
                              data-tooltip="inherit"
                            >
                              Result #1
                            </label>
                            <span
                              id="auxillary"
                            >
                              <div
                                class="msg button imageOnly"
                                data-tooltip="Maximize Result Tab"
                                id="toggleStateButton"
                                role="button"
                                tabindex="0"
                              >
                                <div
                                  class="msg icon"
                                  data-tooltip="inherit"
                                  style="mask-image: url(toolbar-maximize.svg);"
                                />
                              </div>
                            </span>
                          </div>
                          <div
                            class="msg button tabItem hasAuxillary"
                            draggable="true"
                            id="456"
                            role="button"
                            tabindex="-1"
                          >
                            <label
                              class="msg label"
                              data-tooltip="inherit"
                            >
                              Result #2
                            </label>
                            <span
                              id="auxillary"
                            >
                              <div
                                class="msg button imageOnly"
                                data-tooltip="Maximize Result Tab"
                                id="toggleStateButton"
                                role="button"
                                tabindex="0"
                              >
                                <div
                                  class="msg icon"
                                  data-tooltip="inherit"
                                  style="mask-image: url(toolbar-maximize.svg);"
                                />
                              </div>
                            </span>
                          </div>
                        </div>,
                      }
                    }
                    onDragOver={[Function]}
                    onDrop={[Function]}
                    orientation="row"
                  >
                    <div
                      className="msg container tabArea"
                      onDragOver={[Function]}
                      onDrop={[Function]}
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "row",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <Button
                        className="tabItem"
                        draggable={true}
                        focusOnClick={false}
                        id="output"
                        key="output"
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDrop={[Function]}
                        tabIndex={-1}
                      >
                        <div
                          className="msg button tabItem"
                          draggable={true}
                          id="output"
                          onClick={[Function]}
                          onDragEnter={[Function]}
                          onDragLeave={[Function]}
                          onDragOver={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onMouseDown={[Function]}
                          role="button"
                          style={
                            {
                              "flexDirection": undefined,
                            }
                          }
                          tabIndex={-1}
                        >
                          <Label
                            data-tooltip="inherit"
                          >
                            <label
                              className="msg label"
                              data-tooltip="inherit"
                              style={{}}
                            >
                              Output
                            </label>
                          </Label>
                        </div>
                      </Button>
                      <Button
                        className="tabItem hasAuxillary selected"
                        draggable={true}
                        focusOnClick={false}
                        id="123"
                        key="123"
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDrop={[Function]}
                        tabIndex={-1}
                      >
                        <div
                          className="msg button tabItem hasAuxillary selected"
                          draggable={true}
                          id="123"
                          onClick={[Function]}
                          onDragEnter={[Function]}
                          onDragLeave={[Function]}
                          onDragOver={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onMouseDown={[Function]}
                          role="button"
                          style={
                            {
                              "flexDirection": undefined,
                            }
                          }
                          tabIndex={-1}
                        >
                          <Label
                            data-tooltip="inherit"
                          >
                            <label
                              className="msg label"
                              data-tooltip="inherit"
                              style={{}}
                            >
                              Result #1
                            </label>
                          </Label>
                          <span
                            id="auxillary"
                          >
                            <Button
                              data-tooltip="Maximize Result Tab"
                              id="toggleStateButton"
                              imageOnly={true}
                              onClick={[Function]}
                            >
                              <div
                                className="msg button imageOnly"
                                data-tooltip="Maximize Result Tab"
                                id="toggleStateButton"
                                onClick={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  {
                                    "flexDirection": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  data-tooltip="inherit"
                                  disabled={false}
                                  src="toolbar-maximize.svg"
                                >
                                  <div
                                    className="msg icon"
                                    data-tooltip="inherit"
                                    style={
                                      {
                                        "WebkitMaskImage": "url(toolbar-maximize.svg)",
                                        "backgroundColor": undefined,
                                        "height": undefined,
                                        "maskImage": "url(toolbar-maximize.svg)",
                                        "width": undefined,
                                      }
                                    }
                                  />
                                </Icon>
                              </div>
                            </Button>
                          </span>
                        </div>
                      </Button>
                      <Button
                        className="tabItem hasAuxillary"
                        draggable={true}
                        focusOnClick={false}
                        id="456"
                        key="456"
                        onClick={[Function]}
                        onDragEnter={[Function]}
                        onDrop={[Function]}
                        tabIndex={-1}
                      >
                        <div
                          className="msg button tabItem hasAuxillary"
                          draggable={true}
                          id="456"
                          onClick={[Function]}
                          onDragEnter={[Function]}
                          onDragLeave={[Function]}
                          onDragOver={[Function]}
                          onDragStart={[Function]}
                          onDrop={[Function]}
                          onMouseDown={[Function]}
                          role="button"
                          style={
                            {
                              "flexDirection": undefined,
                            }
                          }
                          tabIndex={-1}
                        >
                          <Label
                            data-tooltip="inherit"
                          >
                            <label
                              className="msg label"
                              data-tooltip="inherit"
                              style={{}}
                            >
                              Result #2
                            </label>
                          </Label>
                          <span
                            id="auxillary"
                          >
                            <Button
                              data-tooltip="Maximize Result Tab"
                              id="toggleStateButton"
                              imageOnly={true}
                              onClick={[Function]}
                            >
                              <div
                                className="msg button imageOnly"
                                data-tooltip="Maximize Result Tab"
                                id="toggleStateButton"
                                onClick={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                style={
                                  {
                                    "flexDirection": undefined,
                                  }
                                }
                                tabIndex={0}
                              >
                                <Icon
                                  data-tooltip="inherit"
                                  disabled={false}
                                  src="toolbar-maximize.svg"
                                >
                                  <div
                                    className="msg icon"
                                    data-tooltip="inherit"
                                    style={
                                      {
                                        "WebkitMaskImage": "url(toolbar-maximize.svg)",
                                        "backgroundColor": undefined,
                                        "height": undefined,
                                        "maskImage": "url(toolbar-maximize.svg)",
                                        "width": undefined,
                                      }
                                    }
                                  />
                                </Icon>
                              </div>
                            </Button>
                          </span>
                        </div>
                      </Button>
                    </div>
                  </Container>
                  <div
                    className="scrollbar"
                  >
                    <div
                      className="slider"
                      onPointerDown={[Function]}
                      onPointerMove={[Function]}
                      onPointerUp={[Function]}
                    />
                  </div>
                </div>
              </div>
            </Container>
            <Container
              className="content"
              innerRef={
                {
                  "current": <div
                    class="msg container fixedScrollbar content"
                    style="flex-direction: column;"
                  >
                    <div
                      class="msg container fixedScrollbar resultView"
                      style="flex-direction: column;"
                    />
                  </div>,
                }
              }
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDrop={[Function]}
              orientation="column"
            >
              <div
                className="msg container fixedScrollbar content"
                onDragEnter={[Function]}
                onDragLeave={[Function]}
                onDragOver={[Function]}
                onDrop={[Function]}
                style={
                  {
                    "alignItems": undefined,
                    "flexDirection": "column",
                    "flexWrap": undefined,
                    "justifyContent": undefined,
                  }
                }
              >
                <ResultView
                  onEdit={[Function]}
                  resultSet={
                    {
                      "columns": [],
                      "data": {
                        "currentPage": 0,
                        "executionInfo": {
                          "text": "All fine",
                          "type": 4,
                        },
                        "rows": [],
                      },
                      "resultId": "123",
                      "sql": "select 1",
                      "type": "resultSet",
                    }
                  }
                >
                  <Container
                    className="msg resultView"
                    orientation="column"
                  >
                    <div
                      className="msg container fixedScrollbar resultView"
                      style={
                        {
                          "alignItems": undefined,
                          "flexDirection": "column",
                          "flexWrap": undefined,
                          "justifyContent": undefined,
                        }
                      }
                    >
                      <Menu
                        id="cellContextMenu"
                        onItemClick={[Function]}
                        orientation="column"
                        placement="bottom-start"
                      >
                        <Popup
                          className="msg menu"
                          id="cellContextMenu"
                          onClose={[Function]}
                          onKeyDown={[Function]}
                          onOpen={[Function]}
                          orientation="column"
                          pinned={false}
                          placement="bottom-start"
                          showArrow={false}
                        >
                          <Portal
                            className="popupPortal"
                            id="cellContextMenu"
                            onClose={[Function]}
                            onKeyDown={[Function]}
                            onOpen={[Function]}
                          />
                        </Popup>
                      </Menu>
                    </div>
                  </Container>
                </ResultView>
              </div>
            </Container>
          </div>
        </Container>
      </Tabview>
      <ResultStatus
        executionInfo={
          {
            "text": "All fine",
            "type": 4,
          }
        }
      >
        <Container
          className="msg resultStatus"
          orientation="row"
        >
          <div
            className="msg container fixedScrollbar resultStatus"
            style={
              {
                "alignItems": undefined,
                "flexDirection": "row",
                "flexWrap": undefined,
                "justifyContent": undefined,
              }
            }
          >
            <Label>
              <label
                className="msg label"
                data-tooltip="expand"
                style={{}}
              >
                All fine
              </label>
            </Label>
          </div>
        </Container>
      </ResultStatus>
      <Menu
        id="actionMenu"
        onItemClick={[Function]}
        orientation="column"
        placement="bottom-start"
      >
        <Popup
          className="msg menu"
          id="actionMenu"
          onClose={[Function]}
          onKeyDown={[Function]}
          onOpen={[Function]}
          orientation="column"
          pinned={false}
          placement="bottom-start"
          showArrow={false}
        >
          <Portal
            className="popupPortal"
            id="actionMenu"
            onClose={[Function]}
            onKeyDown={[Function]}
            onOpen={[Function]}
          />
        </Popup>
      </Menu>
    </div>
  </Container>
</ResultTabView>
`;
