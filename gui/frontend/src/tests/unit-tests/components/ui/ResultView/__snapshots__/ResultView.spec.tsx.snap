// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Result View Tests Default Rendering 1`] = `
<ResultView
  resultSet={
    Object {
      "data": Object {
        "columns": Array [],
        "currentPage": 0,
        "requestId": "123",
        "rows": Array [],
      },
      "head": Object {
        "requestId": "123",
        "sql": "select 1",
      },
    }
  }
>
  <Container
    className="msg resultView"
    orientation="column"
    resultSet={
      Object {
        "data": Object {
          "columns": Array [],
          "currentPage": 0,
          "requestId": "123",
          "rows": Array [],
        },
        "head": Object {
          "requestId": "123",
          "sql": "select 1",
        },
      }
    }
  >
    <div
      className="msg container fixedScrollbar resultView"
      resultSet={
        Object {
          "data": Object {
            "columns": Array [],
            "currentPage": 0,
            "requestId": "123",
            "rows": Array [],
          },
          "head": Object {
            "requestId": "123",
            "sql": "select 1",
          },
        }
      }
      style={
        Object {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <TreeGrid
        columns={Array []}
        onCellContext={[Function]}
        onColumnResized={[Function]}
        options={
          Object {
            "alternatingRowBackgrounds": false,
            "horizontalGridLines": true,
            "layout": "fitColumns",
            "resizableRows": true,
            "selectionType": 3,
            "verticalGridLines": true,
          }
        }
        style={
          Object {
            "fontSize": "10pt",
          }
        }
        tableData={Array []}
      >
        <div
          className="msg treeGrid horizontalGrid verticalGrid"
          style={
            Object {
              "fontSize": "10pt",
            }
          }
        />
      </TreeGrid>
      <Menu
        id="schemaContextMenu"
        onItemClick={[Function]}
        orientation="column"
        placement="bottom-start"
      >
        <Popup
          className="msg menu"
          id="schemaContextMenu"
          onClose={[Function]}
          onKeyDown={[Function]}
          onOpen={[Function]}
          orientation="column"
          pinned={false}
          placement="bottom-start"
          showArrow={false}
        >
          <Portal
            id="schemaContextMenu"
            onClose={[Function]}
            onKeyDown={[Function]}
            onOpen={[Function]}
          />
        </Popup>
      </Menu>
    </div>
  </Container>
</ResultView>
`;
