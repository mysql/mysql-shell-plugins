// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Result View Tests Render with Columns 1`] = `
<ResultView
  editModeActive={false}
  editable={false}
  resultSet={
    {
      "columns": [
        {
          "autoIncrement": false,
          "dataType": {
            "type": 5,
          },
          "field": "0",
          "inPK": false,
          "nullable": false,
          "title": "col1",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 0,
          },
          "field": "1",
          "inPK": false,
          "nullable": false,
          "title": "col2",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 1,
          },
          "field": "2",
          "inPK": false,
          "nullable": false,
          "title": "col3",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 2,
          },
          "field": "3",
          "inPK": false,
          "nullable": false,
          "title": "col4",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 3,
          },
          "field": "4",
          "inPK": false,
          "nullable": false,
          "title": "col5",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 4,
          },
          "field": "5",
          "inPK": false,
          "nullable": false,
          "title": "col6",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 5,
          },
          "field": "6",
          "inPK": false,
          "nullable": false,
          "title": "col7",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 6,
          },
          "field": "7",
          "inPK": false,
          "nullable": false,
          "title": "col8",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 7,
          },
          "field": "8",
          "inPK": false,
          "nullable": false,
          "title": "col9",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 8,
          },
          "field": "9",
          "inPK": false,
          "nullable": false,
          "title": "col10",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 9,
          },
          "field": "10",
          "inPK": false,
          "nullable": false,
          "title": "col11",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 10,
          },
          "field": "11",
          "inPK": false,
          "nullable": false,
          "title": "col12",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 11,
          },
          "field": "12",
          "inPK": false,
          "nullable": false,
          "title": "col13",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 12,
          },
          "field": "13",
          "inPK": false,
          "nullable": false,
          "title": "col14",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 13,
          },
          "field": "14",
          "inPK": false,
          "nullable": false,
          "title": "col15",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 14,
          },
          "field": "15",
          "inPK": false,
          "nullable": false,
          "title": "col16",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 15,
          },
          "field": "16",
          "inPK": false,
          "nullable": false,
          "title": "col17",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 16,
          },
          "field": "17",
          "inPK": false,
          "nullable": false,
          "title": "col18",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 17,
          },
          "field": "18",
          "inPK": false,
          "nullable": false,
          "title": "col19",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 18,
          },
          "field": "19",
          "inPK": false,
          "nullable": false,
          "title": "col20",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 19,
          },
          "field": "20",
          "inPK": false,
          "nullable": false,
          "title": "col21",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 20,
          },
          "field": "21",
          "inPK": false,
          "nullable": false,
          "title": "col22",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 21,
          },
          "field": "22",
          "inPK": false,
          "nullable": false,
          "title": "col23",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 22,
          },
          "field": "23",
          "inPK": false,
          "nullable": false,
          "title": "col24",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 23,
          },
          "field": "24",
          "inPK": false,
          "nullable": false,
          "title": "col25",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 24,
          },
          "field": "25",
          "inPK": false,
          "nullable": false,
          "title": "col26",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 25,
          },
          "field": "26",
          "inPK": false,
          "nullable": false,
          "title": "col27",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 26,
          },
          "field": "27",
          "inPK": false,
          "nullable": false,
          "title": "col28",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 27,
          },
          "field": "28",
          "inPK": false,
          "nullable": false,
          "title": "col29",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 28,
          },
          "field": "29",
          "inPK": false,
          "nullable": false,
          "title": "col30",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 29,
          },
          "field": "30",
          "inPK": false,
          "nullable": false,
          "title": "col31",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 30,
          },
          "field": "31",
          "inPK": false,
          "nullable": false,
          "title": "col32",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 31,
          },
          "field": "32",
          "inPK": false,
          "nullable": false,
          "title": "col33",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 32,
          },
          "field": "33",
          "inPK": false,
          "nullable": false,
          "title": "col34",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 33,
          },
          "field": "34",
          "inPK": false,
          "nullable": false,
          "title": "col35",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 34,
          },
          "field": "35",
          "inPK": false,
          "nullable": false,
          "title": "col36",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 35,
          },
          "field": "36",
          "inPK": false,
          "nullable": false,
          "title": "col37",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 36,
          },
          "field": "37",
          "inPK": false,
          "nullable": false,
          "title": "col38",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 37,
          },
          "field": "38",
          "inPK": false,
          "nullable": false,
          "title": "col39",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 38,
          },
          "field": "39",
          "inPK": false,
          "nullable": false,
          "title": "col40",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 39,
          },
          "field": "40",
          "inPK": false,
          "nullable": false,
          "title": "col41",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 40,
          },
          "field": "41",
          "inPK": false,
          "nullable": false,
          "title": "col42",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 41,
          },
          "field": "42",
          "inPK": false,
          "nullable": false,
          "title": "col43",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 42,
          },
          "field": "43",
          "inPK": false,
          "nullable": false,
          "title": "col44",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 43,
          },
          "field": "44",
          "inPK": false,
          "nullable": false,
          "title": "col45",
        },
        {
          "autoIncrement": false,
          "dataType": {
            "type": 44,
          },
          "field": "45",
          "inPK": false,
          "nullable": false,
          "title": "col46",
        },
      ],
      "data": {
        "currentPage": 0,
        "executionInfo": {
          "text": "Endless Possibilities",
          "type": 2,
        },
        "rows": [],
      },
      "fullTableName": "test",
      "resultId": "123",
      "sql": "select 1",
      "type": "resultSet",
      "updatable": false,
    }
  }
>
  <Container
    className="msg resultView"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar resultView"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <TreeGrid
        onCellContext={[Function]}
        onColumnResized={[Function]}
        onFormatRow={[Function]}
        onVerticalScroll={[Function]}
        options={
          {
            "alternatingRowBackgrounds": false,
            "horizontalGridLines": true,
            "layout": "fitData",
            "resizableRows": true,
            "selectionType": 3,
            "verticalGridLines": true,
          }
        }
      >
        <div
          className="msg treeGrid horizontalGrid verticalGrid"
        />
      </TreeGrid>
      <Container
        className="actionHost"
        orientation="row"
      >
        <div
          className="msg container fixedScrollbar actionHost"
          style={
            {
              "alignItems": undefined,
              "flexDirection": "row",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        />
      </Container>
      <FieldEditor>
        <ValueEditDialog
          id="fieldEditor"
          onClose={[Function]}
          onValidate={[Function]}
        >
          <Dialog
            actions={
              {
                "begin": [],
                "end": [
                  <Button
                    caption="OK"
                    disabled={false}
                    id="ok"
                    onClick={[Function]}
                  />,
                  <Button
                    caption="Cancel"
                    id="cancel"
                    onClick={[Function]}
                  />,
                ],
              }
            }
            caption={
              <k>
                <Icon
                  disabled={false}
                  src={389}
                />
                <Label />
              </k>
            }
            className="msg valueEditDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Grid
                columnGap={16}
                columns={8}
                id="contentGrid"
                rowGap={16}
              />
            }
            id="fieldEditor"
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              id="fieldEditor"
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
          <Menu
            onItemClick={[Function]}
            orientation="column"
            placement="right-start"
          >
            <Popup
              className="msg menu"
              onClose={[Function]}
              onKeyDown={[Function]}
              onOpen={[Function]}
              orientation="column"
              pinned={false}
              placement="right-start"
              showArrow={false}
            >
              <Portal
                className="popupPortal"
                onClose={[Function]}
                onKeyDown={[Function]}
                onOpen={[Function]}
              />
            </Popup>
          </Menu>
        </ValueEditDialog>
      </FieldEditor>
      <Menu
        id="cellContextMenu"
        onItemClick={[Function]}
        orientation="column"
        placement="bottom-start"
      >
        <Popup
          className="msg menu"
          id="cellContextMenu"
          onClose={[Function]}
          onKeyDown={[Function]}
          onOpen={[Function]}
          orientation="column"
          pinned={false}
          placement="bottom-start"
          showArrow={false}
        >
          <Portal
            className="popupPortal"
            id="cellContextMenu"
            onClose={[Function]}
            onKeyDown={[Function]}
            onOpen={[Function]}
          />
        </Popup>
      </Menu>
    </div>
  </Container>
</ResultView>
`;

exports[`Result View Tests Render with Error/Response 1`] = `
<ResultView
  editModeActive={false}
  editable={false}
  resultSet={
    {
      "columns": [],
      "data": {
        "currentPage": 0,
        "executionInfo": {
          "text": "Error",
          "type": 0,
        },
        "rows": [],
      },
      "fullTableName": "test",
      "resultId": "123",
      "sql": "select 1",
      "type": "resultSet",
      "updatable": false,
    }
  }
>
  <Container
    className="msg resultView"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar resultView"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Container
        className="actionHost"
        orientation="row"
      >
        <div
          className="msg container fixedScrollbar actionHost"
          style={
            {
              "alignItems": undefined,
              "flexDirection": "row",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        />
      </Container>
      <Menu
        id="cellContextMenu"
        onItemClick={[Function]}
        orientation="column"
        placement="bottom-start"
      >
        <Popup
          className="msg menu"
          id="cellContextMenu"
          onClose={[Function]}
          onKeyDown={[Function]}
          onOpen={[Function]}
          orientation="column"
          pinned={false}
          placement="bottom-start"
          showArrow={false}
        >
          <Portal
            className="popupPortal"
            id="cellContextMenu"
            onClose={[Function]}
            onKeyDown={[Function]}
            onOpen={[Function]}
          />
        </Popup>
      </Menu>
    </div>
  </Container>
</ResultView>
`;

exports[`Result View Tests Standard Rendering 1`] = `
<ResultView
  editModeActive={false}
  editable={false}
  resultSet={
    {
      "columns": [],
      "data": {
        "currentPage": 0,
        "rows": [],
      },
      "fullTableName": "test",
      "resultId": "123",
      "sql": "select 1",
      "type": "resultSet",
      "updatable": false,
    }
  }
>
  <Container
    className="msg resultView"
    orientation="column"
  >
    <div
      className="msg container fixedScrollbar resultView"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "column",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <TreeGrid
        onCellContext={[Function]}
        onColumnResized={[Function]}
        onFormatRow={[Function]}
        onVerticalScroll={[Function]}
        options={
          {
            "alternatingRowBackgrounds": false,
            "horizontalGridLines": true,
            "layout": "fitData",
            "resizableRows": true,
            "selectionType": 3,
            "verticalGridLines": true,
          }
        }
      >
        <div
          className="msg treeGrid horizontalGrid verticalGrid"
        />
      </TreeGrid>
      <Container
        className="actionHost"
        orientation="row"
      >
        <div
          className="msg container fixedScrollbar actionHost"
          style={
            {
              "alignItems": undefined,
              "flexDirection": "row",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        />
      </Container>
      <FieldEditor>
        <ValueEditDialog
          id="fieldEditor"
          onClose={[Function]}
          onValidate={[Function]}
        >
          <Dialog
            actions={
              {
                "begin": [],
                "end": [
                  <Button
                    caption="OK"
                    disabled={false}
                    id="ok"
                    onClick={[Function]}
                  />,
                  <Button
                    caption="Cancel"
                    id="cancel"
                    onClick={[Function]}
                  />,
                ],
              }
            }
            caption={
              <k>
                <Icon
                  disabled={false}
                  src={389}
                />
                <Label />
              </k>
            }
            className="msg valueEditDialog"
            container={
              <body
                theme="dark"
              />
            }
            content={
              <Grid
                columnGap={16}
                columns={8}
                id="contentGrid"
                rowGap={16}
              />
            }
            id="fieldEditor"
            onClose={[Function]}
          >
            <Portal
              container={
                <body
                  theme="dark"
                />
              }
              id="fieldEditor"
              onClose={[Function]}
              onOpen={[Function]}
            />
          </Dialog>
          <Menu
            onItemClick={[Function]}
            orientation="column"
            placement="right-start"
          >
            <Popup
              className="msg menu"
              onClose={[Function]}
              onKeyDown={[Function]}
              onOpen={[Function]}
              orientation="column"
              pinned={false}
              placement="right-start"
              showArrow={false}
            >
              <Portal
                className="popupPortal"
                onClose={[Function]}
                onKeyDown={[Function]}
                onOpen={[Function]}
              />
            </Popup>
          </Menu>
        </ValueEditDialog>
      </FieldEditor>
      <Menu
        id="cellContextMenu"
        onItemClick={[Function]}
        orientation="column"
        placement="bottom-start"
      >
        <Popup
          className="msg menu"
          id="cellContextMenu"
          onClose={[Function]}
          onKeyDown={[Function]}
          onOpen={[Function]}
          orientation="column"
          pinned={false}
          placement="bottom-start"
          showArrow={false}
        >
          <Portal
            className="popupPortal"
            id="cellContextMenu"
            onClose={[Function]}
            onKeyDown={[Function]}
            onOpen={[Function]}
          />
        </Popup>
      </Menu>
    </div>
  </Container>
</ResultView>
`;
