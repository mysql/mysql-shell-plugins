// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Grid component test Standard Rendering 1`] = `
<Grid
  columnGap={8}
  columns={
    Array [
      220,
      40,
    ]
  }
  id="loginDialogControls"
>
  <div
    className="msg grid"
    id="loginDialogControls"
    style={
      Object {
        "columnGap": "8px",
        "gridTemplateColumns": "220px 40px",
        "rowGap": undefined,
      }
    }
  >
    <GridCell>
      <Container
        className="msg gridCell"
        orientation="row"
        style={Object {}}
      >
        <div
          className="msg container fixedScrollbar gridCell"
          style={
            Object {
              "alignItems": undefined,
              "flexDirection": "row",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        >
          <Input
            id="loginUsername"
            placeholder="Username"
            spellCheck={true}
          >
            <input
              className="msg input"
              id="loginUsername"
              onKeyDown={[Function]}
              oninput={[Function]}
              placeholder="Username"
              spellCheck={true}
              style={
                Object {
                  "textAlign": undefined,
                }
              }
              type="text"
            />
          </Input>
        </div>
      </Container>
    </GridCell>
    <GridCell
      as="div"
      columnSpan={2}
      rowSpan={2}
    >
      <div
        className="msg gridCell"
        style={
          Object {
            "gridColumn": "span 2",
            "gridRow": "span 2",
          }
        }
      />
    </GridCell>
    <GridCell>
      <Container
        className="msg gridCell"
        orientation="row"
        style={Object {}}
      >
        <div
          className="msg container fixedScrollbar gridCell"
          style={
            Object {
              "alignItems": undefined,
              "flexDirection": "row",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        >
          <Input
            id="loginPassword"
            password={true}
            placeholder="Password"
            spellCheck={true}
          >
            <input
              className="msg input"
              id="loginPassword"
              onKeyDown={[Function]}
              oninput={[Function]}
              placeholder="Password"
              spellCheck={true}
              style={
                Object {
                  "textAlign": undefined,
                }
              }
              type="password"
            />
          </Input>
        </div>
      </Container>
    </GridCell>
    <GridCell>
      <Container
        className="msg gridCell"
        orientation="row"
        style={Object {}}
      >
        <div
          className="msg container fixedScrollbar gridCell"
          style={
            Object {
              "alignItems": undefined,
              "flexDirection": "row",
              "flexWrap": undefined,
              "justifyContent": undefined,
            }
          }
        >
          <Button
            id="loginButton"
            round={true}
          >
            <button
              className="msg button round"
              id="loginButton"
              onMouseDown={[Function]}
              style={
                Object {
                  "flexDirection": undefined,
                }
              }
              tabIndex={0}
            >
              <Icon
                disabled={false}
                src="chevron-right.svg"
              >
                <div
                  className="msg icon"
                  style={
                    Object {
                      "WebkitMaskImage": "url(chevron-right.svg)",
                      "backgroundColor": undefined,
                      "height": undefined,
                      "maskImage": "url(chevron-right.svg)",
                      "width": undefined,
                    }
                  }
                />
              </Icon>
            </button>
          </Button>
        </div>
      </Container>
    </GridCell>
  </div>
</Grid>
`;
