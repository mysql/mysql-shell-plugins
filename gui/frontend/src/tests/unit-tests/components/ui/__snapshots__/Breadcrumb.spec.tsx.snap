// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Breadcrumb render testing Test Breadcrumb (Snapshot) 1 1`] = `
<Breadcrumb
  className="dropShadow"
  id="breadcrumb1"
  path={
    [
      "root",
      "folder",
      "subfolder",
    ]
  }
  separator="❯"
>
  <Container
    className="msg breadcrumb verticalCenterContent dropShadow"
    id="breadcrumb1"
    orientation="row"
  >
    <div
      className="msg container fixedScrollbar breadcrumb verticalCenterContent dropShadow"
      id="breadcrumb1"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "row",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Button
        className="breadcrumbItem"
        id="root"
        key="breadcrumb10"
        onClick={[Function]}
      >
        <div
          className="msg button breadcrumbItem"
          id="root"
          onClick={[Function]}
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          root
        </div>
      </Button>
      <Label
        caption="❯"
        className="separator"
      >
        <label
          className="msg label separator"
          data-tooltip="expand"
          style={{}}
        >
          ❯
        </label>
      </Label>
      <Button
        className="breadcrumbItem"
        id="folder"
        key="breadcrumb11"
        onClick={[Function]}
      >
        <div
          className="msg button breadcrumbItem"
          id="folder"
          onClick={[Function]}
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          folder
        </div>
      </Button>
      <Label
        caption="❯"
        className="separator"
      >
        <label
          className="msg label separator"
          data-tooltip="expand"
          style={{}}
        >
          ❯
        </label>
      </Label>
      <Button
        className="breadcrumbItem"
        id="subfolder"
        key="breadcrumb12"
        onClick={[Function]}
      >
        <div
          className="msg button breadcrumbItem"
          id="subfolder"
          onClick={[Function]}
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          subfolder
        </div>
      </Button>
      <Label
        caption="❯"
        className="separator"
      >
        <label
          className="msg label separator"
          data-tooltip="expand"
          style={{}}
        >
          ❯
        </label>
      </Label>
      <Button
        caption="..."
        className="picker"
        key="picker"
      >
        <div
          caption="..."
          className="msg button picker"
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          ...
        </div>
      </Button>
    </div>
  </Container>
</Breadcrumb>
`;

exports[`Breadcrumb render testing Test Breadcrumb (Snapshot) 2 1`] = `
<Breadcrumb
  id="breadcrumb2"
  path={
    [
      "root",
      "folder",
      "subfolder",
      "subfolder2",
    ]
  }
  separator="☞"
>
  <Container
    className="msg breadcrumb verticalCenterContent"
    id="breadcrumb2"
    orientation="row"
  >
    <div
      className="msg container fixedScrollbar breadcrumb verticalCenterContent"
      id="breadcrumb2"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "row",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Button
        className="breadcrumbItem"
        id="root"
        key="breadcrumb20"
        onClick={[Function]}
      >
        <div
          className="msg button breadcrumbItem"
          id="root"
          onClick={[Function]}
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          root
        </div>
      </Button>
      <Label
        caption="☞"
        className="separator"
      >
        <label
          className="msg label separator"
          data-tooltip="expand"
          style={{}}
        >
          ☞
        </label>
      </Label>
      <Button
        className="breadcrumbItem"
        id="folder"
        key="breadcrumb21"
        onClick={[Function]}
      >
        <div
          className="msg button breadcrumbItem"
          id="folder"
          onClick={[Function]}
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          folder
        </div>
      </Button>
      <Label
        caption="☞"
        className="separator"
      >
        <label
          className="msg label separator"
          data-tooltip="expand"
          style={{}}
        >
          ☞
        </label>
      </Label>
      <Button
        className="breadcrumbItem"
        id="subfolder"
        key="breadcrumb22"
        onClick={[Function]}
      >
        <div
          className="msg button breadcrumbItem"
          id="subfolder"
          onClick={[Function]}
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          subfolder
        </div>
      </Button>
      <Label
        caption="☞"
        className="separator"
      >
        <label
          className="msg label separator"
          data-tooltip="expand"
          style={{}}
        >
          ☞
        </label>
      </Label>
      <Button
        className="breadcrumbItem"
        id="subfolder2"
        key="breadcrumb23"
        onClick={[Function]}
      >
        <div
          className="msg button breadcrumbItem"
          id="subfolder2"
          onClick={[Function]}
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          subfolder2
        </div>
      </Button>
      <Label
        caption="☞"
        className="separator"
      >
        <label
          className="msg label separator"
          data-tooltip="expand"
          style={{}}
        >
          ☞
        </label>
      </Label>
      <Button
        caption="..."
        className="picker"
        key="picker"
      >
        <div
          caption="..."
          className="msg button picker"
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "flexDirection": undefined,
            }
          }
          tabIndex={0}
        >
          ...
        </div>
      </Button>
    </div>
  </Container>
</Breadcrumb>
`;

exports[`Breadcrumb render testing Test Breadcrumb (Snapshot) 3 1`] = `
<Breadcrumb
  id="breadcrumb3"
  path={
    [
      "",
    ]
  }
  separator="❯"
>
  <Container
    className="msg breadcrumb verticalCenterContent"
    id="breadcrumb3"
    orientation="row"
  >
    <div
      className="msg container fixedScrollbar breadcrumb verticalCenterContent"
      id="breadcrumb3"
      style={
        {
          "alignItems": undefined,
          "flexDirection": "row",
          "flexWrap": undefined,
          "justifyContent": undefined,
        }
      }
    >
      <Button
        style={
          {
            "backgroundColor": "white",
            "color": "white",
          }
        }
      >
        <div
          className="msg button"
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "backgroundColor": "white",
              "color": "white",
            }
          }
          tabIndex={0}
        >
          <span
            style={
              {
                "color": "#00758f",
              }
            }
          >
            My
          </span>
          <span
            style={
              {
                "color": "#f29111",
              }
            }
          >
            SQL
          </span>
        </div>
      </Button>
      <Button
        style={
          {
            "backgroundColor": "#505050",
          }
        }
      >
        <div
          className="msg button"
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "backgroundColor": "#505050",
            }
          }
          tabIndex={0}
        >
          <Label>
            <label
              className="msg label"
              data-tooltip="expand"
              style={{}}
            >
              localhost:3307
            </label>
          </Label>
        </div>
      </Button>
      <Button
        caption="mysql"
        style={
          {
            "backgroundColor": "gray",
          }
        }
      >
        <div
          caption="mysql"
          className="msg button"
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "backgroundColor": "gray",
            }
          }
          tabIndex={0}
        >
          mysql
        </div>
      </Button>
      <Button
        caption="SQL"
        style={
          {
            "backgroundColor": "darkorange",
            "color": "white",
          }
        }
      >
        <div
          caption="SQL"
          className="msg button"
          onMouseDown={[Function]}
          role="button"
          style={
            {
              "backgroundColor": "darkorange",
              "color": "white",
            }
          }
          tabIndex={0}
        >
          SQL
        </div>
      </Button>
    </div>
  </Container>
</Breadcrumb>
`;
