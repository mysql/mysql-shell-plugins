-- Copyright (c) 2022, Oracle and/or its affiliates.
--
-- MySQL Script generated by MySQL Workbench
-- Wed Apr 21 12:56:32 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Table `mysql_rest_service_metadata`.`user_hierarchy`
-- -----------------------------------------------------
ALTER TABLE `mysql_rest_service_metadata`.`user_hierarchy`
    RENAME COLUMN reporting_user_id TO reporting_to_user_id;

-- -----------------------------------------------------
-- Table `mysql_rest_service_metadata`.`user_group_hierarchy`
-- -----------------------------------------------------
ALTER TABLE `mysql_rest_service_metadata`.`user_group_hierarchy`
    RENAME COLUMN sub_group_id TO parent_group_id;

-- -----------------------------------------------------
-- Table `mysql_rest_service_metadata`.`db_object_row_group_security`
-- -----------------------------------------------------
ALTER TABLE `mysql_rest_service_metadata`.`db_object_row_group_security`
    RENAME COLUMN `use_highest_group_level` TO `level`;

ALTER TABLE `mysql_rest_service_metadata`.`db_object_row_group_security`
    MODIFY `level` INT UNSIGNED NOT NULL DEFAULT 0;

ALTER TABLE `mysql_rest_service_metadata`.`db_object_row_group_security`
    ADD COLUMN `match_level`  ENUM('HIGHER', 'EQUAL OR HIGHER', 'EQUAL', 'LOWER OR EQUAL', 'LOWER') NOT NULL DEFAULT 'HIGHER' AFTER `level`;

-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`user_hierarchy_AFTER_INSERT_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`user_hierarchy_AFTER_INSERT_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`user_hierarchy_AFTER_INSERT_AUDIT_LOG` AFTER INSERT ON `user_hierarchy` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "user_hierarchy",
        "INSERT",
        NULL,
        JSON_OBJECT(
            "auth_user_id", NEW.auth_user_id,
            "reporting_to_user_id", NEW.reporting_to_user_id,
            "user_hierarchy_type_id", NEW.user_hierarchy_type_id),
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`user_hierarchy_AFTER_UPDATE_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`user_hierarchy_AFTER_UPDATE_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`user_hierarchy_AFTER_UPDATE_AUDIT_LOG` AFTER UPDATE ON `user_hierarchy` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "user_hierarchy",
        "UPDATE",
        JSON_OBJECT(
            "auth_user_id", OLD.auth_user_id,
            "reporting_to_user_id", OLD.reporting_to_user_id,
            "user_hierarchy_type_id", OLD.user_hierarchy_type_id),
        JSON_OBJECT(
            "auth_user_id", NEW.auth_user_id,
            "reporting_to_user_id", NEW.reporting_to_user_id,
            "user_hierarchy_type_id", NEW.user_hierarchy_type_id),
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`user_hierarchy_AFTER_DELETE_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`user_hierarchy_AFTER_DELETE_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`user_hierarchy_AFTER_DELETE_AUDIT_LOG` AFTER DELETE ON `user_hierarchy` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "user_hierarchy",
        "DELETE",
        JSON_OBJECT(
            "auth_user_id", OLD.auth_user_id,
            "reporting_to_user_id", OLD.reporting_to_user_id,
            "user_hierarchy_type_id", OLD.user_hierarchy_type_id),
        NULL,
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_INSERT_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_INSERT_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_INSERT_AUDIT_LOG` AFTER INSERT ON `user_group_hierarchy` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "user_group_hierarchy",
        "INSERT",
        NULL,
        JSON_OBJECT(
            "user_group_id", NEW.user_group_id,
            "parent_group_id", NEW.parent_group_id,
            "group_hierarchy_type_id", NEW.group_hierarchy_type_id,
            "level", NEW.level),
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_UPDATE_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_UPDATE_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_UPDATE_AUDIT_LOG` AFTER UPDATE ON `user_group_hierarchy` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "user_group_hierarchy",
        "UPDATE",
        JSON_OBJECT(
            "user_group_id", OLD.user_group_id,
            "parent_group_id", OLD.parent_group_id,
            "group_hierarchy_type_id", OLD.group_hierarchy_type_id,
            "level", OLD.level),
        JSON_OBJECT(
            "user_group_id", NEW.user_group_id,
            "parent_group_id", NEW.parent_group_id,
            "group_hierarchy_type_id", NEW.group_hierarchy_type_id,
            "level", NEW.level),
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_DELETE_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_DELETE_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`user_group_hierarchy_AFTER_DELETE_AUDIT_LOG` AFTER DELETE ON `user_group_hierarchy` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "user_group_hierarchy",
        "DELETE",
        JSON_OBJECT(
            "user_group_id", OLD.user_group_id,
            "parent_group_id", OLD.parent_group_id,
            "group_hierarchy_type_id", OLD.group_hierarchy_type_id,
            "level", OLD.level),
        NULL,
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_INSERT_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_INSERT_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_INSERT_AUDIT_LOG` AFTER INSERT ON `db_object_row_group_security` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "db_object_row_group_security",
        "INSERT",
        NULL,
        JSON_OBJECT(
            "db_object_id", NEW.db_object_id,
            "group_hierarchy_type_id", NEW.group_hierarchy_type_id,
            "row_group_ownership_column", NEW.row_group_ownership_column,
            "level", NEW.level,
            "match_level", NEW.match_level),
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_UPDATE_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_UPDATE_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_UPDATE_AUDIT_LOG` AFTER UPDATE ON `db_object_row_group_security` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "db_object_row_group_security",
        "UPDATE",
        JSON_OBJECT(
            "db_object_id", OLD.db_object_id,
            "group_hierarchy_type_id", OLD.group_hierarchy_type_id,
            "row_group_ownership_column", OLD.row_group_ownership_column,
            "level", OLD.level,
            "match_level", OLD.match_level),
        JSON_OBJECT(
            "db_object_id", NEW.db_object_id,
            "group_hierarchy_type_id", NEW.group_hierarchy_type_id,
            "row_group_ownership_column", NEW.row_group_ownership_column,
            "level", NEW.level,
            "match_level", NEW.match_level),
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$


-- -----------------------------------------------------
-- Trigger `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_DELETE_AUDIT_LOG`
-- -----------------------------------------------------
DROP TRIGGER `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_DELETE_AUDIT_LOG`;
DELIMITER $$
CREATE TRIGGER `mysql_rest_service_metadata`.`db_object_row_group_security_AFTER_DELETE_AUDIT_LOG` AFTER DELETE ON `db_object_row_group_security` FOR EACH ROW
BEGIN
	INSERT INTO `mysql_rest_service_metadata`.`audit_log` (
		table_name, dml_type, old_row_data, new_row_data, changed_by, changed_at)
	VALUES (
        "db_object_row_group_security",
        "DELETE",
        JSON_OBJECT(
            "db_object_id", OLD.db_object_id,
            "group_hierarchy_type_id", OLD.group_hierarchy_type_id,
            "row_group_ownership_column", OLD.row_group_ownership_column,
            "level", OLD.level,
            "match_level", OLD.match_level),
        NULL,
        CURRENT_USER(),
        CURRENT_TIMESTAMP
    );
END$$

-- -----------------------------------------------------
-- View `mysql_rest_service_metadata`.`schema_version`
-- -----------------------------------------------------
USE `mysql_rest_service_metadata`;
CREATE  OR REPLACE SQL SECURITY INVOKER VIEW schema_version (major, minor, patch) AS SELECT 0, 0, 23;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
